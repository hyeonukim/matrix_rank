Search.setIndex({"docnames": ["backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/array/Variable", "data_classes/array/conversions", "data_classes/array/conversions/args_to_container", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_function_arguments", "deep_dive/11_submodule_helpers", "deep_dive/12_docstrings", "deep_dive/13_docstring_examples", "deep_dive/14_array_api_tests", "deep_dive/15_ivy_tests", "deep_dive/16_ivy_frontends", "deep_dive/17_ivy_frontends_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_formatting", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/gelu/gelu_array", "functional/ivy/activations/gelu/gelu_container", "functional/ivy/activations/gelu/gelu_functional", "functional/ivy/activations/gelu/static_gelu_container", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/leaky_relu/leaky_relu_array", "functional/ivy/activations/leaky_relu/leaky_relu_container", "functional/ivy/activations/leaky_relu/leaky_relu_functional", "functional/ivy/activations/leaky_relu/static_leaky_relu_container", "functional/ivy/activations/relu", "functional/ivy/activations/relu/relu_array", "functional/ivy/activations/relu/relu_container", "functional/ivy/activations/relu/relu_functional", "functional/ivy/activations/relu/static_relu_container", "functional/ivy/activations/sigmoid", "functional/ivy/activations/sigmoid/sigmoid_array", "functional/ivy/activations/sigmoid/sigmoid_container", "functional/ivy/activations/sigmoid/sigmoid_functional", "functional/ivy/activations/sigmoid/static_sigmoid_container", "functional/ivy/activations/softmax", "functional/ivy/activations/softmax/softmax_array", "functional/ivy/activations/softmax/softmax_container", "functional/ivy/activations/softmax/softmax_functional", "functional/ivy/activations/softmax/static_softmax_container", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/activations/tanh", "functional/ivy/activations/tanh/static_tanh_container", "functional/ivy/activations/tanh/tanh_array", "functional/ivy/activations/tanh/tanh_container", "functional/ivy/activations/tanh/tanh_functional", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultUintDtype:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/default_uint_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_array", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype/static_dtype_container", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_bool_dtype", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/is_uint_dtype", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/set_default_uint_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/unset_default_uint_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev/dev_array", "functional/ivy/device/dev/dev_container", "functional/ivy/device/dev/dev_functional", "functional/ivy/device/dev/static_dev_container", "functional/ivy/device/dev_util", "functional/ivy/device/function_supported_devices", "functional/ivy/device/function_unsupported_devices", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/to_device/static_to_device_container", "functional/ivy/device/to_device/to_device_array", "functional/ivy/device/to_device/to_device_container", "functional/ivy/device/to_device/to_device_functional", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acos/static_acos_container", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/acosh/static_acosh_container", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asin/static_asin_container", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan/static_atan_container", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atan2/static_atan2_container", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/atanh/static_atanh_container", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/ceil/static_ceil_container", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/cosh/static_cosh_container", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/equal/static_equal_container", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/erf/static_erf_container", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/exp/static_exp_container", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/expm1/static_expm1_container", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor/static_floor_container", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/floor_divide/static_floor_divide_container", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater/static_greater_container", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/greater_equal/static_greater_equal_container", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isfinite/static_isfinite_container", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isinf/static_isinf_container", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/isnan/static_isnan_container", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less/static_less_container", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/less_equal/static_less_equal_container", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log/static_log_container", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log10/static_log10_container", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log1p/static_log1p_container", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/log2/static_log2_container", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logaddexp/static_logaddexp_container", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_and/static_logical_and_container", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_not/static_logical_not_container", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_or/static_logical_or_container", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/logical_xor/static_logical_xor_container", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/negative/static_negative_container", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/not_equal/static_not_equal_container", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/positive/static_positive_container", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/pow/static_pow_container", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/remainder/static_remainder_container", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/round/static_round_container", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/sqrt/static_sqrt_container", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/square/static_square_container", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/static_trunc_container", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/function_supported_devices_and_dtypes", "functional/ivy/general/function_unsupported_devices_and_dtypes", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_array_mode", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_nestable_mode", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_array_mode", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_nestable_mode", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_array_mode", "functional/ivy/general/unset_nestable_mode", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_step/static_adam_step_container", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/adam_update/static_adam_update_container", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/execute_with_gradients/execute_with_gradients_functional", "functional/ivy/gradients/execute_with_gradients/static_execute_with_gradients_container", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_array", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lamb_update/static_lamb_update_container", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/lars_update/static_lars_update_container", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable/static_variable_container", "functional/ivy/gradients/variable/variable_array", "functional/ivy/gradients/variable/variable_container", "functional/ivy/gradients/variable/variable_functional", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d/conv1d_array", "functional/ivy/layers/conv1d/conv1d_container", "functional/ivy/layers/conv1d/conv1d_functional", "functional/ivy/layers/conv1d/static_conv1d_container", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_container", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/cross/static_cross_container", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_container", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/det/static_det_container", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_container", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/diagonal/static_diagonal_container", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_container", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_container", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/inv/static_inv_container", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_power/matrix_power_container", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_container", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/outer/static_outer_container", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_container", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/qr/static_qr_container", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/slogdet/slogdet_container", "functional/ivy/linear_algebra/slogdet/slogdet_functional", "functional/ivy/linear_algebra/slogdet/static_slogdet_container", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_container", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/solve/static_solve_container", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/static_svd_container", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_container", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/static_svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/static_tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_array", "functional/ivy/linear_algebra/tensordot/tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/static_trace_container", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_container", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/static_vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/repeat/static_repeat_container", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/reshape/static_reshape_container", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/norms/layer_norm/static_layer_norm_container", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_array", "functional/ivy/random/randint/randint_container", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_normal/random_normal_array", "functional/ivy/random/random_normal/random_normal_container", "functional/ivy/random/random_normal/random_normal_functional", "functional/ivy/random/random_normal/static_random_normal_container", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_array", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/array/Variable.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_container.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_function_arguments.rst", "deep_dive/11_submodule_helpers.rst", "deep_dive/12_docstrings.rst", "deep_dive/13_docstring_examples.rst", "deep_dive/14_array_api_tests.rst", "deep_dive/15_ivy_tests.rst", "deep_dive/16_ivy_frontends.rst", "deep_dive/17_ivy_frontends_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_formatting.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/gelu/gelu_array.rst", "functional/ivy/activations/gelu/gelu_container.rst", "functional/ivy/activations/gelu/gelu_functional.rst", "functional/ivy/activations/gelu/static_gelu_container.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/leaky_relu/leaky_relu_array.rst", "functional/ivy/activations/leaky_relu/leaky_relu_container.rst", "functional/ivy/activations/leaky_relu/leaky_relu_functional.rst", "functional/ivy/activations/leaky_relu/static_leaky_relu_container.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/relu/relu_array.rst", "functional/ivy/activations/relu/relu_container.rst", "functional/ivy/activations/relu/relu_functional.rst", "functional/ivy/activations/relu/static_relu_container.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/sigmoid/sigmoid_array.rst", "functional/ivy/activations/sigmoid/sigmoid_container.rst", "functional/ivy/activations/sigmoid/sigmoid_functional.rst", "functional/ivy/activations/sigmoid/static_sigmoid_container.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softmax/softmax_array.rst", "functional/ivy/activations/softmax/softmax_container.rst", "functional/ivy/activations/softmax/softmax_functional.rst", "functional/ivy/activations/softmax/static_softmax_container.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/activations/tanh/static_tanh_container.rst", "functional/ivy/activations/tanh/tanh_array.rst", "functional/ivy/activations/tanh/tanh_container.rst", "functional/ivy/activations/tanh/tanh_functional.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultUintDtype:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional.rst", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/default_uint_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_array.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype/static_dtype_container.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional.rst", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional.rst", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_bool_dtype.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional.rst", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional.rst", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/set_default_uint_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/unset_default_uint_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev/dev_array.rst", "functional/ivy/device/dev/dev_container.rst", "functional/ivy/device/dev/dev_functional.rst", "functional/ivy/device/dev/static_dev_container.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/function_supported_devices.rst", "functional/ivy/device/function_unsupported_devices.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/to_device/static_to_device_container.rst", "functional/ivy/device/to_device/to_device_array.rst", "functional/ivy/device/to_device/to_device_container.rst", "functional/ivy/device/to_device/to_device_functional.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acos/static_acos_container.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/acosh/static_acosh_container.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asin/static_asin_container.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan/static_atan_container.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atan2/static_atan2_container.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/atanh/static_atanh_container.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/ceil/static_ceil_container.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/cosh/static_cosh_container.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/equal/static_equal_container.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/erf/static_erf_container.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/exp/static_exp_container.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/expm1/static_expm1_container.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor/static_floor_container.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/floor_divide/static_floor_divide_container.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater/static_greater_container.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/greater_equal/static_greater_equal_container.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isfinite/static_isfinite_container.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isinf/static_isinf_container.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/isnan/static_isnan_container.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less/static_less_container.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/less_equal/static_less_equal_container.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log/static_log_container.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log10/static_log10_container.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log1p/static_log1p_container.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/log2/static_log2_container.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logaddexp/static_logaddexp_container.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_and/static_logical_and_container.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_not/static_logical_not_container.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_or/static_logical_or_container.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/logical_xor/static_logical_xor_container.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/negative/static_negative_container.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/not_equal/static_not_equal_container.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/positive/static_positive_container.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/pow/static_pow_container.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/remainder/static_remainder_container.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/round/static_round_container.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/sqrt/static_sqrt_container.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/square/static_square_container.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/static_trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/function_supported_devices_and_dtypes.rst", "functional/ivy/general/function_unsupported_devices_and_dtypes.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_array_mode.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_nestable_mode.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_array_mode.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_nestable_mode.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_array_mode.rst", "functional/ivy/general/unset_nestable_mode.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_step/static_adam_step_container.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/adam_update/static_adam_update_container.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/execute_with_gradients/execute_with_gradients_functional.rst", "functional/ivy/gradients/execute_with_gradients/static_execute_with_gradients_container.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_array.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lamb_update/static_lamb_update_container.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/lars_update/static_lars_update_container.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable/static_variable_container.rst", "functional/ivy/gradients/variable/variable_array.rst", "functional/ivy/gradients/variable/variable_container.rst", "functional/ivy/gradients/variable/variable_functional.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d/conv1d_array.rst", "functional/ivy/layers/conv1d/conv1d_container.rst", "functional/ivy/layers/conv1d/conv1d_functional.rst", "functional/ivy/layers/conv1d/static_conv1d_container.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_container.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/cross/static_cross_container.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_container.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/det/static_det_container.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_container.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/diagonal/static_diagonal_container.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_container.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_container.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/inv/static_inv_container.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional.rst", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_container.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/outer/static_outer_container.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_container.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/qr/static_qr_container.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/slogdet/slogdet_container.rst", "functional/ivy/linear_algebra/slogdet/slogdet_functional.rst", "functional/ivy/linear_algebra/slogdet/static_slogdet_container.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_container.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/solve/static_solve_container.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/static_svd_container.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_container.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/static_svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/static_tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_array.rst", "functional/ivy/linear_algebra/tensordot/tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/static_trace_container.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_container.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/static_vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/repeat/static_repeat_container.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/reshape/static_reshape_container.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/norms/layer_norm/static_layer_norm_container.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_array.rst", "functional/ivy/random/randint/randint_container.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_normal/random_normal_array.rst", "functional/ivy/random/random_normal/random_normal_container.rst", "functional/ivy/random/random_normal/random_normal_functional.rst", "functional/ivy/random/random_normal/static_random_normal_container.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_array.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "&lt;no title&gt;", "&lt;no title&gt;", "Conversions", "args_to_container", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "&lt;no title&gt;", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Navigating the Code", "Function Arguments", "Submodule Helper Functions", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Ivy Frontends", "Ivy Frontend tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Formatting", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "ivy.Array.gelu", "ivy.Container.gelu", "ivy.gelu", "ivy.Container.static_gelu", "leaky_relu", "ivy.Array.leaky_relu", "ivy.Container.leaky_relu", "ivy.leaky_relu", "ivy.Container.static_leaky_relu", "relu", "ivy.Array.relu", "ivy.Container.relu", "ivy.relu", "ivy.Container.static_relu", "sigmoid", "ivy.Array.sigmoid", "ivy.Container.sigmoid", "ivy.sigmoid", "ivy.Container.static_sigmoid", "softmax", "ivy.Array.softmax", "ivy.Container.softmax", "ivy.softmax", "ivy.Container.static_softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "Compilation", "compile", "Constants", "Creation", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "ivy.Container.static_asarray", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "closest_valid_dtype", "default_dtype", "default_float_dtype", "ivy.default_float_dtype", "ivy.Container.static_default_float_dtype", "default_int_dtype", "default_uint_dtype", "dtype", "ivy.Array.dtype", "ivy.Container.dtype", "ivy.dtype", "ivy.Container.static_dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "ivy.function_supported_dtypes", "ivy.Container.static_function_supported_dtypes", "function_unsupported_dtypes", "ivy.function_unsupported_dtypes", "ivy.Container.static_function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "invalid_dtype", "is_bool_dtype", "ivy.Array.is_bool_dtype", "ivy.Container.is_bool_dtype", "ivy.is_bool_dtype", "ivy.Container.static_is_bool_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "is_uint_dtype", "ivy.Array.is_uint_dtype", "ivy.Container.is_uint_dtype", "ivy.is_uint_dtype", "ivy.Container.static_is_uint_dtype", "promote_types", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "set_default_uint_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "unset_default_uint_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "ivy.Array.dev", "ivy.Container.dev", "ivy.dev", "ivy.Container.static_dev", "dev_util", "function_supported_devices", "function_unsupported_devices", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "ivy.Container.static_to_device", "ivy.Array.to_device", "ivy.Container.to_device", "ivy.to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "ivy.Container.static_acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "ivy.Container.static_acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "ivy.Container.static_asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "ivy.Container.static_atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "ivy.Container.static_atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "ivy.Container.static_atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "ivy.Container.static_bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "ivy.Container.static_bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "ivy.Container.static_bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "ivy.Container.static_bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "ivy.Container.static_bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ivy.Container.static_bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "ivy.Container.static_ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "ivy.Container.static_cosh", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "ivy.Container.static_equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "ivy.Container.static_erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "ivy.Container.static_exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "ivy.Container.static_expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "ivy.Container.static_floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "ivy.Container.static_floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "ivy.Container.static_greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "ivy.Container.static_greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "ivy.Container.static_isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "ivy.Container.static_isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "ivy.Container.static_isnan", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "ivy.Container.static_less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "ivy.Container.static_less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "ivy.Container.static_log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "ivy.Container.static_log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "ivy.Container.static_log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "ivy.Container.static_log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "ivy.Container.static_logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "ivy.Container.static_logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "ivy.Container.static_logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "ivy.Container.static_logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "ivy.Container.static_logical_xor", "maximum", "minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "ivy.Container.static_negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "ivy.Container.static_not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "ivy.Container.static_positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "ivy.Container.static_pow", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "ivy.Container.static_remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "ivy.Container.static_round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "ivy.Container.static_sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "ivy.Container.static_square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "trunc", "ivy.Container.static_trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "ivy.Array.clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "ivy.Container.static_clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "function_supported_devices_and_dtypes", "function_unsupported_devices_and_dtypes", "gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_array_mode", "get_min_base", "get_min_denominator", "get_nestable_mode", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_array_mode", "set_min_base", "set_min_denominator", "set_nestable_mode", "set_queue_timeout", "set_shape_array_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_ivy_shape", "to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "try_else_none", "unset_array_mode", "unset_nestable_mode", "unset_shape_array_mode", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "ivy.Container.static_adam_step", "adam_update", "ivy.Container.adam_update", "ivy.adam_update", "ivy.Container.static_adam_update", "execute_with_gradients", "ivy.execute_with_gradients", "ivy.Container.static_execute_with_gradients", "gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "ivy.Container.static_gradient_descent_update", "is_variable", "ivy.Array.is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "ivy.Container.static_lamb_update", "lars_update", "ivy.Container.lars_update", "ivy.lars_update", "ivy.Container.static_lars_update", "optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "ivy.Container.static_optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "ivy.Container.static_variable", "ivy.Array.variable", "ivy.Container.variable", "ivy.variable", "variable_data", "with_grads", "Layers", "conv1d", "ivy.Array.conv1d", "ivy.Container.conv1d", "ivy.conv1d", "ivy.Container.static_conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.Container.cross", "ivy.cross", "ivy.Container.static_cross", "det", "ivy.Array.det", "ivy.Container.det", "ivy.det", "ivy.Container.static_det", "diagonal", "ivy.Array.diagonal", "ivy.Container.diagonal", "ivy.diagonal", "ivy.Container.static_diagonal", "eigh", "ivy.Array.eigh", "ivy.Container.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inv", "ivy.Array.inv", "ivy.Container.inv", "ivy.inv", "ivy.Container.static_inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.Container.matrix_norm", "ivy.matrix_norm", "ivy.Container.static_matrix_norm", "matrix_power", "ivy.Container.matrix_power", "ivy.matrix_power", "ivy.Container.static_matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.Container.matrix_rank", "ivy.matrix_rank", "ivy.Container.static_matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.Container.matrix_transpose", "ivy.matrix_transpose", "ivy.Container.static_matrix_transpose", "outer", "ivy.Array.outer", "ivy.Container.outer", "ivy.outer", "ivy.Container.static_outer", "pinv", "ivy.Array.pinv", "ivy.pinv", "qr", "ivy.Array.qr", "ivy.Container.qr", "ivy.qr", "ivy.Container.static_qr", "slogdet", "ivy.Container.slogdet", "ivy.slogdet", "ivy.Container.static_slogdet", "solve", "ivy.Array.solve", "ivy.Container.solve", "ivy.solve", "ivy.Container.static_solve", "svd", "ivy.Container.static_svd", "ivy.Array.svd", "ivy.Container.svd", "ivy.svd", "svdvals", "ivy.Container.static_svdvals", "ivy.Array.svdvals", "ivy.Container.svdvals", "ivy.svdvals", "tensordot", "ivy.Container.static_tensordot", "ivy.Array.tensordot", "ivy.Container.tensordot", "ivy.tensordot", "trace", "ivy.Container.static_trace", "ivy.Array.trace", "ivy.Container.trace", "ivy.trace", "vecdot", "ivy.Container.static_vecdot", "ivy.Array.vecdot", "ivy.Container.vecdot", "ivy.vecdot", "vector_norm", "ivy.Container.static_vector_norm", "ivy.Array.vector_norm", "ivy.Container.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Container.static_vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.Container.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "ivy.Container.static_repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "ivy.Container.static_reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "ivy.Container.static_layer_norm", "Random", "multinomial", "randint", "ivy.Array.randint", "ivy.Container.randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "ivy.Array.random_normal", "ivy.Container.random_normal", "ivy.random_normal", "ivy.Container.static_random_normal", "random_uniform", "ivy.Array.random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"contextmanag": 1, "def": [1, 20, 119, 120, 121, 123, 125, 126, 127, 128, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 276, 277, 278, 279, 369, 780, 1164, 1178, 1181, 1184], "__init__": [1, 23, 26, 27, 28, 76, 77, 119, 129, 133, 138, 140, 141, 142, 143, 276, 277, 278, 279, 369, 780, 1164, 1178, 1181, 1184], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 25, 27, 28, 30, 31, 32, 33, 34, 36, 38, 40, 42, 44, 45, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 75, 76, 77, 79, 81, 83, 85, 87, 89, 90, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 143, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1168, 1169, 1170, 1173, 1174, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1199, 1201, 1203, 1204, 1205, 1206, 1207, 1209, 1210, 1212], "framework": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 40, 42, 44, 45, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 75, 76, 77, 79, 81, 83, 85, 87, 89, 90, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 118, 120, 123, 124, 126, 127, 128, 129, 130, 131, 134, 137, 140, 143, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1168, 1169, 1170, 1173, 1174, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1199, 1201, 1203, 1204, 1205, 1206, 1207, 1209, 1210, 1212], "ml": [13, 15, 16, 17, 137, 138, 139, 141, 142, 143, 154, 1164, 1170], "explos": [13, 15, 1164], "A": [13, 14, 15, 16, 21, 35, 36, 37, 38, 69, 70, 76, 77, 82, 83, 90, 91, 118, 125, 128, 132, 133, 134, 138, 141, 155, 1164], "huge": [13, 15, 141, 1164], "number": [13, 14, 18, 23, 26, 27, 37, 38, 55, 56, 63, 64, 69, 70, 76, 77, 82, 83, 123, 125, 127, 132, 134, 135, 138, 141, 143, 1164], "tool": [13, 16, 19, 139, 143, 154, 155, 1164], "have": [13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 154, 155, 1164], "explod": [13, 14, 1164], "onto": [13, 14, 1164], "scene": [13, 14, 118, 137, 139, 1164], "b": [13, 16, 17, 23, 26, 27, 41, 42, 74, 75, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 118, 123, 128, 129, 132, 137, 138, 139, 141, 142, 143, 153, 1164, 1170], "why": [13, 15, 19, 120, 132, 135, 140, 1164], "unifi": [13, 15, 76, 77, 131, 138, 155, 1164], "should": [13, 15, 18, 19, 20, 21, 23, 24, 25, 26, 27, 35, 36, 41, 42, 51, 52, 55, 56, 74, 75, 76, 77, 86, 87, 116, 117, 119, 120, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 1164], "we": [13, 14, 15, 16, 17, 18, 19, 20, 21, 71, 72, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 143, 154, 155, 1164, 1170], "try": [13, 15, 16, 18, 19, 20, 21, 76, 77, 131, 132, 136, 140, 155, 1164], "them": [13, 14, 15, 16, 118, 125, 127, 129, 131, 132, 138, 140, 141, 142, 155, 1164], "c": [13, 15, 16, 17, 45, 46, 49, 50, 86, 87, 90, 91, 118, 123, 128, 132, 137, 138, 139, 141, 155, 1164, 1170], "standard": [13, 57, 58, 59, 60, 118, 119, 120, 122, 124, 125, 131, 135, 155, 1164, 1170], "re": [13, 14, 15, 17, 18, 19, 20, 21, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 143, 155, 1164], "collabor": [13, 14, 15, 1164], "The": [13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 154, 1164], "consortium": [13, 15, 1164, 1170], "python": [13, 14, 15, 18, 19, 21, 125, 136, 138, 140, 141, 155, 1164, 1170], "data": [13, 15, 18, 23, 24, 25, 26, 27, 28, 35, 36, 38, 41, 42, 45, 46, 51, 52, 55, 56, 59, 60, 63, 64, 69, 70, 74, 75, 76, 77, 80, 81, 83, 86, 87, 90, 91, 118, 119, 120, 121, 122, 127, 128, 130, 132, 134, 135, 140, 1164, 1170], "api": [13, 14, 18, 19, 118, 120, 122, 123, 125, 126, 127, 128, 130, 131, 133, 134, 135, 137, 139, 141, 155, 1164, 1170], "open": [14, 15, 16, 17, 18, 19, 21, 59, 60, 122, 154, 1164], "sourc": [14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 116, 117, 131, 132, 1164], "project": [14, 15, 16, 18, 19, 21, 119, 125, 129, 140, 142, 154, 155], "ha": [14, 15, 16, 19, 63, 64, 76, 77, 121, 122, 123, 125, 126, 127, 128, 129, 130, 133, 134, 136, 138, 140, 142, 143, 154, 155], "grown": 14, "consider": [14, 120, 123], "recent": [14, 15, 18, 19, 125], "year": [14, 16, 155, 1164], "especi": [14, 18], "deep": [14, 17, 19, 20, 76, 77, 127, 132, 137, 141, 1164], "learn": [14, 15, 18, 20, 118, 128, 137, 143, 154, 1164], "can": [14, 15, 16, 17, 18, 19, 35, 36, 37, 38, 55, 56, 59, 60, 82, 83, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 154, 155, 1164, 1170], "seen": [14, 15, 123, 125, 140, 141], "from": [14, 15, 16, 17, 18, 19, 20, 21, 29, 31, 32, 33, 34, 35, 36, 37, 38, 43, 44, 49, 50, 55, 56, 59, 60, 69, 70, 71, 72, 76, 77, 80, 81, 82, 83, 88, 89, 94, 95, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 154, 155, 1164, 1170], "rapidli": 14, "increas": 14, "github": [14, 19, 20, 122, 125], "repo": [14, 15, 16, 18, 19, 124, 138, 140, 141, 142, 143, 154, 1164, 1170], "contain": [14, 18, 20, 21, 23, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 41, 42, 51, 52, 53, 54, 55, 56, 63, 64, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 116, 117, 118, 120, 122, 123, 125, 128, 133, 135, 137, 138, 139, 142, 143, 155, 1164], "term": [14, 19, 132], "over": [14, 16, 18, 19, 69, 70, 71, 72, 76, 77, 116, 117, 122, 123, 125, 129, 135, 140, 155], "time": [14, 15, 16, 18, 19, 20, 63, 64, 120, 121, 125, 128, 132, 133, 138, 141, 143, 155], "These": [14, 15, 16, 19, 120, 122, 123, 125, 126, 127, 128, 132, 133, 135, 138, 139, 141, 142, 143, 155, 1164, 1170], "ar": [14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 29, 31, 32, 41, 42, 43, 44, 55, 56, 59, 60, 76, 77, 80, 81, 86, 87, 88, 89, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 154, 155, 1164], "written": [14, 18, 119, 120, 122, 125, 126, 131, 135, 138, 140, 143, 155], "mani": [14, 15, 16, 18, 19, 20, 76, 77, 120, 122, 123, 125, 128, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 155], "differ": [14, 15, 16, 18, 19, 41, 42, 76, 77, 118, 119, 120, 122, 123, 125, 126, 128, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 155, 1164], "while": [14, 15, 18, 19, 76, 77, 123, 125, 129, 135, 136, 142, 143, 155], "thi": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 154, 155, 1164, 1170], "wonder": [14, 16, 140], "thing": [14, 15, 16, 18, 19, 20, 125, 129, 140, 141], "research": [14, 154], "develop": [14, 15, 16, 17, 18, 19, 20, 154, 155, 1164], "when": [14, 15, 18, 19, 20, 53, 54, 59, 60, 76, 77, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 143, 155, 1164], "also": [14, 15, 17, 18, 19, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 118, 119, 120, 122, 123, 125, 126, 128, 130, 131, 132, 133, 134, 135, 138, 140, 141, 142, 143, 154, 155], "consid": [14, 15, 76, 77, 119, 128, 139, 140, 141], "speed": [14, 125], "which": [14, 15, 16, 18, 19, 20, 21, 35, 36, 37, 38, 43, 44, 53, 54, 55, 56, 59, 60, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 154, 155, 1164], "evolv": 14, "sharabl": 14, "code": [14, 15, 16, 18, 19, 20, 21, 41, 42, 76, 77, 90, 91, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 153, 155, 1164, 1170], "significantli": 14, "hinder": [14, 120], "librari": [14, 15, 16, 23, 26, 27, 126, 138, 143, 153, 155, 1164], "becom": [14, 16, 19, 123, 132, 138, 143, 155], "outdat": 14, "matter": [14, 123], "month": 14, "rigor": [14, 125], "maintain": [14, 19], "against": [14, 37, 38, 76, 77, 82, 83, 125, 155], "newest": 14, "version": [14, 15, 16, 18, 19, 122, 126, 127, 133, 138, 140, 1164], "For": [14, 15, 16, 18, 19, 20, 21, 23, 26, 27, 45, 46, 90, 91, 118, 119, 120, 122, 123, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 140, 141, 142, 143, 154, 155], "softwar": [14, 15, 18, 19], "pipelin": [14, 131, 143], "where": [14, 15, 16, 17, 18, 19, 20, 21, 35, 36, 55, 56, 59, 60, 69, 70, 76, 77, 121, 122, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 141, 142, 143, 155, 1164], "rapid": [14, 15, 18], "prototyp": 14, "vital": [14, 143], "signific": [14, 15, 155], "bottleneck": 14, "As": [14, 19, 71, 72, 116, 117, 120, 121, 125, 126, 127, 128, 131, 132, 133, 134, 135, 138, 140, 141, 142, 155], "new": [14, 15, 16, 17, 18, 19, 20, 21, 43, 44, 55, 56, 57, 58, 76, 77, 82, 83, 88, 89, 118, 119, 122, 123, 125, 130, 132, 133, 135, 137, 140, 143, 154, 1164], "futur": [14, 16, 18, 19, 140, 155], "avail": [14, 18, 19, 76, 77, 122, 126, 134, 155], "backend": [14, 19, 20, 29, 32, 34, 76, 77, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 139, 140, 143, 1164, 1170], "specif": [14, 19, 20, 76, 77, 118, 120, 121, 125, 126, 127, 128, 131, 132, 133, 134, 135, 138, 139, 140, 142, 143, 154, 155, 1164, 1170], "quickli": [14, 16, 18, 19, 141, 142], "obsolet": [14, 16], "user": [14, 15, 18, 19, 21, 118, 125, 126, 129, 132, 135, 137, 155], "constantli": 14, "invent": 14, "wheel": 14, "If": [14, 17, 18, 19, 20, 21, 29, 33, 34, 35, 36, 51, 52, 53, 54, 55, 56, 59, 60, 63, 64, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 143, 155, 1164], "our": [14, 15, 17, 18, 19, 71, 72, 116, 117, 123, 125, 126, 127, 132, 136, 137, 140, 141, 142, 143, 155, 1164], "desir": [14, 19, 37, 38, 76, 77, 82, 83, 126], "provid": [14, 18, 19, 69, 70, 76, 77, 120, 122, 123, 125, 128, 131, 132, 133, 134, 135, 138, 142, 154, 155], "simultan": [14, 16], "all": [14, 15, 16, 17, 18, 19, 20, 21, 29, 31, 32, 33, 34, 35, 36, 43, 44, 55, 56, 59, 60, 69, 70, 71, 72, 76, 77, 88, 89, 116, 117, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 154, 155, 1164], "modern": [14, 15], "simpl": [14, 18, 19, 119, 122, 123, 125, 128, 131, 132, 133, 134, 135, 138, 140, 142, 143, 155], "scalabl": [14, 138], "manner": [14, 29, 33, 34, 76, 77, 119, 122, 125, 134, 141, 154, 155], "must": [14, 16, 18, 19, 20, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 94, 95, 119, 120, 122, 123, 128, 131, 132, 133, 134, 138, 142, 143], "determin": [14, 23, 24, 25, 26, 27, 41, 42, 51, 52, 69, 70, 74, 75, 76, 77, 86, 87, 122, 127, 128, 132, 133, 134], "exactli": [14, 16, 123, 132, 134, 1164, 1170], "common": [14, 20, 76, 77, 121, 123, 128, 130, 132, 134, 136, 155], "ground": [14, 125], "li": 14, "between": [14, 53, 54, 76, 77, 120, 123, 125, 127, 128, 131, 132, 137, 139, 140, 141, 143, 154, 1164], "find": [14, 18, 19, 76, 77, 125, 138, 141, 1164], "exist": [14, 15, 18, 20, 21, 55, 56, 76, 77, 121, 122, 123, 124, 125, 128, 129, 130, 135, 138, 155], "essenti": [14, 15, 20, 123, 128, 134], "order": [14, 18, 19, 21, 76, 77, 120, 122, 123, 126, 127, 129, 131, 132, 133, 134, 140, 141, 143, 155], "design": [14, 15, 118, 127, 135, 138, 140, 155], "univers": 14, "abstract": [14, 132, 142, 155], "In": [14, 16, 18, 19, 55, 56, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 154, 155, 1164], "search": [14, 18, 29, 33, 34, 62, 76, 77, 119, 123, 125], "languag": [14, 16, 138], "first": [14, 15, 18, 19, 21, 23, 26, 27, 41, 42, 63, 64, 86, 87, 120, 123, 125, 127, 128, 131, 132, 138, 140, 141, 143], "see": [14, 17, 18, 19, 20, 23, 26, 27, 41, 42, 69, 70, 86, 87, 120, 124, 127, 128, 132, 134, 140, 141, 154, 155, 1164], "clear": [14, 15, 16, 19, 20, 123, 133, 134, 138, 140], "front": [14, 137, 138, 141, 1164, 1170], "runner": 14, "look": [14, 18, 19, 21, 119, 120, 121, 123, 125, 126, 127, 128, 129, 132, 133, 134, 138, 140, 142, 143, 1164], "littl": [14, 140], "deeper": [14, 19, 118, 137], "follow": [14, 15, 18, 19, 20, 21, 76, 77, 119, 122, 123, 125, 129, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 155, 1164], "same": [14, 16, 18, 19, 21, 29, 31, 32, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 55, 56, 59, 60, 63, 64, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 119, 120, 121, 123, 125, 126, 127, 128, 131, 132, 134, 135, 136, 138, 140, 142, 143, 155, 1164], "core": [14, 18, 20, 134, 138, 143, 1164], "principl": 14, "oper": [14, 18, 20, 23, 26, 27, 49, 50, 76, 77, 94, 95, 122, 123, 125, 126, 128, 131, 132, 134, 135, 141, 142], "expos": [14, 138, 142], "almost": [14, 19, 127, 132, 139, 141], "ident": [14, 16, 76, 77, 121, 126, 127, 128, 130, 132, 140, 141, 155, 1164], "function": [14, 19, 21, 23, 24, 25, 26, 27, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 116, 117, 118, 119, 122, 123, 124, 126, 127, 129, 131, 135, 136, 137, 139, 140, 141, 142, 153, 154, 1164], "uniqu": [14, 63, 64, 125, 127, 128, 132, 155], "syntax": [14, 15, 136], "argument": [14, 20, 29, 31, 32, 33, 34, 76, 77, 118, 119, 122, 123, 125, 126, 127, 128, 129, 131, 132, 136, 138, 140, 141], "There": [14, 18, 19, 123, 126, 128, 131, 132, 133, 136, 138, 141, 155], "onli": [14, 17, 18, 19, 23, 26, 27, 59, 60, 76, 77, 119, 120, 121, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 138, 140, 141, 142, 143, 153, 155, 1164], "so": [14, 15, 18, 19, 23, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 119, 120, 122, 123, 125, 126, 127, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 155, 1164], "wai": [14, 15, 18, 125, 129, 135, 140, 141, 142, 143, 155], "manipul": [14, 56, 119, 143, 154], "tensor": [14, 76, 77, 119, 120, 121, 126, 128, 129, 131, 133, 134, 135, 138, 140, 141, 142, 143, 155, 1164], "unsurprisingli": [14, 123], "fundament": [14, 132, 138], "consist": [14, 76, 77, 131, 133, 135], "each": [14, 15, 16, 18, 19, 20, 24, 25, 37, 38, 41, 42, 43, 44, 49, 50, 51, 52, 55, 56, 63, 64, 74, 75, 76, 77, 82, 83, 86, 87, 88, 89, 94, 95, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 143, 154, 155, 1164, 1170], "veri": [14, 15, 18, 19, 119, 120, 123, 125, 128, 132, 134, 135, 139, 141, 142, 143, 155, 1164], "similar": [14, 119, 125, 132, 133, 134, 141, 155], "convent": [14, 154], "those": [14, 18, 19, 20, 55, 56, 76, 77, 125, 132, 138, 143], "numpi": [14, 15, 19, 20, 43, 44, 76, 77, 88, 89, 120, 121, 125, 126, 127, 129, 133, 134, 135, 138, 140, 143, 1164], "introduc": [14, 132, 141], "2006": 14, "layer": [14, 50, 57, 58, 95, 119, 122, 138, 139, 142, 1164], "therefor": [14, 19, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 138, 140, 142, 155], "present": [14, 19, 76, 77, 120, 124, 132, 133, 134, 135, 138], "itself": [14, 18, 19, 120, 126, 132, 135, 142, 154, 155], "cut": 14, "cloth": 14, "adher": [14, 15, 122, 124, 138, 143], "set": [14, 17, 19, 29, 33, 34, 43, 44, 45, 46, 64, 76, 77, 88, 89, 90, 91, 118, 119, 121, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 138, 140, 141], "semant": [14, 138, 143], "round": [14, 15, 16, 18, 19, 20, 21, 41, 42, 86, 87, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 140, 141, 142, 143, 154, 1164], "up": [14, 15, 16, 17, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 154, 155], "hopefulli": [14, 15, 16, 18, 19, 20, 21, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 140, 141, 142, 143, 154], "paint": [14, 138], "pictur": [14, 138], "how": [14, 16, 17, 18, 19, 20, 21, 118, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 154, 155, 1164, 1170], "pleas": [14, 15, 16, 18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 140, 141, 142, 143, 154, 1164], "check": [14, 15, 16, 18, 19, 29, 31, 32, 33, 34, 45, 46, 76, 77, 90, 91, 121, 125, 132, 137, 138, 140, 141, 142, 143, 154, 1164], "out": [14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 154, 1164], "discuss": [14, 15, 16, 17, 18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 140, 141, 142, 143, 154, 155, 1164], "faq": [14, 15, 16, 138, 140, 141, 142, 143, 154], "reach": [14, 15, 16, 18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 140, 141, 142, 143, 154], "discord": [14, 15, 16, 18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 140, 141, 142, 143, 154, 1164], "you": [14, 15, 16, 17, 18, 19, 20, 21, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 154, 155, 1164, 1170], "ani": [14, 15, 16, 17, 18, 19, 20, 21, 29, 31, 32, 35, 36, 41, 42, 43, 44, 69, 70, 71, 72, 76, 77, 86, 87, 88, 89, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 138, 140, 141, 142, 143, 154, 155, 1164], "question": [14, 15, 16, 18, 19, 123, 125, 138, 140, 141, 142, 143, 154, 155, 1164], "With": [15, 16, 18, 23, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 123, 125, 126, 138], "central": 15, "goal": [15, 20], "being": [15, 16, 18, 19, 76, 77, 120, 123, 125, 130, 131, 132, 133, 134, 135, 136, 138, 141, 154, 155, 1164], "would": [15, 18, 19, 21, 55, 56, 118, 120, 122, 123, 125, 129, 130, 131, 132, 135, 137, 138, 140, 142, 143, 155, 1164], "entir": [15, 16, 19, 69, 70, 76, 77, 123, 124, 125, 131, 132, 135, 140, 141, 142, 143, 155], "forgiven": 15, "rais": [15, 19, 55, 56, 59, 60, 69, 70, 76, 77, 121, 135, 136, 138, 140], "an": [15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 51, 52, 55, 56, 59, 60, 63, 64, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 116, 117, 119, 120, 122, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 154, 155, 1164], "eyebrow": 15, "want": [15, 17, 18, 19, 71, 72, 116, 117, 125, 141, 142, 143, 155], "somehow": 15, "tensorflow": [15, 16, 19, 20, 45, 46, 120, 121, 125, 126, 127, 133, 134, 135, 138, 143, 155, 1164], "pytorch": [15, 16, 20, 120, 126, 127, 128, 133, 134, 135, 138, 140, 143, 155, 1164], "jax": [15, 16, 19, 20, 45, 46, 90, 91, 120, 121, 125, 126, 127, 129, 133, 134, 135, 138, 140, 143, 155, 1164], "mxnet": [15, 20, 133, 134, 135, 138, 143, 1164], "other": [15, 18, 19, 23, 26, 27, 37, 38, 43, 44, 76, 77, 82, 83, 88, 89, 119, 122, 123, 125, 126, 127, 128, 131, 132, 135, 136, 138, 140, 142, 143, 153, 154, 155, 1164], "strong": [15, 155], "industri": 15, "back": [15, 131, 137, 138, 140, 155, 1164, 1170], "momentum": 15, "won": [15, 16, 19, 143], "t": [15, 16, 18, 19, 20, 21, 23, 26, 27, 71, 72, 116, 117, 123, 125, 133, 138, 140, 141, 142, 143, 155], "ad": [15, 18, 19, 20, 116, 117, 119, 120, 122, 123, 125, 126, 128, 130, 131, 132, 133, 135, 138, 142, 155], "just": [15, 16, 18, 19, 122, 123, 125, 126, 127, 128, 135, 138, 140, 141, 155], "make": [15, 16, 18, 19, 20, 119, 120, 122, 123, 124, 125, 127, 128, 131, 132, 133, 134, 135, 136, 138, 140, 141, 143], "problem": [15, 19, 131, 140], "even": [15, 16, 18, 19, 120, 122, 128, 133, 134, 140, 141, 142, 143, 155], "wors": 15, "rather": [15, 19, 45, 46, 76, 77, 90, 91, 119, 122, 125, 132, 143, 155], "funni": 15, "comic": 15, "strip": 15, "s": [15, 16, 17, 18, 19, 21, 23, 26, 27, 29, 33, 34, 35, 36, 76, 77, 118, 120, 121, 122, 123, 125, 126, 127, 129, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 154, 155, 1164], "easi": [15, 18, 19, 127, 128, 132], "feasibl": 15, "space": 15, "howev": [15, 18, 20, 120, 121, 122, 125, 126, 128, 129, 131, 132, 133, 134, 135, 140, 141, 142, 143, 155], "import": [15, 19, 20, 71, 72, 116, 117, 119, 121, 122, 123, 126, 127, 129, 131, 132, 133, 134, 135, 136, 138, 140, 141, 143, 155, 1164, 1170], "case": [15, 18, 19, 20, 29, 33, 34, 55, 56, 76, 77, 119, 120, 121, 122, 123, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 138, 140, 142, 143, 155], "ivi": [15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 116, 117, 118, 120, 121, 122, 124, 128, 129, 130, 132, 133, 134, 135, 136, 137, 153, 155, 1164, 1170], "unlik": [15, 123, 132], "charger": 15, "charact": [15, 136], "encod": [15, 141], "instant": [15, 1164], "messag": [15, 19, 136, 138, 140], "much": [15, 18, 19, 119, 131, 132, 135, 138, 140, 141], "one": [15, 16, 18, 19, 23, 26, 27, 63, 64, 76, 77, 86, 87, 88, 89, 120, 123, 125, 126, 128, 131, 132, 133, 135, 136, 137, 140, 141, 143, 155, 1164], "doe": [15, 19, 21, 76, 77, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 133, 135, 138, 140, 141, 155], "mandat": [15, 125, 135], "adopt": [15, 19, 131], "continu": [15, 16, 124, 125, 136, 155], "own": [15, 16, 18, 121, 122, 125, 136, 138, 155], "call": [15, 19, 21, 119, 120, 122, 123, 125, 128, 129, 130, 131, 132, 133, 134, 135, 138, 140, 141, 142, 143, 155], "signatur": [15, 119, 120, 122, 123, 125, 132, 133, 134, 135], "replac": [15, 19, 21, 55, 56, 76, 77, 123, 125, 130, 132, 133, 134, 138, 140, 143, 155], "your": [15, 16, 17, 18, 20, 21, 119, 122, 141, 142, 155, 1164], "1": [15, 16, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 120, 123, 125, 126, 127, 128, 132, 135, 136, 137, 138, 140, 141, 142, 143, 155, 1164], "10": [15, 18, 21, 41, 42, 59, 60, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 123, 125, 127, 132, 138, 140, 141], "100": [15, 16, 125, 141, 142, 143, 155, 1164], "despit": [15, 132, 134], "distinct": [15, 18, 122, 132, 135, 137, 1164], "still": [15, 19, 76, 77, 122, 125, 133, 140, 142, 155, 1164], "believ": [15, 19], "share": [15, 76, 77, 123, 125, 127, 128, 129, 132, 138], "bring": [15, 125, 138, 139], "benefit": [15, 16, 18, 19, 131, 132, 135, 140, 141, 155], "unrel": [15, 19], "what": [15, 16, 19, 118, 120, 122, 123, 125, 130, 132, 136, 137, 138, 140, 141, 142, 143, 154, 155, 1164], "again": [15, 16, 19, 119, 123, 125, 132, 135, 141, 143, 155], "contrari": 15, "bumpi": 15, "road": 15, "allud": [15, 141], "most": [15, 18, 76, 77, 119, 120, 125, 128, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 155], "technolog": 15, "sector": [15, 41, 42, 86, 87], "full": [15, 16, 19, 120, 122, 125, 133, 138, 155], "success": 15, "reason": [15, 19, 119, 123, 128, 131, 132, 133, 135, 138, 140], "build": [15, 17, 18, 128, 137, 139, 142, 143, 155, 1164], "custom": [15, 125, 142], "comput": [15, 16, 18, 23, 26, 27, 41, 42, 43, 44, 45, 46, 53, 54, 74, 75, 76, 77, 86, 87, 88, 89, 90, 91, 125, 126, 128, 132, 138, 141, 155], "thank": [15, 141], "interoper": 15, "compon": [15, 138], "bio": [15, 18], "hardwar": [15, 18], "initi": [15, 19, 76, 77, 125, 129, 133, 134], "pcie": 15, "interfac": [15, 143, 155], "motherboard": 15, "raid": 15, "storag": [15, 141], "virtual": [15, 19, 21], "bluetooth": 15, "wireless": 15, "exchang": 15, "btx": 15, "form": [15, 17, 29, 31, 32, 33, 34, 35, 36, 51, 52, 76, 77, 125, 128, 142, 143], "factor": [15, 45, 46, 49, 50, 51, 52, 90, 91, 94, 95], "sata": 15, "connect": [15, 18, 142, 143], "host": [15, 155], "bu": 15, "adapt": 15, "devic": [15, 19, 23, 26, 27, 35, 36, 40, 43, 44, 59, 60, 76, 77, 80, 81, 85, 88, 89, 118, 119, 121, 127, 128, 130, 133, 140, 141, 155], "html": [15, 21, 122], "enabl": [15, 18, 19, 76, 77, 125, 128, 131, 132, 135, 137, 138, 139, 141, 143, 155], "anyon": [15, 17, 155], "websit": 15, "tcp": 15, "ip": 15, "node": [15, 76, 77, 132], "commun": [15, 17, 19, 20, 155, 1164, 1170], "network": [15, 128, 132, 138, 142, 154, 1164], "smtp": 15, "possibl": [15, 17, 18, 19, 20, 55, 56, 122, 123, 125, 132, 133, 135, 138, 141, 154, 155], "send": 15, "gmail": 15, "outlook": 15, "pop": 15, "us": [15, 16, 17, 19, 20, 41, 42, 55, 56, 57, 58, 71, 72, 74, 75, 76, 77, 86, 87, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 154, 155, 1164], "email": 15, "ieee": 15, "754": 15, "allow": [15, 19, 125, 126, 127, 138, 155], "calcul": [15, 53, 54, 76, 77, 122], "live": [15, 16], "depend": [15, 18, 19, 23, 26, 27, 122, 125, 126, 130, 132, 133, 138, 155], "did": [15, 20, 143], "aris": [15, 155], "until": [15, 19, 136, 155, 1164], "wa": [15, 19, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 123, 138, 140], "substanti": [15, 19, 125, 131], "innov": 15, "growth": 15, "usag": [15, 138, 155], "relev": [15, 18, 20, 123, 132, 133, 141], "area": [15, 41, 42, 86, 87, 135, 153, 1164], "necess": 15, "parti": [15, 155], "could": [15, 16, 18, 19, 123, 125, 132, 133, 135, 138, 140, 141, 142], "easili": [15, 19, 141, 142, 143, 155, 1164], "engag": [15, 17, 18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], "regard": [15, 132], "effect": [15, 120, 122, 131, 132, 155], "2015": 15, "sinc": [15, 18, 19, 125, 155], "alongsid": 15, "machin": [15, 18, 128, 154], "given": [15, 16, 18, 19, 20, 21, 43, 44, 53, 54, 55, 56, 59, 60, 76, 77, 88, 89, 119, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 140, 142, 143, 154], "frame": [15, 154], "less": [15, 19, 23, 26, 27, 41, 42, 59, 60, 76, 77, 86, 87, 120, 123, 132, 137, 138], "matur": [15, 155], "state": [15, 120, 122, 125, 137, 138, 139, 141, 154, 1164], "than": [15, 19, 23, 26, 27, 45, 46, 59, 60, 63, 64, 76, 77, 90, 91, 119, 123, 125, 132, 135, 138, 141, 142, 143, 155], "preced": [15, 142], "mention": [15, 18, 19, 120, 123, 128, 135], "aros": 15, "70": 15, "80": 15, "90": [15, 86, 87], "effort": [15, 17, 125, 155], "stage": [15, 17, 19, 21, 118, 136, 1164], "complet": [15, 19, 20, 76, 77, 131, 132, 140, 141], "natur": [15, 123, 131, 132, 154], "like": [15, 18, 19, 21, 45, 46, 90, 91, 118, 119, 120, 122, 123, 125, 126, 127, 134, 135, 137, 138, 140, 141, 142, 143, 154, 155, 1164], "certainli": 15, "mission": [15, 1164], "creat": [15, 17, 18, 19, 21, 35, 36, 43, 44, 59, 60, 76, 77, 80, 81, 88, 89, 118, 121, 125, 126, 127, 133, 134, 135, 138, 139, 142, 153, 154, 1164, 1170], "At": [15, 20, 121], "process": [15, 16, 17, 18, 19, 21, 125, 127, 128, 132, 138, 143], "ourselv": 15, "lead": [15, 16, 76, 77, 155], "quansight": 15, "compani": 15, "made": [15, 19, 20, 132, 135, 138, 140], "organ": [15, 119, 128, 131, 132], "panda": 15, "scipi": 15, "conda": [15, 18, 21], "dask": 15, "apach": 15, "onnx": 15, "scikit": 15, "jupyt": 15, "aw": 15, "cupi": 15, "net": [15, 16, 138, 143], "sympi": 15, "rai": 15, "modin": 15, "spyder": 15, "includ": [15, 19, 20, 35, 36, 69, 70, 76, 77, 119, 120, 122, 123, 124, 125, 128, 129, 131, 132, 133, 134, 135, 136, 154, 155], "member": [15, 19], "googl": [15, 1164], "octoml": 15, "einop": [15, 76, 77], "further": [15, 16, 19, 21, 123, 126, 131, 137, 141, 142, 1164], "sponsor": 15, "lg": 15, "electron": 15, "microsoft": 15, "d": [15, 16, 17, 18, 49, 50, 94, 95, 118, 132, 141, 1164, 1170], "e": [15, 16, 17, 19, 21, 59, 60, 118, 125, 132, 141, 155], "shaw": 15, "co": [15, 41, 42, 86, 87, 138, 154, 1164], "intel": 15, "togeth": [15, 76, 77, 131, 132, 136, 142, 143, 155], "major": [15, 125, 126, 133, 134, 155], "involv": [15, 17, 21, 118, 133, 143, 1164, 1170], "anoth": [15, 18, 19, 76, 77, 125, 126, 127, 128, 132, 133, 140, 143], "promis": 15, "sign": [15, 18, 41, 42, 86, 87, 139, 143], "pursuit": 15, "unif": [15, 17, 140, 1164, 1170], "clearli": [15, 19, 20, 123, 125], "lot": [15, 16, 130, 140, 155], "thought": [15, 18, 19, 120], "care": [15, 19, 143], "attent": [15, 19, 131, 132], "gone": [15, 137], "simplifi": [15, 138, 139, 140, 142], "compat": [15, 23, 26, 27, 41, 42, 55, 56, 69, 70, 86, 87, 120, 121, 155, 1164], "excit": [15, 17, 118, 1164], "complianc": 15, "hope": [15, 155], "due": [15, 18, 23, 26, 27, 126, 132, 135], "suit": [15, 18, 118, 124, 125, 141, 154], "some": [15, 16, 18, 19, 20, 76, 77, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 154, 155, 1164], "motiv": [15, 140], "great": [15, 16, 19, 125, 138, 140], "convinc": 15, "celebr": 15, "encourag": [15, 154, 155, 1164, 1170], "foundat": 15, "point": [16, 19, 24, 25, 41, 42, 51, 52, 59, 60, 74, 75, 86, 87, 120, 122, 123, 125, 131, 135, 138, 140, 141, 154], "mai": [16, 18, 19, 23, 26, 27, 41, 42, 86, 87, 125, 126, 132, 140, 142], "ask": [16, 138, 140, 155, 1164], "perfectli": 16, "happi": [16, 18, 155], "current": [16, 18, 19, 20, 21, 76, 77, 127, 128, 132, 134, 138, 143, 154, 155, 1164], "abund": 16, "better": [16, 118, 121, 126, 127, 136, 137, 140, 141, 142], "ll": [16, 17, 19, 123, 132, 135, 141], "give": [16, 18, 19, 118, 120, 122, 123, 129, 140], "two": [16, 18, 35, 36, 51, 52, 122, 123, 125, 126, 127, 131, 132, 137, 141, 143, 1164], "exampl": [16, 18, 19, 20, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 74, 75, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 116, 117, 118, 119, 122, 125, 128, 129, 130, 131, 132, 133, 134, 135, 138, 140, 141, 142, 143, 154, 155, 1164], "streamlin": 16, "workflow": [16, 19, 20, 141, 153, 1164], "save": [16, 76, 77, 125, 136, 155], "week": [16, 19, 1164], "let": [16, 121, 122, 123, 125, 126, 127, 132, 133, 134, 138, 140, 141, 142, 143, 1164], "sai": [16, 18, 130, 140], "deepmind": 16, "releas": [16, 18, 20, 155, 1164], "awesom": 16, "paper": 16, "love": 16, "choic": [16, 18, 135, 141], "perceiverio": 16, "happen": [16, 18, 19, 125, 141], "slew": 16, "rush": 16, "f": [16, 19, 21, 118, 125, 132, 136, 138, 141, 143], "g": [16, 59, 60, 118, 132, 155], "inevit": 16, "deviat": [16, 57, 58, 59, 60, 125], "origin": [16, 19, 55, 56, 76, 77, 126, 129, 130, 133, 138, 140], "often": [16, 125, 128, 136, 155], "erron": 16, "train": [16, 45, 46, 90, 91, 128, 132, 134, 141, 142, 143, 153, 154, 155, 1164], "poor": 16, "converg": 16, "perform": [16, 69, 70, 76, 77, 119, 120, 123, 125, 127, 128, 129, 131, 132, 134, 135, 138, 141, 155], "issu": [16, 17, 20, 125, 138, 140, 142, 155], "etc": [16, 18, 19, 20, 43, 44, 59, 60, 71, 72, 76, 77, 88, 89, 116, 117, 119, 120, 123, 125, 131, 132, 133, 138, 140, 141, 155], "publish": [16, 155], "manag": [16, 17, 135, 155], "get": [16, 17, 18, 20, 76, 77, 118, 125, 127, 128, 133, 134, 135, 138, 139, 140, 141, 142, 1164, 1170], "work": [16, 18, 19, 20, 118, 125, 126, 132, 133, 134, 137, 138, 139, 140, 142, 143, 1164, 1170], "repositori": [16, 18, 19, 21, 124, 136], "pull": [16, 17, 18, 21, 119, 155], "request": [16, 17, 119], "confus": [16, 135], "do": [16, 18, 19, 20, 45, 46, 76, 77, 90, 91, 119, 120, 121, 122, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 140, 141, 142, 143, 155], "don": [16, 18, 19, 20, 71, 72, 116, 117, 125, 133, 142, 155], "expect": [16, 19, 125, 155, 1164], "codebas": [16, 17, 118, 119, 135, 137, 1164], "total": [16, 17, 19, 76, 77, 123, 125, 134, 141, 142, 155], "hour": 16, "spent": 16, "spin": 16, "off": [16, 18, 137], "test": [16, 18, 20, 41, 42, 69, 70, 86, 87, 118, 123, 136, 155], "error": [16, 18, 19, 41, 42, 76, 77, 86, 87, 120, 121, 123, 125, 131, 134, 136, 140, 155], "iter": [16, 29, 31, 32, 33, 34, 43, 44, 71, 72, 76, 77, 88, 89, 116, 117, 132, 138, 141], "address": [16, 19, 20, 131, 138], "sake": 16, "singl": [16, 19, 59, 60, 76, 77, 119, 120, 123, 125, 128, 130, 132, 135, 138, 141, 142, 143, 155], "multipl": [16, 19, 57, 58, 69, 70, 76, 77, 86, 87, 88, 89, 90, 91, 123, 128, 132, 155], "line": [16, 18, 123, 125, 131, 136, 139, 140, 141, 142, 153, 1164, 1170], "convert": [16, 29, 31, 32, 33, 34, 35, 36, 76, 77, 125, 131, 138, 155], "directli": [16, 19, 119, 120, 121, 122, 125, 126, 128, 131, 132, 133, 134, 135, 138, 140, 142, 143, 154, 155], "graph": [16, 23, 26, 27, 128, 132, 139, 155], "guarante": [16, 131, 155], "turn": [16, 18, 123, 125, 132], "4": [16, 21, 23, 26, 27, 35, 36, 37, 38, 41, 42, 45, 46, 49, 50, 51, 52, 55, 56, 59, 60, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 123, 125, 129, 132, 138, 140, 141, 142, 143, 1164], "step": [16, 18, 19, 21, 45, 46, 76, 77, 80, 81, 90, 91, 123, 129, 131, 132, 133, 134, 138, 141, 142, 143, 154, 1164], "take": [16, 17, 18, 19, 122, 123, 125, 127, 132, 133, 134, 138, 140, 142, 143, 155, 1164, 1170], "few": [16, 19, 125, 128, 132, 133, 134, 135, 136, 139, 140, 141, 142, 153, 1164, 1170], "second": [16, 18, 23, 26, 27, 41, 42, 45, 46, 63, 64, 86, 87, 90, 91, 123, 125, 126, 127, 135, 140], "automat": [16, 18, 19, 118, 120, 128, 132, 137, 138, 139, 142, 143, 1164], "convers": [16, 30, 31, 32, 33, 34, 76, 77, 137, 139, 143, 154, 155, 1164, 1170], "everyon": [16, 17, 19, 155], "regardless": [16, 17, 76, 77, 140, 143], "wouldn": 16, "nice": [16, 125], "write": [16, 19, 20, 21, 24, 25, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 70, 74, 75, 76, 77, 80, 81, 86, 87, 88, 89, 94, 95, 118, 119, 122, 123, 127, 128, 129, 135, 138, 140, 143], "onc": [16, 18, 19, 125, 132, 133, 134, 138, 141, 155], "know": [16, 19, 125], "among": [16, 76, 77, 125], "frantic": 16, "port": 16, "last": [16, 19, 53, 54, 69, 70, 76, 77, 123, 125, 127, 129, 136, 155], "lucid": 16, "honk": 16, "improv": [16, 19, 128, 138], "understand": [16, 18, 19, 20, 21, 118, 120, 122, 123, 124, 126, 127, 136, 137], "pattern": [16, 76, 77, 122, 133], "hasn": 16, "chang": [16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 122, 124, 125, 126, 132, 138, 142, 155, 1164, 1170], "now": [16, 18, 21, 76, 77, 119, 120, 125, 130, 132, 133, 136, 140, 141, 143, 154, 155], "spend": 16, "torchvis": 16, "probabl": [16, 125], "sonnet": 16, "about": [16, 18, 19, 124, 125, 137, 138, 142, 143, 155], "next": [16, 18, 19, 21, 122, 123, 129, 130, 136, 140, 141, 1164], "everyth": [16, 19, 20, 125, 127, 139, 155], "zero": [16, 35, 36, 37, 38, 41, 42, 45, 46, 69, 70, 76, 77, 82, 83, 86, 87, 90, 91, 120, 123, 125, 131, 132, 133, 134, 138, 141, 142, 1164], "need": [16, 18, 19, 20, 21, 43, 44, 88, 89, 119, 122, 123, 124, 126, 127, 128, 131, 132, 135, 138, 140, 141, 154, 155], "said": 16, "high": [16, 20, 59, 60, 76, 77, 141], "level": [16, 17, 20, 128, 137, 138, 141, 142, 143, 155], "modul": [16, 18, 21, 71, 72, 76, 77, 116, 117, 125, 126, 128, 129, 131, 135, 136, 138, 139, 141, 143, 154, 155, 1164], "optim": [16, 135, 139, 141, 143, 154, 1164], "trainer": [16, 153, 155, 1164], "statu": 16, "quo": 16, "kera": 16, "dopamin": 16, "ignit": 16, "catalyst": 16, "lightn": 16, "fastai": 16, "haiku": [16, 143], "flax": [16, 143, 155], "trax": [16, 143], "objax": [16, 143], "idea": [16, 121, 126, 136, 154], "fulli": [16, 120, 131, 132, 138, 139, 140, 141, 142, 143, 155], "offer": [16, 142], "strongli": [17, 18, 1164, 1170], "welcom": [17, 18, 19, 1164, 1170], "absolut": [17, 41, 42, 76, 77, 86, 87], "skill": 17, "whether": [17, 18, 23, 26, 27, 29, 31, 32, 33, 34, 43, 44, 45, 46, 55, 56, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 116, 117, 120, 132, 133, 135], "vetern": 17, "beginn": 17, "start": [17, 18, 19, 20, 21, 76, 77, 80, 81, 118, 122, 123, 126, 133, 137, 138, 140, 141, 142, 154, 155], "aspect": [17, 141, 1164], "guid": [17, 18, 19, 20, 136, 1164], "through": [17, 19, 20, 118, 123, 125, 126, 127, 128, 129, 132, 136, 137, 138, 140, 141, 142, 143, 154], "journei": [17, 1164, 1170], "inclusvi": 17, "big": [17, 155], "team": [17, 18, 19], "board": 17, "contributor": [17, 18, 19, 137, 1164], "split": [17, 19, 76, 77, 137, 138, 155, 1164], "section": [17, 19, 20, 118, 119, 120, 122, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142], "below": [17, 18, 20, 21, 35, 36, 118, 119, 121, 123, 125, 128, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 154, 1164], "best": [17, 18, 19, 20, 21, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "go": [17, 18, 19, 20, 118, 119, 123, 126, 127, 132, 137, 141, 155], "finish": [17, 18, 118, 1164], "dive": [17, 19, 20, 127, 132, 137, 140, 141, 155, 1164], "right": [17, 18, 19, 76, 77, 118, 123, 141], "environ": [17, 19, 21, 154], "basic": [17, 20, 21], "fork": [17, 18], "doc": [17, 20, 120, 122, 138, 141, 142, 1164], "document": [17, 19, 125, 126, 127, 139, 141, 143], "local": [17, 18, 21, 128], "task": [17, 19, 154, 1164], "help": [17, 18, 123, 125, 126, 129, 131, 132, 140, 141, 142, 153, 1164], "video": [17, 19, 119, 120, 122, 123, 125, 126, 128, 129], "realli": [18, 132, 155], "contribut": [18, 19, 20, 138, 1170], "toward": [18, 55, 56, 138, 1164, 1170], "page": [18, 19, 139, 143, 153, 1164, 1170], "explain": [18, 19, 20, 119, 120, 122, 123, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 1164, 1170], "main": [18, 21, 35, 36, 130, 132], "prefer": [18, 126, 132], "mode": [18, 19, 51, 52, 76, 77, 123, 132, 155], "git": [18, 19, 125], "recurs": [18, 21, 29, 31, 32, 33, 34, 76, 77, 128, 132, 142, 155], "submodul": [18, 19, 20, 21, 118, 124, 125, 128, 134, 137, 138, 142, 1164], "com": 18, "unifyai": [18, 19, 21], "http": [18, 122], "gh": 18, "your_fold": 18, "id": [18, 131, 132, 136], "cours": [18, 19, 123, 141, 155], "whatev": [18, 155], "integr": 18, "familiar": [18, 20], "decid": [18, 76, 77, 126], "sure": [18, 19, 20, 124, 125], "elig": 18, "free": [18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 154, 1164], "student": 18, "licenc": 18, "peopl": [18, 19, 118], "seem": [18, 142, 155], "miss": [18, 123, 125, 131, 132, 136], "option": [18, 19, 24, 25, 29, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 116, 117, 119, 120, 121, 122, 123, 125, 126, 127, 128, 132, 133, 134, 135, 136, 138, 143, 155], "add": [18, 19, 20, 23, 26, 27, 41, 42, 57, 58, 71, 72, 76, 77, 86, 87, 88, 89, 116, 117, 118, 119, 120, 122, 125, 126, 128, 129, 131, 132, 138, 140, 155, 1164, 1170], "explicit": [18, 21, 132, 133, 135, 138, 155], "remind": 18, "here": [18, 19, 20, 119, 120, 121, 123, 125, 126, 127, 132, 138, 139, 140, 141, 142, 143, 154, 155], "channel": [18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], "pace": 18, "updat": [18, 19, 20, 21, 45, 46, 76, 77, 90, 91, 118, 120, 123, 124, 130, 131, 132, 133, 138, 140, 141, 143, 155], "suggest": [18, 19, 119, 125], "latest": [18, 19, 20, 21, 122, 155], "packag": [18, 21, 126, 136, 155], "ensur": [18, 19, 120, 121, 125, 126, 131, 133, 136], "align": [18, 76, 77, 138, 140, 1164, 1170], "accord": [18, 21, 37, 38, 76, 77, 82, 83, 126, 128, 133], "stabl": [18, 65, 66, 138, 155], "pypi": [18, 20, 155], "mayb": [18, 29, 33, 34, 138, 140], "person": [18, 19], "experi": [18, 139, 141, 155], "avoid": [18, 19, 121, 125, 129, 130, 132, 136, 140], "pip": [18, 154, 1164], "instal": [18, 19, 21, 136, 154, 1164], "abil": [18, 139, 155], "certain": [18, 19, 76, 77, 125, 126, 133, 155], "perhap": [18, 140, 141, 142, 155], "keep": [18, 19, 76, 77, 121, 124, 125, 132, 139, 141, 143], "track": [18, 19], "either": [18, 19, 21, 41, 42, 76, 77, 86, 87, 122, 123, 125, 128, 129, 132, 133, 134, 138, 140, 141, 155], "termin": [18, 19, 21, 76, 77, 132, 138, 141], "run": [18, 21, 45, 46, 90, 91, 120, 123, 124, 125, 127, 129, 136, 138, 139, 140, 141, 142, 143, 154, 155], "command": [18, 21, 1164], "ivy_dev": [18, 19, 21], "name": [18, 19, 21, 63, 64, 121, 122, 125, 126, 127, 133, 136, 138, 140, 141, 143], "3": [18, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 55, 56, 59, 60, 74, 75, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 123, 125, 129, 132, 138, 140, 141, 142, 143, 1164], "8": [18, 21, 23, 26, 27, 41, 42, 53, 54, 55, 56, 59, 60, 65, 66, 86, 87, 90, 91, 94, 95, 123, 125, 132, 137, 141, 1164], "activ": [18, 19, 21, 25, 71, 72, 75, 116, 117, 119, 142, 1164], "setup": [18, 19], "click": [18, 19, 122, 1164], "icon": [18, 19], "side": [18, 19], "choos": [18, 19, 143], "left": [18, 19, 76, 77, 123, 133, 1164], "panel": 18, "select": [18, 19, 125, 138, 140, 143, 155], "drop": [18, 155], "down": [18, 125, 140], "path": [18, 21], "manual": [18, 19, 125, 142], "builtin": [18, 21, 140, 142], "doesn": [18, 21, 123, 125, 133, 138, 155], "requir": [18, 21, 119, 120, 121, 122, 123, 125, 127, 130, 131, 133, 134, 140, 155], "cmd": [18, 21], "directori": [18, 19, 21, 125, 126], "folder": [18, 19, 21, 119, 124, 125, 128], "file": [18, 19, 21, 76, 77, 119, 122, 125, 128, 129, 131, 132, 136, 138, 141], "abov": [18, 19, 21, 35, 36, 59, 60, 120, 122, 123, 125, 126, 128, 129, 131, 132, 135, 136, 140, 141, 142, 143], "m": [18, 19, 21, 35, 36, 51, 52, 59, 60, 86, 87, 118, 138], "python3": [18, 19, 21], "script": [18, 19, 21, 123, 138, 155], "bat": [18, 19, 21], "OR": [18, 19, 21, 69, 70], "bin": [18, 19, 21], "mac": [18, 19, 21], "linux": [18, 19, 21], "virtualenv": 18, "found": [18, 19, 76, 77, 122, 131, 132, 136], "os": 18, "note": [18, 19, 119, 122, 123, 125, 127, 132, 133], "tick": [18, 19], "abl": [18, 19, 76, 77, 128, 133, 135, 136, 140, 143], "To": [18, 121, 123, 125, 127, 128, 132, 136, 141, 142, 143, 1164], "ivy_test": [18, 19, 127], "test_array_api": [18, 19, 124, 125], "cd": [18, 19, 21], "r": [18, 19, 76, 77, 118], "txt": 18, "arrai": [18, 19, 20, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 118, 119, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 155, 1164], "visual": [18, 136, 155], "jetbrain": 18, "remot": 18, "mitig": 18, "potenti": [18, 137], "conflict": [18, 19, 141], "addit": [18, 19, 57, 58, 76, 77, 119, 122, 125, 126, 132, 133, 140, 141, 143], "yet": [18, 132, 155], "particular": [18, 19, 119, 121, 123, 125, 127, 133, 135], "system": [18, 19, 155], "jaxlib": [18, 120, 121, 133, 134, 140], "instruct": [18, 20], "desktop": 18, "wsl": 18, "2": [18, 19, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 120, 123, 125, 129, 132, 137, 138, 140, 141, 142, 143, 155, 1164], "powershel": 18, "admin": 18, "visit": [18, 19], "link": [18, 126], "imag": [18, 21, 48, 49, 50, 93, 94, 95, 119, 138, 139, 141, 143, 154, 1164], "profession": 18, "execut": [18, 19, 21, 132, 135, 138, 140, 143, 155], "deploy": 18, "top": [18, 19, 125, 126, 141, 142, 1164], "type": [18, 19, 20, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 130, 131, 132, 134, 135, 136, 138, 140, 141, 143, 1164], "press": [18, 19, 141, 1164], "ok": 18, "correctli": [18, 76, 77, 120, 125, 127, 132, 133, 136, 142, 155], "caus": [18, 19, 123, 125, 132, 135, 136, 155], "earlier": [18, 19], "might": [18, 19, 119, 125, 130, 133, 138, 140, 141], "necessari": [18, 55, 56, 123, 129, 132, 135], "virtualis": 18, "sudo": 18, "apt": 18, "ca": 18, "certif": 18, "curl": 18, "gnupg": 18, "lsb": 18, "mkdir": 18, "p": [18, 19, 43, 44, 76, 77, 88, 89, 118], "keyr": 18, "fssl": 18, "download": [18, 125], "gpg": 18, "dearmor": 18, "o": [18, 118, 138], "echo": 18, "deb": 18, "arch": 18, "dpkg": 18, "print": [18, 19, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 65, 66, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 116, 117, 123, 125, 132, 138, 140, 141, 142, 1164], "architectur": [18, 143, 155], "lsb_releas": 18, "cs": 18, "tee": 18, "list": [18, 20, 21, 29, 31, 32, 33, 34, 35, 36, 37, 38, 49, 50, 57, 58, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 116, 117, 119, 120, 123, 125, 126, 127, 132, 133, 134, 136, 138, 141, 142, 143, 155, 1164], "dev": [18, 39, 40, 76, 77, 84, 85, 128, 134, 138, 140, 142], "null": 18, "ce": 18, "cli": 18, "containerd": 18, "io": 18, "compos": [18, 125, 132, 155], "plugin": 18, "systemctl": 18, "permiss": 18, "relat": [18, 19, 121, 125, 136, 154], "post": [18, 57, 58, 143, 1164, 1170], "gener": [18, 19, 20, 21, 44, 45, 46, 59, 60, 71, 72, 76, 77, 89, 90, 91, 116, 117, 118, 119, 120, 122, 123, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 154, 155, 1164], "dure": [18, 45, 46, 76, 77, 90, 91, 128, 132, 133, 134, 135, 155], "detect": [18, 76, 77, 120, 125, 132, 136, 141, 142], "its": [18, 20, 21, 37, 38, 55, 56, 82, 83, 121, 122, 125, 126, 136, 143, 155], "simplest": [18, 123, 125], "valu": [18, 19, 23, 24, 25, 26, 27, 35, 36, 41, 42, 43, 44, 45, 46, 49, 50, 55, 56, 57, 58, 59, 60, 63, 64, 74, 75, 76, 77, 80, 81, 86, 87, 88, 89, 90, 91, 94, 95, 120, 122, 123, 125, 126, 127, 128, 132, 133, 134, 135, 136, 138, 140, 143, 155], "return": [18, 19, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 155, 1164], "inform": [18, 19, 125, 132, 136], "becaus": [18, 19, 120, 122, 125, 126, 127, 128, 129, 131, 133, 134, 135, 138, 142, 143, 155], "default": [18, 19, 24, 25, 29, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 116, 117, 120, 122, 123, 125, 126, 128, 129, 132, 133, 134, 142], "header": [18, 19], "summari": [18, 19, 76, 77, 82, 83, 125], "recommend": [18, 129], "advanc": 18, "bar": 18, "pytest": [18, 19, 125, 127], "checkbox": 18, "q": [18, 19, 118, 155], "fail": [18, 19, 20, 124, 125, 136, 138, 140], "It": [18, 19, 21, 24, 25, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 70, 74, 75, 80, 81, 86, 87, 88, 89, 94, 95, 118, 119, 122, 123, 125, 126, 127, 129, 131, 132, 133, 135, 138, 140, 141, 142], "headach": 18, "arm": [18, 19], "m1": 18, "instead": [18, 19, 20, 120, 122, 123, 125, 127, 128, 132, 135, 138, 140, 141, 155], "featur": [18, 19, 119, 120, 141, 155, 1164], "vm": 18, "azur": 18, "cloud": [18, 154], "mean": [18, 19, 59, 60, 67, 68, 76, 77, 116, 117, 118, 121, 123, 125, 128, 132, 133, 134, 135, 138, 140, 141, 142, 143, 154, 155, 1164], "configur": [18, 19, 21, 76, 77, 133], "defin": [18, 20, 119, 120, 122, 125, 133, 140, 142, 155], "dockerfil": [18, 21], "longer": [18, 125, 133, 135], "worri": 18, "platform": 18, "agnost": [18, 120, 131, 138, 140, 143, 155, 1164], "usual": [18, 125, 126], "studio": 18, "favourit": 18, "extens": [18, 19, 122, 125], "theme": 18, "too": [18, 19, 136, 155], "done": [18, 19, 123, 125, 136, 141], "unsupport": [18, 126, 136], "old": [18, 76, 77, 135], "slow": 18, "ipad": 18, "long": [18, 19, 123], "browser": 18, "cool": [18, 119], "requisit": 18, "befor": [18, 19, 20, 76, 77, 122, 125, 131, 133, 134, 135, 138, 141, 155], "head": [18, 132, 1164], "pane": [18, 19], "readi": 18, "begin": 18, "outlin": [18, 19, 20, 118, 122, 125, 128, 132, 135, 140], "green": [18, 19, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "dropdown": 18, "tab": [18, 141, 1164], "master": [18, 19, 132], "vs": [18, 125], "view": [18, 19], "built": [18, 19, 125, 139], "bottom": 18, "box": 18, "patient": 18, "upto": [18, 19], "15": [18, 41, 42, 59, 60, 80, 81, 123, 125], "minut": 18, "subsequ": [18, 120, 123, 125, 128, 131, 135, 142], "launch": 18, "12": [18, 41, 42, 59, 60, 86, 87, 94, 95, 123, 125, 132], "output": [18, 19, 24, 25, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 70, 74, 75, 76, 77, 80, 81, 86, 87, 88, 89, 94, 95, 118, 119, 120, 122, 123, 125, 127, 128, 131, 132, 134, 135, 138, 140, 142, 143, 155, 1164], "That": [18, 19, 125, 140, 141, 142], "alreadi": [18, 19, 76, 77, 120, 129, 132, 133, 140, 155, 1164], "refer": [18, 19, 69, 70, 120, 125, 126, 128, 133, 155], "previous": [18, 21, 125, 128, 138], "approach": [18, 19, 125, 128, 132, 140, 141, 155], "colour": 18, "applic": [18, 133, 134, 142], "good": [18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 142], "chanc": 18, "vscode": 18, "show": [18, 19, 76, 77, 123, 125, 135, 154, 155, 1164], "explor": [18, 19, 139, 143, 154], "troubleshoot": 18, "sometim": [18, 19, 125], "ever": [18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], "64": [18, 49, 50, 94, 95, 125, 141, 142, 1164], "bit": [18, 123, 125, 128, 132, 140], "usr": 18, "nutshel": [18, 120], "hook": 18, "lint": 18, "accept": [18, 19, 29, 120, 122, 123, 125, 127, 128, 131, 132, 134, 135, 140, 1164], "fix": [18, 19], "attempt": [18, 136, 155], "succe": 18, "problemat": 18, "appli": [18, 19, 20, 23, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 120, 121, 122, 123, 125, 128, 130, 132, 133, 134, 135, 138, 140, 141, 142, 143, 153, 155, 1164], "proce": [18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], "modifi": [18, 19, 122, 128, 133, 134, 136, 138], "properli": [18, 118], "enter": [18, 19, 120, 131, 133, 134], "unsur": [18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], "feel": [18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 1164], "server": [19, 1164], "appropri": [19, 71, 72, 116, 117, 125, 130], "context": [19, 123, 125, 132, 133, 134], "suitabl": [19, 119, 132], "quick": [19, 118, 142], "alwai": [19, 20, 45, 46, 55, 56, 76, 77, 90, 91, 119, 120, 122, 125, 128, 129, 131, 132, 135, 136, 138, 140, 155], "correct": [19, 20, 67, 68, 118, 120, 128, 132, 133, 134, 136, 1164], "tendenc": 19, "land": 19, "isn": [19, 141, 155], "end": [19, 132, 135, 137, 154, 155, 1164, 1170], "world": 19, "come": [19, 125, 142, 153, 1164, 1170], "fly": 19, "hard": [19, 140], "receiv": [19, 125, 133, 134], "respons": [19, 21], "internship": 19, "been": [19, 120, 122, 125, 128, 129, 132, 133, 134, 136, 138, 154, 155], "comment": [19, 136], "trigger": 19, "unansw": 19, "label": [19, 53, 54, 138, 139, 143], "respond": 19, "remov": [19, 20, 21, 76, 77, 122, 125, 128, 133, 135, 143], "i": [19, 21, 49, 50, 86, 87, 118, 125, 138, 141, 143], "someon": [19, 155], "els": [19, 20, 59, 60, 119, 121, 127, 128, 129, 135, 138, 140, 142, 143, 155], "strive": [19, 125, 155], "repli": 19, "newli": [19, 125, 135], "place": [19, 35, 36, 55, 56, 76, 77, 80, 81, 118, 119, 120, 121, 122, 123, 125, 126, 128, 132, 134, 136, 143], "bug": [19, 125], "serv": [19, 120, 125, 128, 131, 132, 137, 1164], "suspect": 19, "behaviour": [19, 120, 122, 125, 126, 131, 132, 135, 140], "observ": 19, "confid": 19, "noth": [19, 76, 77], "wrong": 19, "someth": [19, 119, 141, 142, 155], "bet": 19, "act": [19, 123, 126, 155], "placehold": [19, 120, 131, 136], "sub": [19, 20, 76, 77, 118, 125, 126, 132, 140, 141, 142, 1164], "mark": [19, 125], "ii": 19, "iii": 19, "titl": [19, 1164], "issue_numb": 19, "delet": [19, 21], "No": [19, 138], "wait": [19, 76, 77], "progress": [19, 132, 139, 143], "pr": 19, "soon": [19, 132, 153, 155, 1164, 1170], "partial": [19, 76, 77], "solut": [19, 125, 132], "review": [19, 119], "merg": 19, "everi": [19, 20, 21, 35, 36, 43, 44, 88, 89, 120, 123, 124, 125, 128, 129, 130, 132, 133, 135, 138, 140, 142], "shape": [19, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 119, 120, 122, 123, 125, 127, 133, 134, 135, 138, 140, 141, 142, 143, 1164], "move": [19, 76, 77, 119], "within": [19, 29, 33, 34, 125, 127, 142, 155], "7": [19, 21, 23, 26, 27, 41, 42, 45, 46, 49, 50, 53, 54, 55, 56, 59, 60, 65, 66, 86, 87, 90, 91, 94, 95, 123, 125, 128, 132, 135], "dai": 19, "close": [19, 122, 125], "likewis": [19, 120, 122, 128, 132, 133, 141], "associ": [19, 125, 127, 128, 130, 155], "freed": 19, "flag": [19, 45, 46, 76, 77, 90, 91, 133, 135, 140], "purpos": [19, 21, 120, 121, 123, 125, 128, 130, 131, 132, 137, 140, 1164], "remain": [19, 55, 56, 123, 155], "access": [19, 21, 76, 77, 126, 133], "prioriti": [19, 76, 77, 135], "more": [19, 23, 26, 27, 63, 64, 118, 119, 120, 123, 125, 126, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 154, 155, 1164], "short": [19, 142], "basi": [19, 124, 141], "situat": [19, 143], "alloc": [19, 35, 36, 155], "upon": [19, 123, 125, 135, 155], "period": 19, "prevent": [19, 45, 46, 90, 91, 135, 136, 140], "unabl": 19, "obvious": 19, "never": [19, 55, 56, 125, 132], "reflect": [19, 131], "qualiti": 19, "hypothet": 19, "frustrat": 19, "delai": 19, "busi": 19, "fine": [19, 140, 143], "inact": 19, "limit": [19, 76, 77, 123, 125, 136, 138, 141, 143, 155], "me": 19, "unfairli": 19, "definit": [19, 51, 52, 128, 133, 140], "investig": 19, "Then": [19, 21, 121, 126, 140, 155], "practic": 19, "separ": [19, 125, 127, 131, 132, 136, 138, 140, 141], "branch": [19, 132, 155], "simpli": [19, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 120, 122, 123, 125, 126, 128, 131, 132, 134, 135, 138, 142, 143, 155], "role": [19, 126, 139], "kept": [19, 76, 77, 135], "date": 19, "upstream": [19, 124], "base": [19, 23, 24, 25, 26, 27, 28, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 125, 127, 130, 132, 138, 154], "complic": [19, 127, 138], "root": [19, 21, 41, 42, 86, 87, 141], "merge_with_upstream": 19, "sh": 19, "name_of_your_branch": 19, "resolv": 19, "clone": [19, 21, 76, 77], "push": [19, 124, 136], "both": [19, 120, 121, 122, 123, 125, 126, 127, 128, 132, 134, 135, 138, 140, 141, 142, 143, 154, 155], "abort": 19, "tediou": 19, "resolut": 19, "stash": 19, "reinstat": 19, "correspond": [19, 37, 38, 41, 42, 55, 56, 76, 77, 82, 83, 86, 87, 120, 122, 123, 124, 125, 128, 131, 132, 133], "fetch": 19, "0": [19, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 67, 68, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 119, 122, 123, 125, 126, 127, 138, 140, 141, 142, 143, 155, 1164], "uncommit": 19, "unstag": 19, "untrack": 19, "comprehens": 19, "explan": [19, 120, 122, 126, 132, 140], "atlassian": 19, "tutori": [19, 126], "wrote": 19, "piec": [19, 128, 130, 131, 138], "tag": 19, "describ": [19, 125, 139, 143], "navig": [19, 118], "blame": 19, "revis": 19, "author": [19, 1164], "log": [19, 41, 42, 86, 87, 128, 132, 135, 138, 141, 1164], "eg": [19, 125], "16": [19, 41, 42, 51, 52, 59, 60, 86, 87, 123, 125, 141], "5": [19, 21, 23, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 51, 52, 55, 56, 57, 58, 59, 60, 65, 66, 74, 75, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 120, 123, 125, 127, 129, 140, 141, 142], "past": 19, "l": [19, 51, 52, 86, 87, 118], "filepath": [19, 76, 77], "grep": 19, "v": [19, 138, 141, 142, 143, 1164], "retriev": 19, "commit_id": 19, "handi": [19, 125], "histori": 19, "toggl": 19, "vertic": 19, "highlight": [19, 123], "previou": [19, 120, 125, 126, 143, 155], "shown": [19, 71, 72, 76, 77, 116, 117, 120, 121, 123, 125, 126, 136, 138, 140, 155], "whenev": [19, 125, 127, 140, 141], "think": [19, 123], "gain": [19, 137, 142], "quit": [19, 122, 125, 128, 130, 131], "repeat": [19, 55, 56, 76, 77, 122, 123, 125, 129, 131, 132, 133, 136], "yourself": [19, 20, 125, 154], "simpler": [19, 140], "cannot": [19, 121, 126, 129, 133, 143], "least": [19, 123, 125, 128, 131], "final": [19, 122, 123, 128, 131, 133, 135, 136, 138, 140, 141], "tickbox": 19, "lower": [19, 35, 36, 51, 52, 59, 60, 76, 77, 123, 125, 138, 155], "corner": 19, "without": [19, 76, 77, 119, 120, 121, 123, 126, 128, 131, 132, 134, 136, 138, 140, 141, 142, 154, 155], "detail": [19, 20, 119, 120, 124, 125, 127, 128, 129, 130, 132, 141, 142], "span": 19, "intent": [19, 135], "larg": [19, 141], "discourag": 19, "philosophi": 19, "increment": 19, "frequent": [19, 20], "valuabl": 19, "infrequ": 19, "earli": [19, 1164], "wast": 19, "spot": [19, 128], "mistak": [19, 136], "propos": 19, "mountain": 19, "around": [19, 76, 77, 120, 128, 131, 140, 155], "advoc": [19, 155], "individu": [19, 20, 128], "per": [19, 49, 50, 94, 95, 125, 141], "style": 19, "ve": [19, 137, 140, 1164], "were": [19, 76, 77, 119, 125, 132, 136], "actual": [19, 118, 128, 135, 137, 140, 142, 155], "aim": [19, 137], "part": [19, 35, 36, 119, 124, 125, 128, 138, 139, 143, 154, 155], "subsect": 19, "session": [19, 1164], "block": [19, 125, 128, 136, 137, 139, 143, 155, 1164], "smaller": [19, 55, 56, 138, 143], "edit": 19, "exact": [19, 74, 75, 76, 77, 138], "beauti": 19, "particularli": [19, 125, 141, 155], "concern": [19, 118, 123, 132, 135, 137], "effici": [19, 120, 125, 128, 132, 135, 136, 138, 141, 155], "difficult": [19, 125, 155], "undo": 19, "stress": 19, "frequenc": 19, "advantag": 19, "nifti": 19, "reassur": 19, "isol": 19, "bash": [19, 21], "shell": 19, "rm": 19, "structur": [19, 21, 76, 77, 119, 128, 131, 132, 141, 142], "fact": [19, 125, 141], "mount": 19, "local_path_to_ivi": 19, "overwrit": [19, 76, 77, 135, 138], "subfold": [19, 119, 125, 127], "insid": [19, 21, 119, 125, 132, 133], "wide": [19, 125], "via": [19, 119, 132, 133, 134, 135, 138, 140, 141, 154], "py": [19, 119, 120, 121, 122, 125, 126, 127, 128, 129, 133, 134, 136, 138, 140, 142, 143], "dep": 19, "fresh": 19, "copi": [19, 21, 35, 36, 37, 38, 43, 44, 55, 56, 76, 77, 80, 81, 82, 83, 88, 89, 122, 129, 133, 138, 140, 141, 154, 155], "arsen": 19, "button": 19, "declar": 19, "exec": 19, "rf": 19, "cp": 19, "ivy_contain": 19, "test_ivi": [19, 125, 127], "test_funct": [19, 125], "test_cor": 19, "test_imag": 19, "test_random_crop": 19, "array_api_test": 19, "test_creation_funct": 19, "test_arang": 19, "window": [19, 21, 49, 50, 94, 95], "variou": [19, 120, 122, 130, 154], "cpu": [19, 43, 44, 59, 60, 76, 77, 88, 89, 134, 155], "gpu": [19, 134, 140], "combin": [19, 76, 77, 123, 125, 128, 131, 132, 143], "torch": [19, 90, 91, 119, 120, 121, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 138, 140, 141, 142, 143, 155, 1164], "text": [19, 122], "ctrl": 19, "prompt": [19, 1164], "instanc": [19, 20, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 116, 117, 120, 122, 123, 125, 126, 127, 128, 131, 133, 135, 141, 142, 143], "shift": [19, 55, 56, 80, 81, 120, 123], "whole": 19, "multipli": [19, 41, 42, 86, 87, 123, 129, 131], "cursor": 19, "alt": 19, "j": [19, 86, 87, 118], "locat": [19, 119, 125, 127, 129, 134], "blog": 19, "debug": [19, 125, 132, 141], "breakpoint": 19, "gutter": 19, "caret": 19, "f8": 19, "f9": 19, "toolbar": 19, "method": [19, 20, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 116, 117, 119, 120, 122, 123, 125, 126, 127, 128, 131, 136, 138, 139, 142, 143, 155, 1164], "result": [19, 23, 24, 25, 26, 27, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 70, 74, 75, 76, 77, 80, 81, 86, 87, 88, 89, 94, 95, 119, 120, 122, 123, 125, 126, 127, 131, 132, 133, 135, 141, 155, 1164], "Into": 19, "f7": 19, "smart": 19, "sever": [19, 119, 155], "interest": 19, "consol": [19, 140], "store": [19, 76, 77, 122, 129, 131, 132, 138, 140, 141, 142], "variabl": [19, 23, 26, 27, 28, 29, 31, 32, 33, 34, 45, 46, 57, 58, 76, 77, 90, 91, 120, 121, 122, 125, 129, 132, 133, 135, 136, 141, 142, 143, 155, 1164], "fragment": 19, "except": [19, 59, 60, 69, 70, 76, 77, 121, 122, 131, 135, 136, 140, 155], "pychram": 19, "depth": [19, 141, 142, 143, 154], "dummi": 19, "wherein": [19, 125], "evalu": [19, 41, 42, 76, 77, 86, 87, 132], "failur": [19, 124], "wherebi": [20, 132], "broad": 20, "distribut": [20, 53, 54, 59, 60, 76, 77, 125, 134, 155], "across": [20, 76, 77, 120, 123, 125, 128, 132, 133], "todo": 20, "commit": [20, 125], "NOT": 20, "implement": [20, 118, 120, 121, 122, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 140, 141, 142, 143, 154, 155, 1164], "static": [20, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 116, 117, 122, 123, 128, 155], "revers": [20, 23, 26, 27, 122, 123, 143, 155], "resourc": 20, "content": [20, 21, 76, 77, 126, 135, 138, 141], "thei": [20, 76, 77, 118, 119, 123, 125, 128, 130, 132, 133, 134, 135, 136, 140, 141, 142, 143, 155, 1164], "hypothesi": [20, 127], "pass": [20, 71, 72, 76, 77, 116, 117, 120, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 135, 136, 140, 155], "cover": [20, 122, 123, 125, 128, 130, 137], "lambda": [20, 138, 141], "direct": [20, 126, 142, 143, 154], "bind": [20, 132], "special": [20, 23, 26, 27, 119, 120, 122, 123, 131], "aforement": 20, "categori": [20, 119, 126, 131, 132, 133, 137, 1164], "parent": [20, 140], "class": [20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 116, 117, 120, 122, 123, 125, 131, 132, 133, 134, 138, 139, 141, 142, 143, 153, 154, 155, 1164], "arraywithelementwis": [20, 23, 26, 27, 41, 131], "containerwithmanipul": 20, "hint": [20, 119, 120, 122, 128, 131, 135, 136], "docstr": [20, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 118, 119, 120, 128, 132, 136], "thorough": [20, 120, 122, 125], "transpil": [20, 126, 137, 139, 1164, 1170], "verifi": [20, 121, 125, 133, 134, 140, 1164, 1170], "builder": [21, 153, 155, 1164], "maco": 21, "ubuntu": 21, "arg": [21, 29, 30, 31, 32, 76, 77, 138, 140, 142], "uid": 21, "make_docs_without_dock": 21, "rel": [21, 55, 56, 80, 81, 127, 1164], "synchron": 21, "rest": [21, 139, 143], "remove_doc": 21, "_": [21, 41, 42, 86, 87, 122, 125, 132, 135, 140, 141], "indic": [21, 43, 44, 49, 50, 55, 56, 57, 58, 76, 77, 88, 89, 94, 95, 126, 136, 139, 143, 1164], "privat": [21, 125], "fulfil": [21, 137, 1164], "autogenerated_sourc": 21, "format": [21, 76, 77, 118, 122, 133, 134, 138, 140, 141, 1164], "x": [21, 23, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 132, 135, 136, 138, 140, 141, 142, 143, 1164], "png": [21, 141], "_imag": 21, "lastli": 21, "rst": 21, "skip": [21, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 125], "read": [21, 76, 77, 1164], "partial_sourc": 21, "conf": 21, "create_rst_fil": 21, "filter": [21, 49, 50, 94, 95, 125], "repres": [21, 24, 25, 41, 42, 74, 75, 86, 87, 125, 140], "overal": [21, 122, 132, 133, 134, 143], "markup": 21, "6": [21, 23, 26, 27, 35, 36, 41, 42, 45, 46, 49, 50, 55, 56, 59, 60, 65, 66, 80, 81, 86, 87, 88, 89, 94, 95, 123, 125, 129, 132, 140, 141, 142], "extract": [21, 119, 121], "get_functions_and_class": 21, "doctr": 21, "readm": [21, 155], "module_nam": 21, "copy_readme_to_rst": 21, "tabl": 21, "toc": 21, "tree": 21, "append": [21, 76, 77, 125, 138, 141], "append_toctree_to_rst": 21, "9": [21, 23, 26, 27, 41, 42, 45, 46, 49, 50, 55, 56, 59, 60, 86, 87, 90, 91, 94, 95, 123, 125, 141, 142], "index": [21, 35, 36, 43, 44, 63, 64, 76, 77, 80, 81, 88, 89, 128, 132, 140], "create_index_rst": 21, "14": [21, 41, 42, 59, 60, 86, 87, 123, 125, 132], "\u03c0": 21, "namespac": [21, 119, 133, 138, 143], "arraywithactiv": [23, 24, 26, 27], "arraywithcr": [23, 26, 27, 35], "arraywithdatatyp": [23, 26, 27, 37], "arraywithdevic": [23, 26, 27, 39, 140], "arraywithgener": [23, 26, 27, 43, 140], "arraywithgradi": [23, 26, 27, 45, 140], "arraywithimag": [23, 26, 27, 47, 140], "arraywithlay": [23, 26, 27, 49], "arraywithlinearalgebra": [23, 26, 27, 51], "arraywithloss": [23, 26, 27, 53], "arraywithmanipul": [23, 26, 27, 55], "arraywithnorm": [23, 26, 27, 57], "arraywithrandom": [23, 26, 27, 59, 140], "arraywithsearch": [23, 26, 27, 61], "arraywithset": [23, 26, 27, 63], "arraywithsort": [23, 26, 27, 65], "arraywithstatist": [23, 26, 27, 67], "arraywithutil": [23, 26, 27, 69], "properti": [23, 26, 27, 76, 77, 123, 125, 127, 128, 132, 140, 141, 142], "__add__": [23, 26, 27, 120, 122, 123, 131, 132, 140], "variant": [23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 122, 123], "wrap": [23, 24, 25, 26, 27, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 117, 118, 120, 122, 125, 128, 129, 131, 132, 133, 134, 135, 138, 140, 143, 155], "minim": [23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 122, 135, 138], "paramet": [23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 116, 117, 119, 122, 125, 140, 141, 154], "self": [23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 131, 132, 138, 140, 141, 142, 143, 1164], "input": [23, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 119, 120, 122, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 138, 140, 141, 142, 143, 155], "numer": [23, 26, 27, 41, 42, 59, 60, 86, 87, 119, 127, 142], "broadcast": [23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 94, 95, 119, 122, 123, 125, 132, 133], "ret": [23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 119, 122, 126, 138, 143], "element": [23, 24, 25, 26, 27, 35, 36, 41, 42, 43, 44, 55, 56, 63, 64, 74, 75, 76, 77, 80, 81, 86, 87, 88, 89, 122, 125, 127, 138, 143], "wise": [23, 26, 27, 41, 42, 74, 75, 76, 77, 86, 87, 138, 143], "sum": [23, 26, 27, 41, 42, 67, 68, 76, 77, 86, 87, 128, 132, 133, 135, 138], "promot": [23, 24, 25, 26, 27, 37, 38, 41, 42, 51, 52, 74, 75, 82, 83, 86, 87, 122, 128, 133], "y": [23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 63, 64, 65, 66, 69, 70, 74, 75, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 119, 123, 126, 129, 132, 138, 140], "z": [23, 26, 27, 41, 42, 43, 44, 53, 54, 59, 60, 86, 87, 88, 89, 123, 129, 132, 138, 140], "mix": [23, 26, 27, 37, 38, 41, 42, 43, 44, 82, 83, 86, 87, 118, 123, 125, 138], "__le__": [23, 26, 27], "equal": [23, 26, 27, 35, 36, 41, 42, 43, 44, 59, 60, 76, 77, 86, 87, 88, 89, 123, 132, 133], "bool": [23, 26, 27, 29, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 51, 52, 55, 56, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 116, 117, 121, 123, 132, 133, 135, 136, 143], "fals": [23, 26, 27, 29, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 55, 56, 65, 66, 67, 68, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 116, 117, 121, 123, 125, 127, 132, 135, 136, 141, 142, 143], "true": [23, 24, 25, 26, 27, 37, 38, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 65, 66, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 116, 117, 121, 123, 125, 126, 127, 128, 132, 133, 135, 136, 138, 140, 141, 142, 143], "__radd__": [23, 26, 27, 122, 123], "dtype": [23, 26, 27, 35, 36, 37, 38, 59, 60, 67, 68, 76, 77, 80, 81, 82, 83, 88, 89, 119, 121, 123, 125, 126, 127, 128, 133, 134, 136, 140, 1164], "is_vari": [23, 26, 27, 45, 46, 90, 91, 135], "boolean": [23, 26, 27, 41, 42, 43, 44, 45, 46, 55, 56, 76, 77, 86, 87, 88, 89, 90, 91, 125, 127, 132], "trainabl": [23, 26, 27, 45, 46, 90, 91, 122, 139, 141, 142], "otherwis": [23, 26, 27, 29, 31, 32, 33, 34, 37, 38, 41, 42, 45, 46, 51, 52, 55, 56, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 120, 125, 131, 132, 133, 134, 138, 140], "mt": [23, 26, 27, 140], "ndim": [23, 26, 27, 125, 140], "dimens": [23, 26, 27, 35, 36, 49, 50, 51, 52, 53, 54, 55, 56, 63, 64, 69, 70, 76, 77, 94, 95, 123, 125, 126, 127, 138, 141], "ax": [23, 26, 27, 51, 52, 55, 56, 69, 70, 74, 75, 76, 77, 119, 123, 125, 133, 140], "size": [23, 26, 27, 55, 56, 76, 77, 125, 127, 140, 141], "product": [23, 26, 27, 41, 42, 132], "none": [23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 119, 120, 121, 123, 125, 126, 127, 128, 132, 133, 134, 135, 136, 138, 140, 142, 143], "unknown": [23, 26, 27], "model": [23, 26, 27, 141, 142, 1164], "abc": [24, 25, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 76, 77, 140], "gelu": [24, 25, 74, 75], "approxim": [24, 25, 74, 75, 122], "185": [24, 25, 74, 75], "046": [24, 25, 74, 75], "leaky_relu": [24, 25, 74, 75, 125, 1164], "alpha": [24, 25, 74, 75, 125, 126], "39": [24, 25, 59, 60, 74, 75], "85": [24, 25, 59, 60, 74, 75], "17": [24, 25, 74, 75, 94, 95, 123, 132], "relu": [24, 25, 71, 72, 74, 75, 141, 142, 1164], "sigmoid": [24, 25, 74, 75, 138, 141, 142, 1164], "269": [24, 25, 74, 75], "731": [24, 25, 74, 75], "881": [24, 25, 41, 42, 74, 75, 86, 87], "softmax": [24, 25, 71, 72, 74, 75, 1164], "axi": [24, 25, 51, 52, 53, 54, 55, 56, 65, 66, 67, 68, 69, 70, 74, 75, 76, 77, 80, 81, 120, 123, 125, 126, 128, 132, 133, 135, 136, 138, 140, 143, 154], "422": [24, 25, 74, 75], "155": [24, 25, 74, 75], "softplu": [24, 25, 74, 75, 1164], "3461": [24, 25, 74, 75], "6491": [24, 25, 74, 75], "535": [24, 25, 74, 75], "42": [24, 25, 59, 60, 74, 75, 143], "tanh": [24, 25, 41, 42, 74, 75, 86, 87, 138, 1164], "whose": [24, 25, 35, 36, 41, 42, 51, 52, 55, 56, 63, 64, 74, 75, 80, 81, 86, 87, 122, 125], "hyperbol": [24, 25, 41, 42, 74, 75, 86, 87], "angl": [24, 25, 41, 42, 74, 75, 86, 87, 154], "real": [24, 25, 41, 42, 74, 75, 86, 87], "float": [24, 25, 35, 36, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 57, 58, 59, 60, 74, 75, 80, 81, 86, 87, 88, 89, 90, 91, 120, 121, 122, 125, 127, 128, 132, 133, 135, 140, 142], "tangent": [24, 25, 41, 42, 74, 75, 86, 87, 122], "762": [24, 25, 41, 42, 74, 75, 86, 87], "964": [24, 25, 41, 42, 74, 75, 86, 87], "collect": [29, 76, 77, 125, 127, 154], "args_to_contain": 29, "include_deriv": [29, 30, 31, 32, 33, 34], "kwarg": [29, 30, 31, 32, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 138, 140, 142], "args_to_ivi": 29, "keyword": [29, 31, 32, 76, 77, 119, 120, 125, 126, 127, 133, 134, 135, 141], "nest": [29, 31, 32, 33, 34, 76, 77, 119, 125, 128, 131, 132, 140, 141, 142, 155], "unchang": [29, 31, 32, 33, 34], "posit": [29, 31, 32, 41, 42, 51, 52, 55, 56, 86, 87, 120, 125, 126, 127, 141, 154], "dict": [29, 31, 32, 33, 34, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 121, 126, 132, 136, 141, 142], "deriv": [29, 31, 32, 33, 34, 35, 36, 45, 46, 80, 81, 90, 91, 133, 134, 140, 142], "tupl": [29, 31, 32, 33, 34, 35, 36, 49, 50, 51, 52, 55, 56, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 119, 120, 121, 125, 126, 127, 132, 133, 134, 136, 140, 141, 142, 155], "str": [29, 31, 32, 49, 50, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 121, 133, 134, 136], "kei": [29, 31, 32, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 125, 127, 132, 136, 141], "word": [29, 31, 32, 132], "args_to_n": [29, 135, 140], "nativ": [29, 32, 33, 34, 35, 36, 76, 77, 125, 126, 133, 135, 140, 141], "to_ivi": [29, 76, 77, 140], "leaf": [29, 33, 34, 76, 77, 128, 132, 141], "union": [29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 119, 120, 121, 123, 128, 131, 132, 133, 134, 135, 136, 138, 143], "nativearrai": [29, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 54, 55, 56, 59, 60, 74, 75, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 119, 120, 123, 128, 131, 132, 135, 136, 138, 140, 143], "travers": [29, 33, 34, 76, 77, 132, 138, 140], "lowest": [29, 33, 34, 59, 60, 76, 77, 128, 155], "leav": [29, 33, 34, 76, 77, 120, 122, 123, 125, 128, 132, 133, 135, 141, 142], "to_n": [29, 76, 77], "item": [29, 34, 71, 72, 76, 77, 133, 138, 140, 141, 143, 1164], "asarrai": [35, 36, 125, 127, 135], "ndarrai": [35, 36, 120, 121, 131, 133, 134, 135, 140], "nativedtyp": [35, 36, 59, 60, 80, 81, 119, 120, 133, 134], "datatyp": [35, 36, 76, 77, 82, 83], "infer": [35, 36, 55, 56, 80, 81, 118, 129, 133, 134, 138, 143], "nativedevic": [35, 36, 39, 40, 59, 60, 80, 81, 119, 120, 133, 134], "interpret": [35, 36], "empty_lik": [35, 36, 80, 81], "uniniti": [35, 36], "from_dlpack": [35, 36, 80, 81], "full_lik": [35, 36, 80, 81, 121], "fill_valu": [35, 36, 80, 81, 121, 127, 133], "scalar": [35, 36, 74, 75, 80, 81, 133, 138, 143, 155], "fill": [35, 36, 59, 60, 76, 77, 80, 81, 127], "int": [35, 36, 45, 46, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 69, 70, 80, 81, 90, 91, 94, 95, 119, 120, 121, 123, 126, 127, 128, 132, 133, 134, 135, 136, 143], "000123": [35, 36], "ones": [35, 36, 59, 60, 76, 77, 80, 81, 125, 138, 140, 141, 1164], "meshgrid": [35, 36, 80, 81], "xy": [35, 36, 80, 81], "native_arrai": [35, 36, 37, 38, 41, 42, 43, 44, 80, 81, 86, 87, 88, 89, 125, 127], "ones_lik": [35, 36, 80, 81, 143, 1164], "tril": [35, 36, 80, 81], "k": [35, 36, 59, 60, 80, 81, 86, 87, 118, 126, 127, 138], "n": [35, 36, 59, 60, 69, 70, 86, 87, 118, 125], "innermost": [35, 36, 51, 52], "mxn": [35, 36], "matric": [35, 36, 51, 52, 154], "diagon": [35, 36, 51, 52], "triangular": [35, 36, 51, 52], "specifi": [35, 36, 53, 54, 55, 56, 59, 60, 69, 70, 74, 75, 76, 77, 118, 120, 125, 126, 127, 128, 133, 134, 135, 138, 141, 142, 143], "triu": [35, 36, 80, 81], "upper": [35, 36, 51, 52, 59, 60, 76, 77, 125], "zeros_lik": [35, 36, 80, 81, 126, 1164], "creation": [36, 76, 77, 81, 119, 121, 125, 127, 133, 134, 138], "data_typ": [37, 38, 82, 83, 119, 121, 125, 133], "astyp": [37, 38, 49, 50, 82, 83, 94, 95, 126, 133, 135], "broadcast_arrai": [37, 38, 82, 83], "arbitrari": [37, 38, 76, 77, 82, 83, 120, 125, 128, 132, 135, 142, 155], "x1": [37, 38, 41, 42, 43, 44, 82, 83, 86, 87, 88, 89, 120, 123, 126], "x2": [37, 38, 41, 42, 43, 44, 51, 52, 76, 77, 82, 83, 86, 87, 88, 89, 120, 123, 126], "x3": [37, 38], "broadcast_to": [37, 38, 82, 83, 133], "can_cast": [37, 38, 82, 83, 128, 133], "cast": [37, 38, 82, 83, 126, 127, 128, 133, 1164], "occur": [37, 38, 63, 64, 82, 83], "rule": [37, 38, 51, 52, 82, 83, 123, 125, 128, 131, 132, 133, 136], "float32": [37, 38, 49, 50, 82, 83, 88, 89, 94, 95, 123, 125, 133], "float64": [37, 38, 59, 60, 125, 133], "as_n": [37, 38, 39, 40, 82, 83, 84, 85, 133], "finfo": [37, 38, 82, 83], "iinfo": [37, 38, 82, 83, 136], "is_bool_dtyp": [37, 38, 82, 83], "is_float_dtyp": [37, 38, 82, 83, 121], "is_int_dtyp": [37, 38, 82, 83, 121, 127], "is_uint_dtyp": [37, 38, 82, 83, 121, 127], "result_typ": [37, 38, 82, 83, 133], "arrays_and_dtyp": [37, 38, 82, 83], "to_devic": [39, 40, 76, 77, 84, 85], "stream": [39, 40, 84, 85], "ab": [41, 42, 86, 87, 125, 130, 1164], "aco": [41, 42, 86, 87, 1164], "invers": [41, 42, 86, 87, 140, 154], "cosin": [41, 42, 86, 87], "57": [41, 42, 86, 87], "69": [41, 42], "acosh": [41, 42, 86, 87, 1164], "32": [41, 42, 45, 46, 59, 60, 86, 87, 125, 141], "99": [41, 42, 86, 87], "asin": [41, 42, 86, 87, 1164], "sine": [41, 42, 86, 87], "asinh": [41, 42, 86, 87, 1164], "82": [41, 42], "atan": [41, 42, 86, 87, 1164], "785": [41, 42, 86, 87], "464": [41, 42], "atan2": [41, 42, 86, 87, 1164], "coordin": [41, 42, 86, 87], "quotient": [41, 42, 86, 87], "245": [41, 42], "atanh": [41, 42, 86, 87, 1164], "549": [41, 42, 86, 87], "47": [41, 42, 59, 60, 86, 87], "bitwise_and": [41, 42, 86, 87], "integ": [41, 42, 59, 60, 69, 70, 76, 77, 86, 87, 125, 127, 132, 133, 140], "bitwise_invert": [41, 42, 86, 87], "bitiwse_invert": [41, 42], "bitwise_left_shift": [41, 42, 86, 87], "bitwise_or": [41, 42, 86, 87], "bitwise_right_shift": [41, 42, 86, 87], "bitwise_xor": [41, 42, 86, 87], "ceil": [41, 42, 86, 87, 1164], "express": [41, 42, 86, 87, 122, 136, 138, 143], "radian": [41, 42, 86, 87, 122], "54": [41, 42, 86, 87, 123], "416": [41, 42], "cosh": [41, 42, 86, 87, 1164], "76": [41, 42, 74, 75, 86, 87], "23": [41, 42, 59, 60, 80, 81, 86, 87], "03": [41, 42, 86, 87], "81": [41, 42], "divid": [41, 42, 76, 77, 86, 87, 123, 131], "dividend": [41, 42, 86, 87], "divisor": [41, 42, 45, 46, 86, 87, 90, 91], "375": [41, 42], "erf": [41, 42, 86, 87], "exponenti": [41, 42, 86, 87], "gauss": [41, 42, 86, 87], "exp": [41, 42, 86, 87, 1164], "expm1": [41, 42, 86, 87], "244": [41, 42], "918": [41, 42], "48": [41, 42, 86, 87], "147": [41, 42], "floor": [41, 42, 86, 87, 1164], "floor_divid": [41, 42, 86, 87], "13": [41, 42, 49, 50, 59, 60, 88, 89, 94, 95, 123, 125, 132], "greater": [41, 42, 59, 60, 76, 77, 86, 87], "greater_equ": [41, 42, 86, 87], "isfinit": [41, 42, 86, 87, 125], "out_i": [41, 42, 86, 87], "self_i": [41, 42, 86, 87], "finit": [41, 42, 86, 87], "isinf": [41, 42, 86, 87], "neg": [41, 42, 55, 56, 59, 60, 69, 70, 74, 75, 86, 87, 128, 132, 135], "infin": [41, 42, 86, 87, 122], "isnan": [41, 42, 86, 87], "nan": [41, 42, 76, 77, 86, 87, 119, 122, 125], "less_equ": [41, 42, 86, 87], "log10": [41, 42, 86, 87], "logarithm": [41, 42, 86, 87], "log1p": [41, 42, 86, 87], "log2": [41, 42, 86, 87], "logaddexp": [41, 42, 86, 87], "logical_and": [41, 42, 86, 87, 1164], "logical_not": [41, 42, 86, 87, 1164], "logical_or": [41, 42, 86, 87, 1164], "logical_xor": [41, 42, 86, 87], "not_equ": [41, 42, 86, 87], "pow": [41, 42, 86, 87], "expon": [41, 42], "remaind": [41, 42, 76, 77, 86, 87], "respect": [41, 42, 45, 46, 86, 87, 90, 91, 120, 121, 123, 125, 131, 132, 133, 136], "x2_i": [41, 42, 86, 87], "11": [41, 42, 45, 46, 49, 50, 59, 60, 86, 87, 94, 95, 123, 125, 132], "18": [41, 42, 59, 60, 86, 87, 123, 132], "94": [41, 42, 59, 60, 86, 87], "256": [41, 42], "0001": [41, 42], "36": [41, 42], "37": [41, 42, 86, 87], "67": [41, 42, 86, 87, 132], "45": [41, 42, 86, 87, 125], "24": [41, 42, 94, 95], "678": [41, 42], "25": [41, 42, 51, 52, 53, 54, 59, 60, 86, 87, 94, 95, 132], "33": [41, 42, 57, 58, 59, 60, 86, 87, 88, 89], "sin": [41, 42, 86, 87, 131, 138, 1164], "841": [41, 42, 86, 87], "909": [41, 42, 86, 87], "141": [41, 42, 86, 87], "sinh": [41, 42, 86, 87, 1164], "63": [41, 42, 45, 46, 86, 87], "232": [41, 42, 86, 87], "51": [41, 42], "sqrt": [41, 42, 86, 87], "squar": [41, 42, 51, 52, 86, 87, 125], "subtract": [41, 42, 86, 87, 123, 131], "tan": [41, 42, 86, 87, 120, 122, 126, 128, 132, 135, 138, 1164], "56": [41, 42, 59, 60, 86, 87, 123], "19": [41, 42, 59, 60, 86, 87, 123], "trunc": [41, 42, 86, 87], "elementwis": [42, 76, 77, 87, 119, 128, 138, 143], "all_equ": [43, 44, 88, 89], "equality_matrix": [43, 44, 88, 89], "compar": [43, 44, 76, 77, 88, 89, 125, 127, 136, 141], "matrix": [43, 44, 51, 52, 76, 77, 88, 89], "clip_vector_norm": [43, 44, 88, 89], "max_norm": [43, 44, 88, 89], "maximum": [43, 44, 55, 56, 76, 77, 88, 89, 123, 138, 141, 143, 1164], "norm": [43, 44, 58, 76, 77, 88, 89, 119, 1164], "vector": [43, 44, 76, 77, 88, 89, 154], "downscal": [43, 44, 88, 89], "max": [43, 44, 67, 68, 76, 77, 88, 89], "894": [43, 44, 88, 89], "79": [43, 44, 88, 89], "gather_nd": [43, 44, 76, 77, 88, 89, 1164], "gather": [43, 44, 76, 77, 88, 89], "cuda": [43, 44, 59, 60, 76, 77, 88, 89, 138, 141, 155], "to_numpi": [43, 44, 76, 77, 88, 89, 141, 1164], "adam_step": [45, 46, 90, 91], "mw": [45, 46, 90, 91, 142], "vw": [45, 46, 90, 91, 142], "beta1": [45, 46, 90, 91, 142], "beta2": [45, 46, 90, 91, 142], "999": [45, 46, 74, 75, 86, 87, 90, 91, 142], "epsilon": [45, 46, 53, 54, 57, 58, 90, 91, 128, 132, 135, 142], "1e": [45, 46, 53, 54, 57, 58, 90, 91, 127, 128, 132, 135, 142, 143, 1164], "07": [45, 46, 53, 54, 86, 87, 90, 91, 142], "cost": [45, 46, 90, 91], "weight": [45, 46, 90, 91, 128, 132, 142, 143], "ws": [45, 46, 90, 91], "dc": [45, 46, 90, 91], "dw": [45, 46, 90, 91], "w": [45, 46, 49, 50, 76, 77, 86, 87, 90, 91, 94, 95, 138, 141, 142], "averag": [45, 46, 90, 91], "moment": [45, 46, 90, 91, 129, 155], "forget": [45, 46, 90, 91], "adam": [45, 46, 90, 91, 141, 142, 143, 1164], "divis": [45, 46, 90, 91, 128], "delta": [45, 46, 90, 91], "dcdw": [45, 46, 90, 91], "adam_step_delta": [45, 46, 90, 91], "639": [45, 46], "00121": [45, 46], "0102": [45, 46], "0397": [45, 46], "exclus": [45, 46, 76, 77, 90, 91, 125, 128, 132, 143], "is_var": [45, 46, 90, 91], "set_backend": [45, 46, 90, 91, 128, 129, 130, 133, 1164], "unset_backend": [45, 46, 90, 91, 129], "gradient": [46, 76, 77, 91, 119, 132, 141, 142, 154, 155, 1164], "conv1d": [49, 50, 94, 95], "stride": [49, 50, 94, 95], "pad": [49, 50, 94, 95], "data_format": [49, 50, 94, 95], "nwc": [49, 50, 94, 95], "dilat": [49, 50, 94, 95], "batch_siz": [49, 50, 94, 95, 141], "d_in": [49, 50, 94, 95], "convolut": [49, 50, 94, 95], "fw": [49, 50, 94, 95, 125, 127], "d_out": [49, 50, 94, 95], "slide": [49, 50, 94, 95], "valid": [49, 50, 69, 70, 94, 95, 125, 126, 127, 133, 138], "algorithm": [49, 50, 74, 75, 94, 95, 155], "ncw": [49, 50, 94, 95], "wio": [49, 50], "20": [49, 50, 59, 60, 86, 87, 140], "depthwise_conv2d": [49, 50, 94, 95, 1164], "nhwc": [49, 50, 94, 95], "h": [49, 50, 94, 95, 118, 132], "fh": [49, 50, 94, 95], "nchw": [49, 50, 94, 95], "randint": [49, 50, 59, 60, 94, 95, 1164], "255": [49, 50, 94, 95], "128": [49, 50, 94, 95], "random_norm": [49, 50, 59, 60, 94, 95, 125], "linear_algebra": [51, 52, 119, 140], "choleski": [51, 52], "symmetr": [51, 52, 132], "u": [51, 52], "625": [51, 52], "cross": [51, 52, 53, 54, 1164], "det": [51, 52], "offset": [51, 52, 57, 58], "axis1": [51, 52, 55, 56], "axis2": [51, 52], "eigh": [51, 52], "namedtupl": [51, 52, 63, 64], "eigvalsh": [51, 52], "inv": [51, 52, 140, 1164], "matmul": [51, 52, 119, 125, 129, 138, 1164], "matrix_norm": [51, 52, 76, 77], "ord": [51, 52, 76, 77], "fro": [51, 52], "keepdim": [51, 52, 67, 68, 69, 70, 76, 77, 136], "matrix_rank": [51, 52], "rtol": [51, 52, 127], "matrix_transpos": [51, 52, 140], "outer": [51, 52], "pinv": [51, 52, 1164], "qr": [51, 52], "reduc": [51, 52, 69, 70, 76, 77, 140], "solv": [51, 52, 139, 154], "svd": [51, 52, 1164], "full_matric": [51, 52], "svdval": [51, 52], "tensordot": [51, 52], "trace": [51, 52, 76, 77, 138, 155], "vecdot": [51, 52], "vector_norm": [51, 52, 76, 77], "vector_to_skew_symmetric_matrix": [51, 52, 1164], "binary_cross_entropi": [53, 54], "pred": [53, 54, 128, 132, 135], "predict": [53, 54], "amount": [53, 54, 134], "smooth": [53, 54], "binari": [53, 54], "entropi": [53, 54], "357": [53, 54], "223": [53, 54], "cross_entropi": [53, 54, 128, 132, 135], "along": [53, 54, 55, 56, 69, 70, 74, 75, 76, 77, 119, 135], "3862944": [53, 54], "sparse_cross_entropi": [53, 54], "logit": [53, 54], "spars": [53, 54], "loss": [54, 119, 128, 141, 142, 143, 1164], "clip": [55, 56, 76, 77, 128, 132, 135, 138, 141, 143, 1164], "x_min": [55, 56, 76, 77, 138, 143], "x_max": [55, 56, 76, 77, 138, 143], "roll": [55, 56, 120, 132], "minimum": [55, 56, 76, 77, 138, 143, 1164], "concat": [55, 56, 76, 77, 126, 1164], "xs": [55, 56, 90, 91, 132], "constant_pad": [55, 56], "pad_width": [55, 56], "expand_dim": [55, 56, 138, 141, 1164], "flip": [55, 56, 140, 141, 143, 1164], "permute_dim": [55, 56], "reshap": [55, 56, 76, 77, 125, 135, 138, 140, 143, 1164], "nativeshap": [55, 56, 59, 60], "sequenc": [55, 56, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 123, 125, 126, 133, 136, 154], "One": [55, 56, 59, 60, 76, 77, 125, 127, 133, 138, 140, 141], "length": [55, 56, 76, 77, 125, 127, 136, 141], "valueerror": [55, 56, 138], "reus": [55, 56, 125], "memori": [55, 56, 134, 135, 153, 155, 1164], "buffer": [55, 56, 155], "larger": [55, 56, 125, 138, 143], "flatten": [55, 56, 63, 64, 76, 77], "restor": [55, 56], "squeez": [55, 56, 1164], "stack": [55, 56, 76, 77, 138, 1164], "swapax": [55, 56], "axis0": [55, 56], "tile": [55, 56, 1164], "rep": [55, 56], "zero_pad": [55, 56, 1164], "layer_norm": [57, 58], "normalized_idx": [57, 58], "05": [57, 58, 125, 127], "scale": [57, 58, 126, 132], "new_std": [57, 58], "normal": [57, 58, 59, 60, 141], "small": [57, 58, 123, 127, 128, 138, 142, 155], "constant": [57, 58, 119, 128, 142, 143, 155, 1178], "denomin": [57, 58, 128, 155], "global": [57, 58, 76, 77, 128, 129, 133, 134, 138], "_min_bas": [57, 58], "learnabl": [57, 58, 143], "gamma": [57, 58], "beta": [57, 58], "after": [57, 58, 76, 77, 123, 125, 126, 132, 133, 137], "0976": [57, 58], "3452": [57, 58], "2740": [57, 58], "1047": [57, 58], "5886": [57, 58], "2732": [57, 58], "7696": [57, 58], "7024": [57, 58], "2518": [57, 58], "001": [57, 58, 141, 142], "576": [57, 58], "292": [57, 58], "581": [57, 58], "891": [57, 58], "01": [57, 58, 143], "579": [57, 58], "931": [57, 58], "drawn": [59, 60, 125], "highest": [59, 60], "sampl": [59, 60, 125], "low": [59, 60, 76, 77, 138], "uniform": [59, 60, 76, 77, 142, 1184], "half": [59, 60], "interv": [59, 60, 69, 70, 76, 77, 138, 143], "int8": [59, 60, 125, 133], "int16": [59, 60, 125, 133], "int64": [59, 60, 82, 83, 125, 133], "98": [59, 60, 86, 87], "46": [59, 60], "int32": [59, 60, 82, 83, 88, 89, 125, 133], "std": [59, 60, 67, 68, 123], "non": [59, 60, 69, 70, 123, 132, 133, 138], "parameter": [59, 60], "44": [59, 60], "72": [59, 60], "235": [59, 60], "27": [59, 60], "22": [59, 60, 132], "float16": [59, 60, 125, 126, 133], "26": [59, 60], "49": [59, 60], "02": [59, 60, 86, 87], "95": [59, 60], "807": [59, 60], "21": [59, 60, 86, 87], "random_uniform": [59, 60, 125, 134, 142, 1164], "boundari": [59, 60, 76, 77], "86": [59, 60], "89": [59, 60, 125], "06": [59, 60, 86, 87, 125], "53": [59, 60, 86, 87], "random": [60, 76, 77, 119, 134, 143, 154, 1164], "unique_al": [63, 64], "unique_count": [63, 64], "count": [63, 64, 69, 70, 123, 141], "field": [63, 64, 154], "uc": [63, 64], "unique_invers": [63, 64], "unique_valu": [63, 64], "argsort": [65, 66], "descend": [65, 66], "sort": [66, 76, 77, 119], "einsum": [67, 68], "equat": [67, 68], "min": [67, 68, 76, 77], "prod": [67, 68, 76, 77, 123, 133], "var": [67, 68, 116, 117, 123, 138], "statist": [68, 116, 117, 119, 125, 133], "logic": [69, 70, 125, 130, 131, 133, 134, 140, 1164], "AND": [69, 70], "reduct": [69, 70, 76, 77, 125, 133, 140, 1164], "By": [69, 70, 123, 126, 128, 132, 135, 142, 143], "rank": [69, 70], "backward": [69, 70, 155], "invalid": [69, 70, 126, 133, 136], "singleton": [69, 70], "accordingli": [69, 70, 126, 136], "dimension": [69, 70, 76, 77], "util": [70, 119, 134], "add_ivy_array_instance_method": 71, "cl": [71, 72, 116, 117], "to_ignor": [71, 72, 116, 117], "loop": [71, 72, 116, 117, 129, 136, 155], "_wrap_funct": [71, 72, 116, 117, 128, 130], "toi": [71, 72, 116, 117], "arrayexampl": [71, 72], "hasattr": [71, 72, 116, 117, 121, 140], "containerwithactiv": 74, "dict_in": [74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "queue": [74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 141], "queue_load_s": [74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "container_combine_method": [74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "list_join": [74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "queue_timeout": [74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "print_limit": [74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "key_length_limit": [74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "print_ind": [74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "print_line_spac": [74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "ivyh": [74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "default_key_color": [74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "keyword_color_dict": [74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "rebuild_child_contain": [74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "types_to_iteratively_nest": [74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "alphabetical_kei": [74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "containerbas": [74, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 132], "key_chain": [74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91], "to_appli": [74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91], "prune_unappli": [74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91], "map_sequ": [74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91], "formul": [74, 75], "chain": [74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 131, 132, 142, 143, 155], "prune": [74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91], "map": [74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 120, 125, 128, 132, 141, 154, 155], "unit": [74, 75, 124, 125, 155], "slope": [74, 75], "leaki": [74, 75], "rectifi": [74, 75], "linear": [74, 75, 122, 138, 141, 142, 143, 1164], "static_gelu": [74, 75], "static_leaky_relu": [74, 75], "static_relu": [74, 75], "static_sigmoid": [74, 75], "static_softmax": [74, 75], "static_softplu": [74, 75], "static_tanh": [74, 75, 86, 87], "96": [74, 75, 86, 87], "995": [74, 75, 86, 87], "9999": [74, 75, 86, 87], "object": [76, 77, 125, 140, 143], "__getitem__": [76, 77, 132], "queri": [76, 77, 132, 133, 140], "slice": [76, 77], "represent": [76, 77, 154], "dictionari": [76, 77, 141, 155], "multiprocess": [76, 77, 141, 155], "asynchron": [76, 77], "arriv": [76, 77], "timeout": [76, 77], "whitespac": [76, 77], "indent": [76, 77, 141], "extra": [76, 77, 123, 125, 126, 127, 130, 131, 138], "newlin": [76, 77, 122], "handl": [76, 77, 118, 120, 125, 126, 127, 128, 130, 132, 133, 134, 135, 142], "color": [76, 77], "termcolor": [76, 77], "rebuild": [76, 77], "constructor": [76, 77, 133, 134, 140], "param": [76, 77, 88, 89, 138, 143], "alphabet": [76, 77], "preserv": [76, 77, 125, 143, 155], "__setitem__": [76, 77, 131, 132, 140], "val": [76, 77, 135, 140], "all_fals": [76, 77], "assert_is_bool": [76, 77], "entri": [76, 77], "assert": [76, 77, 121, 125, 136, 140, 141], "all_key_chain": [76, 77], "include_empti": [76, 77], "all_tru": [76, 77, 132, 141], "arrays_as_list": [76, 77], "intermedi": [76, 77], "as_arrai": [76, 77], "as_bool": [76, 77], "as_random_uniform": [76, 77], "as_vari": [76, 77, 125, 127], "as_zero": [76, 77], "assert_contains_sub_contain": [76, 77], "sub_cont": [76, 77], "diff": [76, 77, 132, 141], "screen": [76, 77, 141], "assert_contains_sub_structur": [76, 77], "check_shap": [76, 77], "assert_ident": [76, 77], "check_typ": [76, 77], "same_arrai": [76, 77, 141], "arrays_equ": [76, 77], "assert_identical_structur": [76, 77], "at_key_chain": [76, 77], "ignore_key_error": [76, 77], "ignore_non": [76, 77], "at_kei": [76, 77], "ignor": [76, 77, 123, 125, 155], "substr": [76, 77], "clip_min": [76, 77], "clip_max": [76, 77], "config": [76, 77, 141], "duplic": [76, 77, 122, 129, 130, 136, 140, 142], "container_rightmost": [76, 77], "common_key_chain": [76, 77, 132], "contains_sub_contain": [76, 77], "match": [76, 77, 132], "contains_sub_structur": [76, 77], "create_if_abs": [76, 77], "inplac": [76, 77, 90, 91, 118, 120, 123, 130, 131, 140, 142], "cutoff_at_depth": [76, 77], "depth_cutoff": [76, 77], "cutoff_at_height": [76, 77], "height_cutoff": [76, 77], "deep_copi": [76, 77, 141], "intern": [76, 77, 122, 125, 131, 132, 134, 135], "belong": [76, 77, 142], "dev_clon": [76, 77], "dev_dist": [76, 77], "dev_str": [76, 77], "diff_kei": [76, 77], "detect_key_diff": [76, 77], "detect_value_diff": [76, 77], "detect_shape_diff": [76, 77], "treat": [76, 77, 125, 139, 143], "container0": [76, 77], "einops_rearrang": [76, 77], "axes_length": [76, 77], "rearrang": [76, 77], "einops_reduc": [76, 77], "callabl": [76, 77, 121, 125, 132, 138], "einops_repeat": [76, 77], "find_sub_contain": [76, 77], "sub_cont_to_find": [76, 77], "exsit": [76, 77], "find_sub_structur": [76, 77], "sub_struc_to_find": [76, 77], "flatten_key_chain": [76, 77, 141], "__": [76, 77, 123, 141], "above_height": [76, 77, 141], "below_depth": [76, 77, 141], "format_key_chain": [76, 77], "format_fn": [76, 77], "string": [76, 77, 129, 133, 134, 136, 138, 141], "from_disk_as_hdf5": [76, 77, 141], "h5_obj_or_filepath": [76, 77], "slice_obj": [76, 77], "load": [76, 77, 155], "disk": [76, 77, 141], "h5py": [76, 77], "hdf5": [76, 77, 141], "h5": [76, 77], "from_disk_as_json": [76, 77, 141], "json_filepath": [76, 77], "json": [76, 77, 141], "from_disk_as_pickl": [76, 77, 141], "pickle_filepath": [76, 77], "pickl": [76, 77, 132, 141], "from_flat_list": [76, 77], "flat_list": [76, 77], "hierarchi": [76, 77, 141], "flat": [76, 77], "popul": [76, 77, 125, 133, 134, 138], "from_numpi": [76, 77, 141], "h5_file_s": [76, 77], "batch": [76, 77, 128, 132, 141], "handle_inplac": [76, 77], "prime": [76, 77], "overwritten": [76, 77, 129, 131], "has_kei": [76, 77], "query_kei": [76, 77], "somewher": [76, 77], "has_key_chain": [76, 77], "has_nan": [76, 77], "include_inf": [76, 77], "leafwis": [76, 77], "well": [76, 77, 125, 126, 135, 142, 143, 154], "inf": [76, 77, 125], "identical_array_shap": [76, 77], "identical_config": [76, 77], "identical_structur": [76, 77], "if_exist": [76, 77], "inplace_upd": [76, 77, 135], "key_chains_contain": [76, 77], "sub_str": [76, 77], "join": [76, 77, 1164], "list_stack": [76, 77, 141], "dim": [76, 77, 126, 127, 133], "func": [76, 77, 90, 91, 132], "map_cont": [76, 77], "include_self": [76, 77], "possibi": [76, 77], "max_depth": [76, 77], "multi_map": [76, 77, 132], "map_nest": [76, 77], "leftmost": [76, 77], "multi_map_in_static_method": [76, 77, 132], "fn_name": [76, 77, 127], "num_arrai": [76, 77, 125], "overwrite_at_key_chain": [76, 77], "target_dict": [76, 77], "return_dict": [76, 77], "prune_empti": [76, 77], "keep_non": [76, 77], "empti": [76, 77, 131, 133, 134], "prune_key_chain": [76, 77], "key1": [76, 77, 142], "key2": [76, 77], "key3": [76, 77], "prune_key_from_key_chain": [76, 77], "prune_kei": [76, 77], "prune_keys_from_key_chain": [76, 77], "remove_key_length_limit": [76, 77], "remove_print_limit": [76, 77], "reshape_lik": [76, 77], "leading_shap": [76, 77], "return_cont": [76, 77], "restructur": [76, 77], "keep_orig": [76, 77], "transpos": [76, 77, 140, 143, 1164], "restructure_key_chain": [76, 77], "keychain_map": [76, 77], "set_at_key_chain": [76, 77], "set_at_kei": [76, 77], "set_framework": [76, 77, 138, 140, 141, 143], "set_ivy_backend": [76, 77], "ivy_backend": [76, 77], "attribut": [76, 77, 121, 122, 126, 132, 133, 139, 140, 141, 142], "show_sub_contain": [76, 77], "sub_cont_or_keychain": [76, 77], "shuffl": [76, 77, 1164], "seed_valu": [76, 77], "seed": [76, 77, 1164], "shuffle_h5_fil": [76, 77], "dataset": [76, 77, 141, 153, 1164], "size_ordered_arrai": [76, 77], "keychain": [76, 77], "smallest": [76, 77], "largest": [76, 77, 154], "slice_kei": [76, 77], "key_slic": [76, 77], "all_depth": [76, 77], "slice_via_kei": [76, 77], "sort_by_kei": [76, 77], "num_or_size_split": [76, 77, 138], "with_remaind": [76, 77], "constitu": [76, 77, 143], "evenli": [76, 77], "stop_gradi": [76, 77, 90, 91, 142, 1164], "preserve_typ": [76, 77], "stop": [76, 77, 80, 81, 138, 155], "structural_diff": [76, 77], "target": [76, 77, 118, 137, 141, 142, 143, 1164], "to_dict": [76, 77], "to_disk_as_hdf5": [76, 77, 141], "starting_index": [76, 77], "max_batch_s": [76, 77], "later": [76, 77, 125], "to_disk_as_json": [76, 77, 141], "to_disk_as_pickl": [76, 77, 141], "to_flat_list": [76, 77], "to_iter": [76, 77, 132], "leaf_keys_onli": [76, 77], "to_iterator_kei": [76, 77], "to_iterator_valu": [76, 77], "to_json": [76, 77], "to_list": [76, 77, 1164], "update_backend": [76, 77], "to_raw": [76, 77], "raw": [76, 77, 122], "trim_kei": [76, 77], "max_length": [76, 77], "try_kc": [76, 77], "tri": [76, 77], "concatten": [76, 77], "unstack": [76, 77, 132, 138, 141, 1164], "dim_siz": [76, 77], "update_config": [76, 77], "global_norm": [76, 77], "with_default_key_color": [76, 77], "with_entries_as_list": [76, 77], "with_ivy_backend": [76, 77], "with_key_length_limit": [76, 77, 141], "with_print_ind": [76, 77, 141], "with_print_limit": [76, 77, 141], "with_print_line_spac": [76, 77], "containerwithcr": 80, "2324": [80, 81], "234": [80, 81], "123": [80, 81, 125], "static_arang": [80, 81], "static_asarrai": [80, 81], "static_empty_lik": [80, 81], "static_ey": [80, 81], "n_row": [80, 81], "n_col": [80, 81], "static_from_dlpack": [80, 81], "static_full_lik": [80, 81], "static_linspac": [80, 81], "num": [80, 81, 138], "endpoint": [80, 81], "static_logspac": [80, 81], "static_meshgrid": [80, 81], "static_native_arrai": [80, 81], "static_on": [80, 81], "static_ones_lik": [80, 81], "static_tril": [80, 81], "static_triu": [80, 81], "static_zero": [80, 81], "static_zeros_lik": [80, 81], "containerwithdatatyp": 82, "broadcats": [82, 83], "static_astyp": [82, 83], "static_broadcast_arrai": [82, 83], "And": [82, 83], "static_broadcast_to": [82, 83], "static_can_cast": [82, 83], "from_": [82, 83], "static_default_float_dtyp": [82, 83], "float_dtyp": [82, 83], "static_dtyp": [82, 83], "static_finfo": [82, 83], "static_function_supported_dtyp": [82, 83], "fn": [82, 83, 121, 138, 140], "static_function_unsupported_dtyp": [82, 83], "static_iinfo": [82, 83], "static_is_bool_dtyp": [82, 83], "dtype_in": [82, 83], "static_is_float_dtyp": [82, 83], "static_is_int_dtyp": [82, 83], "static_is_uint_dtyp": [82, 83], "static_result_typ": [82, 83], "containerwithdevic": 84, "static_dev": [84, 85], "static_to_devic": [84, 85], "containerwithelementwis": [86, 132], "61": [86, 87], "41": [86, 87, 88, 89, 140], "915": [86, 87], "29": [86, 87], "983": [86, 87], "75": [86, 87, 94, 95], "35": [86, 87], "978": [86, 87], "696": [86, 87], "993": [86, 87], "203": [86, 87], "34": [86, 87], "52": [86, 87], "333": [86, 87], "thefunct": [86, 87], "649": [86, 87], "220": [86, 87], "959": [86, 87], "865": [86, 87], "metho": [86, 87], "300": [86, 87, 125], "527": [86, 87], "301": [86, 87], "757": [86, 87], "279": [86, 87], "835": [86, 87], "347": [86, 87], "721": [86, 87], "static_ab": [86, 87], "static_aco": [86, 87], "static_acosh": [86, 87], "static_add": [86, 87, 122, 123, 132], "static_asin": [86, 87], "static_asinh": [86, 87], "97": [86, 87], "static_atan": [86, 87], "static_atan2": [86, 87], "static_atanh": [86, 87], "static_bitwise_and": [86, 87], "static_bitwise_invert": [86, 87], "static_bitwise_left_shift": [86, 87], "static_bitwise_or": [86, 87], "static_bitwise_right_shift": [86, 87], "static_bitwise_xor": [86, 87], "static_ceil": [86, 87], "static_co": [86, 87], "static_cosh": [86, 87], "static_divid": [86, 87, 132], "static_equ": [86, 87], "static_erf": [86, 87], "static_exp": [86, 87], "static_expm1": [86, 87], "areal": [86, 87], "static_floor": [86, 87], "static_floor_divid": [86, 87], "static_great": [86, 87], "static_greater_equ": [86, 87], "static_isfinit": [86, 87], "x_i": [86, 87, 122], "static_isinf": [86, 87], "static_isnan": [86, 87], "static_less": [86, 87], "static_less_equ": [86, 87], "static_log": [86, 87], "static_log10": [86, 87], "static_log1p": [86, 87], "static_log2": [86, 87], "static_logaddexp": [86, 87], "static_logical_and": [86, 87], "static_logical_not": [86, 87], "static_logical_or": [86, 87], "static_logical_xor": [86, 87], "static_multipli": [86, 87, 132], "static_neg": [86, 87], "static_not_equ": [86, 87], "static_posit": [86, 87], "static_pow": [86, 87], "static_remaind": [86, 87], "static_round": [86, 87], "thevfunct": [86, 87], "static_sign": [86, 87], "static_sin": [86, 87], "static_sinh": [86, 87], "static_sqrt": [86, 87], "static_squar": [86, 87], "static_subtract": [86, 87, 132], "static_tan": [86, 87, 123, 132], "143": [86, 87, 123], "38": [86, 87, 123], "static_trunc": [86, 87], "containerwithgener": 88, "static_all_equ": [88, 89], "667": [88, 89], "833": [88, 89], "static_clip_vector_norm": [88, 89], "849": [88, 89], "static_gather_nd": [88, 89], "static_to_numpi": [88, 89], "containerwithgradi": 90, "adam_upd": [90, 91, 142], "lr": [90, 91, 141, 142], "mw_tm1": [90, 91], "vw_tm1": [90, 91], "gradient_descent_upd": [90, 91, 1164], "lamb_upd": [90, 91], "max_trust_ratio": [90, 91], "decay_lambda": [90, 91], "lars_upd": [90, 91], "optimizer_upd": [90, 91], "effective_grad": [90, 91], "static_adam_step": [90, 91], "87": [90, 91], "976": [90, 91], "static_adam_upd": [90, 91], "static_execute_with_gradi": [90, 91], "retain_grad": [90, 91, 132], "static_gradient_descent_upd": [90, 91], "static_is_vari": [90, 91], "static_lamb_upd": [90, 91], "static_lars_upd": [90, 91], "static_optimizer_upd": [90, 91], "static_vari": [90, 91], "containerwithimag": 92, "containerwithlay": 94, "inp": [94, 95], "static_conv1d": [94, 95], "static_depthwise_conv2d": [94, 95], "add_ivy_container_instance_method": 116, "containerexampl": [116, 117], "who": [118, 137, 155], "mainli": [118, 139, 141], "under": [118, 122, 123, 124, 125, 126, 128, 132, 137, 138, 141, 143, 155], "hood": [118, 123, 125, 128, 132, 137, 138, 141, 143], "weed": [118, 137], "behind": [118, 125, 137, 139], "tour": 118, "primari": [118, 125, 129, 135, 155], "composit": [118, 125, 127, 129, 131, 132, 135, 138, 142, 143, 155], "nestabl": [118, 122, 123, 125, 135], "dynam": [118, 133, 134, 135, 138], "runtim": [118, 125], "helper": [118, 127, 141], "borrow": 118, "frontend": [118, 139], "taken": [119, 136, 143], "compil": [119, 132, 137, 139, 155, 1164], "meta": [119, 131], "overlap": 119, "judgement": 119, "some_namespac": 119, "some_backend": 119, "another_backend": 119, "break": [119, 120, 136, 140, 155, 1164], "anyth": [119, 125, 1164], "refactor": 119, "ongo": 119, "file_nam": [119, 125], "my_func": [119, 123], "my": 119, "op": [119, 138, 155], "cooler": 119, "current_backend": [119, 128], "produc": [119, 125], "something_cool": 119, "category_nam": [120, 122, 128, 133, 134], "backend_nam": [120, 122, 128, 129, 130, 133, 134], "adress": 120, "conveni": [120, 127, 133, 134, 139, 141, 142], "revisit": [120, 143], "dedic": [120, 140, 142], "four": [120, 123, 128, 133, 141], "to_native_arrays_and_back": [120, 130], "handle_out_argu": [120, 130, 133, 134, 135], "np": [120, 121, 125, 127, 131, 133, 134, 135, 140, 141, 143, 1164], "tf": [120, 121, 126, 131, 133, 134, 135, 138, 143, 155, 1164], "outputs_to_ivy_arrai": [120, 131, 133, 134], "infer_dtyp": [120, 133, 134], "infer_devic": [120, 133, 134], "jnp": [120, 121, 133, 134, 135, 143, 1164], "xla_extens": [120, 121, 133, 134, 140], "jaxarrai": [120, 121, 133, 134, 135], "wherea": [120, 123, 125, 128, 131, 133, 134, 143], "__sub__": [120, 123, 131, 132, 140], "__mul__": [120, 123, 131, 132, 140], "__div__": 120, "permit": [120, 125, 131], "dicat": 120, "addition": [120, 132, 135], "omit": [120, 135], "wrapper": [120, 130, 131, 132, 133, 135, 140], "contrast": [120, 122], "futher": 120, "absenc": [120, 132], "pep": 120, "484": 120, "annot": [120, 136], "dictat": [120, 123, 131, 135], "brittl": 120, "intend": 120, "subset": [120, 122, 125, 138], "freeli": 120, "extend": [120, 122, 129, 155], "consum": [120, 125, 127, 132], "inde": [120, 155], "flexibl": 120, "technic": [120, 132, 135, 155], "original_typ": 120, "cumbersom": 120, "readabl": [120, 121, 131, 132, 140, 141], "clean": [121, 136, 138, 139, 141], "_assert_fill_value_and_dtype_are_compat": 121, "isinst": [121, 142, 143], "_to_devic": 121, "experiment": 121, "_is_valid_dtypes_attribut": 121, "supported_dtyp": 121, "unsupported_dtyp": [121, 126, 133], "fn_supported_dtyp": 121, "fn_unsupported_dtyp": 121, "backend_str": 121, "current_backend_str": 121, "function_supported_dtyp": 121, "function_unsupported_dtyp": 121, "invalid_dtyp": [121, 133], "account": 122, "instanti": 122, "firstli": [122, 123, 128, 131, 133, 135, 141], "templat": [122, 125, 1164], "spec": [122, 123], "api_specif": 122, "array_api": 122, "preview": 122, "render": 122, "incorrectli": [122, 136], "onlin": [122, 1164], "domain": 122, "codomain": 122, "assum": [122, 125, 127, 129, 133, 140, 141, 155], "operand": [122, 126], "ref": 122, "But": [122, 132, 143], "needless": 122, "info": [122, 1164], "renam": 122, "conform": 122, "org": 122, "elementwise_funct": 122, "descript": [122, 125, 132], "simplic": [122, 142, 154], "judgment": 122, "beyond": 122, "func_nam": [122, 123, 128], "pure": [122, 140, 143, 155], "themselv": [122, 128, 132, 133, 134, 142], "operator_nam": 122, "succinct": 122, "contstructor": 122, "though": [122, 128, 133, 141, 155], "forward": [122, 125, 143, 154, 155], "_forward": [122, 138, 141, 142, 1164], "former": 122, "explicitli": [122, 128, 129, 131, 132, 135, 138, 155], "latter": [122, 129], "implicit": [122, 125, 132, 138], "docst": 122, "eight": 123, "static_": 123, "op_nam": 123, "__r": 123, "__truediv__": [123, 131, 132], "recap": [123, 132, 142], "independ": [123, 124, 130, 132, 138, 143], "combinatorili": 123, "variat": [123, 125], "grid": [123, 125, 154], "vari": [123, 125, 132, 140], "unus": [123, 135, 136], "excess": [123, 129, 140], "okai": [123, 138], "showcas": [123, 154], "demonstr": [123, 140], "replic": [123, 133], "meant": 123, "imaginari": 123, "some_flag": 123, "another_flag": 123, "jointli": 123, "three": [123, 125, 126, 132, 137, 1164], "x0": 123, "procedur": 123, "sens": [123, 132, 140], "5574077": 123, "1850398": 123, "5463025": 123, "8422884": 123, "91601413": 123, "9647598": 123, "3738229": 123, "1597457": 123, "0963247": 123, "9955841": 123, "3278579": 123, "multi": [123, 132, 137, 155, 1164, 1170], "seper": 123, "pars": [123, 155], "satisfi": 123, "far": [123, 134, 139, 140], "asid": [123, 154], "irrelev": [123, 133], "increasingli": 123, "complex": [123, 126, 141, 142, 143, 155], "exclud": [123, 138], "14254655": 123, "1578213": 123, "380515": 123, "trivial": 123, "static_rol": [123, 132], "exlud": 123, "thoroughli": 124, "ci": [124, 125, 155], "On": [125, 126, 136, 139, 143], "fixtur": 125, "hit": [125, 138], "action": 125, "eleg": 125, "intellig": 125, "rang": [125, 141, 142, 143, 1164], "cach": [125, 128], "unexplor": 125, "known": 125, "repeatedli": [125, 132], "upload": 125, "artifact": 125, "parametr": 125, "statement": [125, 136, 155], "plai": [125, 126, 143], "varieti": [125, 133, 134], "valid_int_dtyp": 125, "uint8": [125, 133], "uint16": [125, 133], "uint32": [125, 133], "uint64": [125, 133], "custom_strategi": 125, "st": [125, 127], "sampled_from": [125, 127], "min_siz": 125, "max_siz": 125, "referenc": 125, "print_hypothesis_exampl": 125, "searchstrategi": 125, "randomis": 125, "simplist": 125, "intricaci": 125, "briefli": [125, 128, 141], "bound": [125, 138], "mechan": [125, 153, 155, 1164], "power": [125, 140, 141, 142], "math": [125, 135, 143, 1164], "inclus": [125, 135], "width": 125, "losslessli": 125, "mostli": 125, "one_of": 125, "datum": 125, "pipe": 125, "overload": 125, "shorthand": 125, "draw": [125, 127], "input_dtyp": [125, 127], "henc": [125, 132], "reject": 125, "flatmap": 125, "suppos": 125, "interact": [125, 1164], "dataobject": 125, "test_argsort": 125, "decor": [125, 127, 128, 130, 132, 133, 134, 135], "initialis": 125, "snippet": 125, "dtype_and_x": [125, 127], "dtype_and_valu": [125, 127], "ivy_np": [125, 127], "valid_float_dtyp": [125, 127], "list_of_length": [125, 127], "num_positional_arg": [125, 127], "instance_method": 125, "test_leaky_relu": 125, "exhaust": 125, "num_posit": 125, "indirectli": 125, "advis": 125, "seri": [125, 126], "9433925": 125, "401298464324817e": 125, "574352379": 125, "99999": 125, "2250738585072014e": 125, "308": 125, "103515625e": 125, "unpack": [125, 136], "seamlessli": 125, "edg": [125, 138, 143, 1164], "encount": 125, "criterion": 125, "straight": [125, 140, 1164], "array_valu": 125, "valid_ax": 125, "hand": [125, 128, 136, 155], "craft": 125, "polici": [125, 154], "hoc": 125, "overview": [125, 137, 154], "array_dtyp": 125, "array_bool": [125, 127], "na": 125, "test_concat": 125, "test_devic": 125, "array_shap": 125, "test_manipul": 125, "common_shap": 125, "test_lay": 125, "size_bound": 125, "precis": 125, "283405296074752": 125, "564049465049088": 125, "0417876997507982e": 125, "min_valu": 125, "max_valu": 125, "allow_inf": 125, "min_num_dim": [125, 127], "wherev": 125, "reshape_shap": 125, "stand": 125, "alon": 125, "fashion": 125, "some_sequ": 125, "allow_subnorm": 125, "exclude_min": 125, "960464477539063e": 125, "08": 125, "coverag": 125, "allow_nan": 125, "Such": 125, "kind": [125, 155], "get_shap": [125, 127], "allow_non": [125, 127], "max_num_dim": [125, 127], "min_dim_s": [125, 127], "none_or_list_of_float": 125, "200": 125, "199": 125, "99999999999997": 125, "000000000000002": 125, "125": 125, "43759670925832": 125, "get_mean_std": 125, "probabilist": 125, "811428143185347e": 125, "none_or_list_float": 125, "get_bound": 125, "arrays_valu": 125, "put": [125, 155], "73": 125, "36418": 125, "213": 125, "21716926": 125, "get_prob": 125, "unnorm": 125, "099609375": 125, "get_axi": 125, "number_positional_argu": 125, "mind": [125, 131, 132], "bodi": 125, "test_valu": [125, 127], "enough": [125, 140, 141, 142], "justifi": 125, "unduli": 125, "labori": 125, "straightforward": [125, 141], "scenario": 125, "autom": [125, 1164], "report": 125, "test_demo": 125, "falsifi": 125, "failing_test": 125, "traceback": 125, "assertionerror": 125, "shrink": 125, "prescrib": 125, "behavior": [125, 132, 138, 155], "identifi": 125, "closest": 125, "checkout": 125, "scratch": 125, "databas": 125, "therebi": 125, "event": [125, 1164], "test_gelu": 125, "test_fil": 125, "brief": 125, "phase": [125, 155], "notabl": 125, "displai": [125, 132, 141], "verbos": [125, 138, 1164], "newer": 125, "max_exampl": 125, "impact": [125, 142], "deadlin": 125, "weird": 125, "truth": 125, "opt": [125, 129, 135, 140], "defer": [125, 128, 131, 132, 133, 134, 135], "suffic": [125, 130], "catch": 125, "systemat": 125, "safeguard": 125, "inabl": 125, "num_gpu": [125, 134], "lax": [126, 127, 155], "bfloat16": [126, 133], "thu": 126, "categoris": 126, "notic": [126, 127, 140], "mathematical_funct": 126, "arithmetic_oper": 126, "same_kind": [126, 127], "subok": [126, 127], "as_ivy_dtyp": 126, "is_arrai": 126, "mathemat": 126, "slightli": [126, 132, 138, 142], "recov": 126, "obtain": 126, "trigonometric_funct": 126, "pointwise_op": 126, "concaten": [126, 138, 141, 1164], "manipulation_routin": 126, "joining_arrai": 126, "indexing_slicing_joining_mutating_op": 126, "cat": [126, 138, 143], "grasp": 126, "youtub": 126, "jump": 127, "knowledg": 127, "strategi": 127, "test_frontend_funct": 127, "heavi": 127, "lift": 127, "np_frontend_help": 127, "behav": [127, 140], "test_frontend": 127, "test_jax": 127, "test_jax_lax_oper": 127, "available_dtyp": 127, "ivy_jax": 127, "test_jax_lax_tan": 127, "as_variable_flag": 127, "with_out": 127, "native_array_flag": 127, "test_numpi": 127, "test_mathematical_funct": 127, "test_np_trigonometric_funct": 127, "test_numpy_tan": 127, "handle_where_and_array_bool": 127, "test_tensorflow": 127, "test_tf_funct": 127, "ivy_tf": 127, "test_tensorflow_tan": 127, "test_torch": 127, "test_pointwise_op": 127, "intersect": [127, 154], "ivy_torch": 127, "test_torch_tan": 127, "_dtype": [127, 140], "valid_numeric_dtyp": 127, "_fill_valu": 127, "max_dim_s": 127, "test_jax_lax_ful": 127, "uint": 127, "creation_routin": 127, "test_from_shape_or_valu": 127, "test_numpy_ful": 127, "test_tensorflow_ful": 127, "discrep": 127, "toler": 127, "test_creation_op": 127, "_requires_grad": 127, "requires_grad": 127, "test_torch_ful": 127, "accommod": 127, "unsign": 127, "categor": [128, 134], "mutual": [128, 132], "constitut": [128, 138], "venn": 128, "diagram": 128, "light": [128, 155], "log_pr": [128, 132, 135], "array_arg": 128, "typic": 128, "whatsoev": [128, 132], "commonli": 128, "outsid": [128, 134, 136, 138, 140, 143], "cache_fn": 128, "stable_divid": 128, "deal": [128, 155], "concurr": [128, 132], "modif": 128, "handle_nest": [128, 132], "group": [128, 132], "set_default_dtyp": [128, 133], "default_dtyp": [128, 133], "get_all_arrays_on_dev": 128, "get_backend": [128, 129], "nested_map": 128, "index_nest": 128, "implicit_backend": 129, "unless": [129, 134, 135, 155], "__dict__": [129, 138, 140], "ivy_original_dict": [129, 138], "unmodifi": [129, 133], "unset": [129, 138, 140], "fallback": 129, "freedom": 129, "achiev": [130, 136, 141, 143], "topic": [130, 140], "_data": [131, 140], "organiz": [131, 132], "inherit": [131, 132, 140, 155], "bear": [131, 132, 133], "necessarili": [131, 132], "although": [131, 132], "underpin": [131, 132, 138], "programmat": [131, 132], "backup": [131, 132], "accident": [131, 132], "absent": [131, 132], "perk": [131, 132], "auto": [131, 132, 141], "throw": [131, 140], "imposs": 131, "inputs_to_native_arrai": 131, "coupl": [131, 132, 140, 142], "anywai": 131, "secondli": [131, 133], "easier": 131, "five": [132, 141], "decis": [132, 138, 140], "arbitrarili": [132, 141], "__repr__": 132, "control": [132, 133, 135, 140, 141, 154], "__getattr__": 132, "underli": 132, "__setattr__": 132, "__contains__": 132, "__getstate__": 132, "__setstate__": 132, "unpickl": 132, "expand": 132, "counterpart": 132, "irrespect": [132, 135, 140], "presenc": [132, 135], "implicitli": 132, "intuit": [132, 141, 142], "chronolog": 132, "had": [132, 135], "sequenti": [132, 142], "flow": [132, 154], "implic": 132, "eager": [132, 155], "children": 132, "shallowest": 132, "deepest": 132, "execute_with_gradi": [132, 141, 142, 143, 155, 1164], "multi_head_attent": [132, 135], "dy": 132, "dx": 132, "autograd": [132, 155], "grad": [132, 141, 142, 143, 1164], "redund": 132, "num_head": 132, "mask": 132, "to_q_fn": 132, "to_kv_fn": 132, "to_out_fn": [132, 135], "to_q_v": 132, "to_kv_v": 132, "to_out_v": 132, "measur": 132, "dot": 132, "all_dtyp": 133, "all_numeric_dtyp": 133, "all_int_dtyp": 133, "all_float_dtyp": 133, "fall": [133, 137, 1164], "thirdli": 133, "native_float32": 133, "importantli": [133, 140, 143, 154], "arguabl": [133, 134], "compound": 133, "overflow": 133, "arr": [133, 134], "default_int_dtyp": 133, "default_float_dtyp": 133, "settabl": [133, 134], "set_default_int_dtyp": 133, "set_default_float_dtyp": 133, "arang": [133, 1164], "mx": [133, 134, 135, 1164], "nd": [133, 134, 135, 138, 143, 1164], "deleg": 133, "shape_to_tupl": 133, "idx": [134, 140], "tpu": 134, "get_all_ivy_arrays_on_dev": 134, "aliv": 134, "total_mem_on_dev": 134, "dev_util": 134, "num_cpu_cor": 134, "default_devic": [134, 138], "dual": 134, "thrown": [134, 155], "rare": [134, 155], "set_default_devic": 134, "program": 135, "strictli": 135, "ration": 135, "speak": 135, "subtli": 135, "ensure_in_backend": 135, "x_nativ": 135, "val_n": 135, "is_ivy_arrai": [135, 140], "assign": [135, 136, 140], "elif": 135, "unspecifi": 135, "predominantli": [135, 154], "altern": [135, 141], "_wrap_fn": 135, "maxim": [135, 138], "inner": [135, 140], "third": [135, 155], "leverag": 135, "equival": [135, 141, 143], "input_arrai": 135, "flake8": 136, "undefin": 136, "yield": 136, "handler": [136, 137, 139, 143, 1164], "liter": 136, "carri": 136, "star": 136, "byte": 136, "notimpl": 136, "notimplementederror": 136, "unsuccess": 136, "exce": 136, "indices_wher": [136, 1164], "black": 136, "disobei": 136, "successfulli": 136, "comparison": 136, "sound": 137, "higher": [137, 138, 143, 155], "fledg": [138, 139], "syntact": [138, 143], "clip_by_valu": [138, 143], "clamp": [138, 143], "fit": 138, "logspac": 138, "construct": [138, 139, 142, 143], "power_seq": 138, "linspac": [138, 1164], "resid": [138, 142], "ml_framework": [138, 143], "current_framework": [138, 143], "furthermor": 138, "framework_handl": 138, "face": 138, "cprint": 138, "framework_stack": 138, "_determine_framework_from_arg": 138, "get_framework": 138, "neither": 138, "illustr": [138, 154], "un": 138, "lstm_updat": 138, "nn": [138, 143, 1164], "init_h": 138, "init_c": 138, "kernel": [138, 155], "recurrent_kernel": 138, "bia": [138, 142], "recurrent_bia": 138, "x_shape": 138, "batch_shap": [138, 140, 143], "timestep": 138, "input_channel": [138, 142], "x_flat": 138, "wi": 138, "wi_x": 138, "wii_x": 138, "wif_x": 138, "wig_x": 138, "wio_x": 138, "recurr": 138, "wh": 138, "lstm": 138, "ht": 138, "ct": 138, "hts_list": 138, "unrol": [138, 141], "wii_xt": 138, "wif_xt": 138, "wig_xt": 138, "wio_xt": 138, "zip": 138, "htm1": 138, "ctm1": 138, "wh_htm1": 138, "whi_htm1": 138, "whf_htm1": 138, "whg_htm1": 138, "who_htm1": 138, "ft": 138, "gt": 138, "ot": 138, "offici": 138, "reliabl": 138, "sacrific": 138, "hear": 138, "virtu": 138, "pure_ivi": 138, "reduce_mean": [138, 141, 142, 143, 1164], "reduce_sum": [138, 1164], "reduce_var": 138, "compile_graph": [138, 143], "pure_torch": 138, "backbon": [138, 141], "_layer": 138, "super": [138, 141, 142, 143], "random_unifrom": 138, "unclean": 138, "wx": 138, "temp": 138, "torchscript": 138, "example_input": 138, "static_argnum": 138, "static_argnam": 138, "jit": [138, 155], "primit": [139, 155], "hierarch": [139, 141, 142], "arraywithlinalg": 140, "arraywithlog": 140, "arraywithmath": 140, "arraywithmeta": 140, "arraywithreduct": 140, "is_native_arrai": 140, "_shape": 140, "_size": 140, "functool": 140, "mul": 140, "len": [140, 143], "_devic": 140, "_dev_str": 140, "as_ivy_dev": 140, "_pre_repr": 140, "_post_repr": 140, "answer": [140, 155], "typeerror": 140, "devicearrai": 140, "immut": 140, "claim": 140, "truli": 140, "_native_wrapp": 140, "attributeerror": 140, "scatter_nd": [140, 1164], "genuin": 140, "some_method": 140, "similarli": 140, "rewritten": 140, "__pow__": 140, "strang": 140, "enforc": 140, "appear": 140, "_wrap_method": 140, "func_wrapp": 140, "__name__": 140, "non_wrapped_method": 140, "_method_wrap": 140, "native_arg": 140, "native_kwarg": 140, "inner_fn": 140, "whist": 140, "unwrap": 140, "transit": 140, "needlessli": 140, "randn": 140, "_unwrap_method": 140, "method_wrap": 140, "compartment": 140, "public": 140, "newshap": 140, "new_shap": 140, "tidi": 140, "shorter": 140, "crystal": 140, "ton": 141, "ado": [141, 142], "incred": [141, 155], "hash": 141, "soup": 141, "walk": [141, 142], "dct": 141, "cnt": 141, "combo": [141, 1164, 1170], "hold": 141, "1000": 141, "uda": 141, "3333": 141, "6667": 141, "Or": 141, "178": 141, "new_weight": 141, "0600": 141, "3100": 141, "2400": 141, "6900": 141, "delimit": 141, "autocomplet": 141, "midwai": 141, "agent": 141, "total_spe": 141, "total_height": 141, "total_width": 141, "ag": 141, "tot": 141, "total_": 141, "total_h": 141, "dir": 141, "dropout": 141, "cnt0": 141, "cnt1": 141, "diff_0": 141, "diff_1": 141, "config0": 141, "config1": 141, "Not": [141, 142, 155], "decod": 141, "l0": 141, "l1": 141, "clearer": 141, "truncat": 141, "decoder__l0": 141, "decoder__l1": 141, "encoder__l0": 141, "encoder__l1": 141, "height": 141, "l0__b": 141, "l0__w": 141, "l1__b": 141, "l1__w": 141, "printabl": 141, "obviou": 141, "foresight": 141, "untidili": 141, "update_ag": 141, "normalize_img": 141, "img": 141, "img_max": 141, "reduce_max": [141, 1164], "img_min": 141, "reduce_min": [141, 1164], "img_rang": 141, "agent_posit": 141, "agent_veloc": 141, "agent_cam_front_rgb": 141, "agent_cam_front_depth": 141, "agent_cam_rear_rgb": 141, "agent_cam_rear_depth": 141, "agent_cam_lidar": 141, "cleaner": 141, "camera": 141, "front_rgb": 141, "front_depth": 141, "rear_rgb": 141, "rear_depth": 141, "lidar": 141, "rgb": 141, "rear": 141, "veloc": 141, "cam": 141, "cam_max": 141, "cam_min": 141, "cam_rang": 141, "Of": 141, "ideal": 141, "perman": 141, "afterward": 141, "thread": 141, "incorpor": 141, "pretti": 141, "dataload": [141, 153, 1164], "_cnt": 141, "img_": 141, "_dataset_s": 141, "_batch_siz": 141, "_count": [141, 142], "__next__": 141, "filenam": 141, "img_fnam": 141, "fname": 141, "loaded_img": 141, "cv2": 141, "imread": 141, "loader": [141, 155], "batch_slic": 141, "mymodel": [141, 1164], "linear0": [141, 142, 1164], "linear1": [141, 142, 1164], "x_in": [141, 142, 143, 1164], "loss_fn": [141, 142, 143, 1164], "0145": 141, "grad_fn": 141, "addbackward0": 141, "_create_vari": 142, "output_channel": 142, "with_bia": 142, "_input_channel": 142, "_output_channel": 142, "_w_shape": 142, "_b_shape": 142, "_with_bia": 142, "8979": 142, "3198": 142, "0196": 142, "3126": 142, "3717": 142, "9687": 142, "6958": 142, "5122": 142, "3902": 142, "8800": 142, "5613": 142, "1982": 142, "nightmar": 142, "overcom": 142, "fc": 142, "9563": 142, "v0": 142, "v1": 142, "6440": 142, "key0": 142, "1823": 142, "8075": 142, "linear3": 142, "v2": 142, "2346": 142, "counter": 142, "hidden": 142, "fed": 142, "1300": 142, "decoupl": 142, "scheme": 142, "weight_initi": 142, "glorotuniform": 142, "bias_initi": 142, "_w_init": 142, "_b_init": 142, "create_vari": 142, "var_shap": 142, "fan_out": 142, "fan_in": 142, "fan_mod": 142, "fan_sum": 142, "slight": 142, "misnom": 142, "saw": 142, "vanilla": 142, "descent": 142, "lar": 142, "lamb": 142, "compile_on_next_step": 142, "_beta1": 142, "_beta2": 142, "_epsilon": 142, "_mw": 142, "_vw": 142, "_first_pass": 142, "_should_compil": 142, "_step": 142, "new_v": 142, "_lr": 142, "_inplac": 142, "_stop_gradi": 142, "set_stat": 142, "pre": [143, 155], "captur": 143, "one_hot": [143, 1164], "sparse_funct": 143, "num_class": 143, "ey": 143, "cumprod": 143, "num_dim": 143, "new_axi": 143, "_linear": 143, "to_backend": 143, "jax_graph": 143, "to_ivy_modul": 143, "thinli": 143, "whilst": 143, "to_haiku_modul": 143, "hk": 143, "loss_fn_t": 143, "transform": [143, 154], "without_apply_rng": 143, "rng": 143, "prngkei": 143, "init": 143, "update_rul": 143, "tree_multimap": 143, "vision": [153, 1164], "robot": [153, 1164], "focus": 154, "perfect": 154, "3d": 154, "differenti": 154, "demo": [154, 1164], "orient": 154, "pose": 154, "euler": 154, "quaternion": 154, "rotat": 154, "ivy_mech": 154, "target_facing_rotation_matrix": 154, "polar_to_cartesian_coord": 154, "ordin": 154, "warp": 154, "optic": 154, "voxel": 154, "ivy_vis": 154, "coords_to_voxel_grid": 154, "render_pixel_coord": 154, "neural": [154, 1164], "radianc": 154, "nerf": 154, "trajectori": 154, "motion": 154, "plan": [154, 1164], "mobil": 154, "ivy_robot": 154, "sample_spline_path": 154, "rigidmobil": 154, "sample_bodi": 154, "drone": 154, "sample_link": 154, "openai": 154, "swimmer": 154, "cumul": 154, "reward": 154, "supervis": 154, "reinforc": 154, "door": [154, 155], "cartpol": 154, "mountain_car": 154, "pendulum": 154, "reacher": 154, "condit": 154, "learnt": 154, "ture": 154, "ntm": 154, "egospher": 154, "spatial": 154, "esm": 154, "ivy_memori": 154, "egocentr": 154, "room": 154, "inspir": 154, "doubt": 155, "grate": 155, "probe": 155, "undergo": 155, "remark": 155, "surpris": 155, "lock": 155, "contunu": 155, "minor": 155, "xla": 155, "gold": 155, "dex": 155, "ye": 155, "scan": 155, "tricki": 155, "predictor": 155, "tight": 155, "driver": 155, "schedul": 155, "dispatch": 155, "Will": 155, "ast": 155, "dynamic": 155, "cond": 155, "jacobian": 155, "checkpoint": 155, "autodiff": 155, "shine": 155, "merci": 155, "superset": 155, "cluster": 155, "compet": 155, "paradigm": 155, "parallelis": 155, "spmd": 155, "mixtur": 155, "expert": 155, "sophist": 155, "depart": 155, "routin": 155, "hundr": 155, "thousand": 155, "deepli": 155, "broadli": 155, "heavili": 155, "supplementari": 155, "Is": 155, "reusabl": 155, "fanci": 155, "fusion": 155, "lose": 155, "vmap": 155, "pmap": 155, "overhead": 155, "ineffici": 155, "eventu": 155, "supplement": 155, "backdoor": 155, "callback": 155, "record": 155, "metric": 155, "somewhat": 155, "outsourc": 155, "defaultdtyp": 276, "noinspect": [276, 277, 278, 369, 780], "pyshadowingnam": [276, 277, 278, 369, 780], "defaultfloatdtyp": 277, "defaultintdtyp": 278, "defaultuintdtyp": 279, "defaultdevic": 369, "gradienttrack": 780, "grow": 1164, "ai": 1164, "got": 1164, "colab": 1164, "sharp": 1164, "weekli": 1164, "immedi": 1164, "favorit": 1164, "jax_concat": 1164, "tf_concat": 1164, "np_concat": 1164, "mx_concat": 1164, "torch_concat": 1164, "get_devic": 1164, "reduce_prod": 1164, "get_num_dim": 1164, "gradient_imag": 1164, "argmax": 1164, "argmin": 1164, "linalg": 1164, "bilinear_resampl": 1164, "stack_imag": 1164, "conv2d": 1164, "neural_net": 1164, "cumsum": 1164, "floormod": 1164, "backend_handl": 1164, "ecosystem": [1164, 1170], "popular": [1164, 1170], "acceler": 1164, "articl": 1164, "lenton2021ivi": 1164, "inter": 1164, "portabl": 1164, "lenton": 1164, "daniel": 1164, "pardo": 1164, "fabio": 1164, "falck": 1164, "fabian": 1164, "jame": 1164, "stephen": 1164, "clark": 1164, "ronald": 1164, "journal": 1164, "arxiv": 1164, "preprint": 1164, "2102": 1164, "02886": 1164, "2021": 1164, "kaimingnorm": 1181}, "objects": {"ivy.array": [[24, 0, 0, "-", "activations"], [26, 0, 0, "-", "array"], [29, 0, 0, "-", "conversions"], [35, 0, 0, "-", "creation"], [37, 0, 0, "-", "data_type"], [39, 0, 0, "-", "device"], [41, 0, 0, "-", "elementwise"], [43, 0, 0, "-", "general"], [45, 0, 0, "-", "gradients"], [47, 0, 0, "-", "image"], [49, 0, 0, "-", "layers"], [51, 0, 0, "-", "linear_algebra"], [53, 0, 0, "-", "losses"], [55, 0, 0, "-", "manipulation"], [57, 0, 0, "-", "norms"], [59, 0, 0, "-", "random"], [61, 0, 0, "-", "searching"], [63, 0, 0, "-", "set"], [65, 0, 0, "-", "sorting"], [67, 0, 0, "-", "statistical"], [69, 0, 0, "-", "utility"], [71, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[25, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[25, 2, 1, "", "gelu"], [25, 2, 1, "", "leaky_relu"], [25, 2, 1, "", "relu"], [25, 2, 1, "", "sigmoid"], [25, 2, 1, "", "softmax"], [25, 2, 1, "", "softplus"], [25, 2, 1, "", "tanh"]], "ivy.array.array": [[27, 1, 1, "", "Array"], [28, 1, 1, "", "Variable"]], "ivy.array.array.Array": [[27, 3, 1, "", "T"], [27, 2, 1, "", "__add__"], [27, 2, 1, "", "__init__"], [27, 2, 1, "", "__le__"], [27, 2, 1, "", "__radd__"], [27, 3, 1, "", "data"], [27, 3, 1, "", "device"], [27, 3, 1, "", "dtype"], [27, 3, 1, "", "is_variable"], [27, 3, 1, "", "mT"], [27, 3, 1, "", "ndim"], [27, 3, 1, "", "shape"], [27, 3, 1, "", "size"]], "ivy.array.array.Variable": [[28, 2, 1, "", "__init__"]], "ivy.array.conversions": [[30, 4, 1, "", "args_to_container"], [31, 4, 1, "", "args_to_ivy"], [32, 4, 1, "", "args_to_native"], [33, 4, 1, "", "to_ivy"], [34, 4, 1, "", "to_native"]], "ivy.array.creation": [[36, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[36, 2, 1, "", "asarray"], [36, 2, 1, "", "empty_like"], [36, 2, 1, "", "from_dlpack"], [36, 2, 1, "", "full_like"], [36, 2, 1, "", "meshgrid"], [36, 2, 1, "", "native_array"], [36, 2, 1, "", "ones_like"], [36, 2, 1, "", "tril"], [36, 2, 1, "", "triu"], [36, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[38, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[38, 2, 1, "", "astype"], [38, 2, 1, "", "broadcast_arrays"], [38, 2, 1, "", "broadcast_to"], [38, 2, 1, "", "can_cast"], [38, 2, 1, "", "dtype"], [38, 2, 1, "", "finfo"], [38, 2, 1, "", "iinfo"], [38, 2, 1, "", "is_bool_dtype"], [38, 2, 1, "", "is_float_dtype"], [38, 2, 1, "", "is_int_dtype"], [38, 2, 1, "", "is_uint_dtype"], [38, 2, 1, "", "result_type"]], "ivy.array.device": [[40, 1, 1, "", "ArrayWithDevice"]], "ivy.array.device.ArrayWithDevice": [[40, 2, 1, "", "dev"], [40, 2, 1, "", "to_device"]], "ivy.array.elementwise": [[42, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[42, 2, 1, "", "abs"], [42, 2, 1, "", "acos"], [42, 2, 1, "", "acosh"], [42, 2, 1, "", "add"], [42, 2, 1, "", "asin"], [42, 2, 1, "", "asinh"], [42, 2, 1, "", "atan"], [42, 2, 1, "", "atan2"], [42, 2, 1, "", "atanh"], [42, 2, 1, "", "bitwise_and"], [42, 2, 1, "", "bitwise_invert"], [42, 2, 1, "", "bitwise_left_shift"], [42, 2, 1, "", "bitwise_or"], [42, 2, 1, "", "bitwise_right_shift"], [42, 2, 1, "", "bitwise_xor"], [42, 2, 1, "", "ceil"], [42, 2, 1, "", "cos"], [42, 2, 1, "", "cosh"], [42, 2, 1, "", "divide"], [42, 2, 1, "", "equal"], [42, 2, 1, "", "erf"], [42, 2, 1, "", "exp"], [42, 2, 1, "", "expm1"], [42, 2, 1, "", "floor"], [42, 2, 1, "", "floor_divide"], [42, 2, 1, "", "greater"], [42, 2, 1, "", "greater_equal"], [42, 2, 1, "", "isfinite"], [42, 2, 1, "", "isinf"], [42, 2, 1, "", "isnan"], [42, 2, 1, "", "less"], [42, 2, 1, "", "less_equal"], [42, 2, 1, "", "log"], [42, 2, 1, "", "log10"], [42, 2, 1, "", "log1p"], [42, 2, 1, "", "log2"], [42, 2, 1, "", "logaddexp"], [42, 2, 1, "", "logical_and"], [42, 2, 1, "", "logical_not"], [42, 2, 1, "", "logical_or"], [42, 2, 1, "", "logical_xor"], [42, 2, 1, "", "multiply"], [42, 2, 1, "", "negative"], [42, 2, 1, "", "not_equal"], [42, 2, 1, "", "positive"], [42, 2, 1, "", "pow"], [42, 2, 1, "", "remainder"], [42, 2, 1, "", "round"], [42, 2, 1, "", "sign"], [42, 2, 1, "", "sin"], [42, 2, 1, "", "sinh"], [42, 2, 1, "", "sqrt"], [42, 2, 1, "", "square"], [42, 2, 1, "", "subtract"], [42, 2, 1, "", "tan"], [42, 2, 1, "", "tanh"], [42, 2, 1, "", "trunc"]], "ivy.array.general": [[44, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[44, 2, 1, "", "all_equal"], [44, 2, 1, "", "clip_vector_norm"], [44, 2, 1, "", "gather_nd"], [44, 2, 1, "", "to_numpy"]], "ivy.array.gradients": [[46, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[46, 2, 1, "", "adam_step"], [46, 2, 1, "", "is_variable"], [46, 2, 1, "", "variable"]], "ivy.array.image": [[48, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[50, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[50, 2, 1, "", "conv1d"], [50, 2, 1, "", "depthwise_conv2d"]], "ivy.array.linear_algebra": [[52, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[52, 2, 1, "", "cholesky"], [52, 2, 1, "", "cross"], [52, 2, 1, "", "det"], [52, 2, 1, "", "diagonal"], [52, 2, 1, "", "eigh"], [52, 2, 1, "", "eigvalsh"], [52, 2, 1, "", "inv"], [52, 2, 1, "", "matmul"], [52, 2, 1, "", "matrix_norm"], [52, 2, 1, "", "matrix_rank"], [52, 2, 1, "", "matrix_transpose"], [52, 2, 1, "", "outer"], [52, 2, 1, "", "pinv"], [52, 2, 1, "", "qr"], [52, 2, 1, "", "solve"], [52, 2, 1, "", "svd"], [52, 2, 1, "", "svdvals"], [52, 2, 1, "", "tensordot"], [52, 2, 1, "", "trace"], [52, 2, 1, "", "vecdot"], [52, 2, 1, "", "vector_norm"], [52, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[54, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[54, 2, 1, "", "binary_cross_entropy"], [54, 2, 1, "", "cross_entropy"], [54, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[56, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[56, 2, 1, "", "clip"], [56, 2, 1, "", "concat"], [56, 2, 1, "", "constant_pad"], [56, 2, 1, "", "expand_dims"], [56, 2, 1, "", "flip"], [56, 2, 1, "", "permute_dims"], [56, 2, 1, "", "repeat"], [56, 2, 1, "", "reshape"], [56, 2, 1, "", "roll"], [56, 2, 1, "", "squeeze"], [56, 2, 1, "", "stack"], [56, 2, 1, "", "swapaxes"], [56, 2, 1, "", "tile"], [56, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[58, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[58, 2, 1, "", "layer_norm"]], "ivy.array.random": [[60, 1, 1, "", "ArrayWithRandom"]], "ivy.array.random.ArrayWithRandom": [[60, 2, 1, "", "randint"], [60, 2, 1, "", "random_normal"], [60, 2, 1, "", "random_uniform"]], "ivy.array.searching": [[62, 1, 1, "", "ArrayWithSearching"]], "ivy.array.set": [[64, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[64, 2, 1, "", "unique_all"], [64, 2, 1, "", "unique_counts"], [64, 2, 1, "", "unique_inverse"], [64, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[66, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[66, 2, 1, "", "argsort"], [66, 2, 1, "", "sort"]], "ivy.array.statistical": [[68, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[68, 2, 1, "", "einsum"], [68, 2, 1, "", "max"], [68, 2, 1, "", "mean"], [68, 2, 1, "", "min"], [68, 2, 1, "", "prod"], [68, 2, 1, "", "std"], [68, 2, 1, "", "sum"], [68, 2, 1, "", "var"]], "ivy.array.utility": [[70, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[70, 2, 1, "", "all"], [70, 2, 1, "", "any"]], "ivy.array.wrapping": [[72, 4, 1, "", "add_ivy_array_instance_methods"]], "ivy.container": [[74, 0, 0, "-", "activations"], [76, 0, 0, "-", "base"], [80, 0, 0, "-", "creation"], [82, 0, 0, "-", "data_type"], [84, 0, 0, "-", "device"], [86, 0, 0, "-", "elementwise"], [88, 0, 0, "-", "general"], [90, 0, 0, "-", "gradients"], [92, 0, 0, "-", "image"], [94, 0, 0, "-", "layers"], [116, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[75, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[75, 2, 1, "", "gelu"], [75, 2, 1, "", "leaky_relu"], [75, 2, 1, "", "relu"], [75, 2, 1, "", "sigmoid"], [75, 2, 1, "", "softmax"], [75, 2, 1, "", "softplus"], [75, 2, 1, "", "static_gelu"], [75, 2, 1, "", "static_leaky_relu"], [75, 2, 1, "", "static_relu"], [75, 2, 1, "", "static_sigmoid"], [75, 2, 1, "", "static_softmax"], [75, 2, 1, "", "static_softplus"], [75, 2, 1, "", "static_tanh"], [75, 2, 1, "", "tanh"]], "ivy.container.base": [[77, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[77, 2, 1, "", "__getitem__"], [77, 2, 1, "", "__init__"], [77, 2, 1, "", "__setitem__"], [77, 2, 1, "", "all_false"], [77, 2, 1, "", "all_key_chains"], [77, 2, 1, "", "all_true"], [77, 2, 1, "", "arrays_as_lists"], [77, 2, 1, "", "as_arrays"], [77, 2, 1, "", "as_bools"], [77, 2, 1, "", "as_random_uniform"], [77, 2, 1, "", "as_variables"], [77, 2, 1, "", "as_zeros"], [77, 2, 1, "", "assert_contains_sub_container"], [77, 2, 1, "", "assert_contains_sub_structure"], [77, 2, 1, "", "assert_identical"], [77, 2, 1, "", "assert_identical_structure"], [77, 2, 1, "", "at_key_chain"], [77, 2, 1, "", "at_key_chains"], [77, 2, 1, "", "at_keys"], [77, 2, 1, "", "clip"], [77, 2, 1, "", "combine"], [77, 2, 1, "", "common_key_chains"], [77, 3, 1, "", "config"], [77, 2, 1, "", "contains_sub_container"], [77, 2, 1, "", "contains_sub_structure"], [77, 2, 1, "", "copy"], [77, 2, 1, "", "create_if_absent"], [77, 2, 1, "", "cutoff_at_depth"], [77, 2, 1, "", "cutoff_at_height"], [77, 2, 1, "", "deep_copy"], [77, 3, 1, "", "dev"], [77, 2, 1, "", "dev_clone"], [77, 2, 1, "", "dev_dist"], [77, 3, 1, "", "dev_str"], [77, 2, 1, "", "diff"], [77, 2, 1, "", "dtype"], [77, 2, 1, "", "einops_rearrange"], [77, 2, 1, "", "einops_reduce"], [77, 2, 1, "", "einops_repeat"], [77, 2, 1, "", "find_sub_container"], [77, 2, 1, "", "find_sub_structure"], [77, 2, 1, "", "flatten_key_chain"], [77, 2, 1, "", "flatten_key_chains"], [77, 2, 1, "", "format_key_chains"], [77, 2, 1, "", "from_disk_as_hdf5"], [77, 2, 1, "", "from_disk_as_json"], [77, 2, 1, "", "from_disk_as_pickled"], [77, 2, 1, "", "from_flat_list"], [77, 2, 1, "", "from_numpy"], [77, 2, 1, "", "gather"], [77, 2, 1, "", "gather_nd"], [77, 2, 1, "", "h5_file_size"], [77, 2, 1, "", "handle_inplace"], [77, 2, 1, "", "has_key"], [77, 2, 1, "", "has_key_chain"], [77, 2, 1, "", "has_nans"], [77, 2, 1, "", "identical"], [77, 2, 1, "", "identical_array_shapes"], [77, 2, 1, "", "identical_configs"], [77, 2, 1, "", "identical_structure"], [77, 2, 1, "", "if_exists"], [77, 2, 1, "", "inplace_update"], [77, 3, 1, "", "ivy"], [77, 2, 1, "", "key_chains_containing"], [77, 2, 1, "", "list_join"], [77, 2, 1, "", "list_stack"], [77, 2, 1, "", "map"], [77, 2, 1, "", "map_conts"], [77, 2, 1, "", "matrix_norm"], [77, 3, 1, "", "max_depth"], [77, 2, 1, "", "maximum"], [77, 2, 1, "", "minimum"], [77, 2, 1, "", "multi_map"], [77, 2, 1, "", "multi_map_in_static_method"], [77, 2, 1, "", "num_arrays"], [77, 2, 1, "", "overwrite_at_key_chain"], [77, 2, 1, "", "overwrite_at_key_chains"], [77, 2, 1, "", "prune_empty"], [77, 2, 1, "", "prune_key_chain"], [77, 2, 1, "", "prune_key_chains"], [77, 2, 1, "", "prune_key_from_key_chains"], [77, 2, 1, "", "prune_keys"], [77, 2, 1, "", "prune_keys_from_key_chains"], [77, 2, 1, "", "reduce"], [77, 2, 1, "", "remove_key_length_limit"], [77, 2, 1, "", "remove_print_limit"], [77, 2, 1, "", "reshape_like"], [77, 2, 1, "", "restructure"], [77, 2, 1, "", "restructure_key_chains"], [77, 2, 1, "", "set_at_key_chain"], [77, 2, 1, "", "set_at_key_chains"], [77, 2, 1, "", "set_at_keys"], [77, 2, 1, "", "set_framework"], [77, 2, 1, "", "set_ivy_backend"], [77, 3, 1, "", "shape"], [77, 3, 1, "", "shapes"], [77, 2, 1, "", "show"], [77, 2, 1, "", "show_sub_container"], [77, 2, 1, "", "shuffle"], [77, 2, 1, "", "shuffle_h5_file"], [77, 2, 1, "", "size_ordered_arrays"], [77, 2, 1, "", "slice_keys"], [77, 2, 1, "", "slice_via_key"], [77, 2, 1, "", "sort_by_key"], [77, 2, 1, "", "split"], [77, 2, 1, "", "stop_gradients"], [77, 2, 1, "", "structural_diff"], [77, 2, 1, "", "to_device"], [77, 2, 1, "", "to_dict"], [77, 2, 1, "", "to_disk_as_hdf5"], [77, 2, 1, "", "to_disk_as_json"], [77, 2, 1, "", "to_disk_as_pickled"], [77, 2, 1, "", "to_flat_list"], [77, 2, 1, "", "to_iterator"], [77, 2, 1, "", "to_iterator_keys"], [77, 2, 1, "", "to_iterator_values"], [77, 2, 1, "", "to_ivy"], [77, 2, 1, "", "to_jsonable"], [77, 2, 1, "", "to_list"], [77, 2, 1, "", "to_native"], [77, 2, 1, "", "to_numpy"], [77, 2, 1, "", "to_raw"], [77, 2, 1, "", "trim_key"], [77, 2, 1, "", "try_kc"], [77, 2, 1, "", "unify"], [77, 2, 1, "", "unstack"], [77, 2, 1, "", "update_config"], [77, 2, 1, "", "vector_norm"], [77, 2, 1, "", "with_default_key_color"], [77, 2, 1, "", "with_entries_as_lists"], [77, 2, 1, "", "with_ivy_backend"], [77, 2, 1, "", "with_key_length_limit"], [77, 2, 1, "", "with_print_indent"], [77, 2, 1, "", "with_print_limit"], [77, 2, 1, "", "with_print_line_spacing"]], "ivy.container.creation": [[81, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[81, 2, 1, "", "empty_like"], [81, 2, 1, "", "from_dlpack"], [81, 2, 1, "", "full_like"], [81, 2, 1, "", "meshgrid"], [81, 2, 1, "", "native_array"], [81, 2, 1, "", "ones_like"], [81, 2, 1, "", "static_arange"], [81, 2, 1, "", "static_asarray"], [81, 2, 1, "", "static_empty_like"], [81, 2, 1, "", "static_eye"], [81, 2, 1, "", "static_from_dlpack"], [81, 2, 1, "", "static_full_like"], [81, 2, 1, "", "static_linspace"], [81, 2, 1, "", "static_logspace"], [81, 2, 1, "", "static_meshgrid"], [81, 2, 1, "", "static_native_array"], [81, 2, 1, "", "static_ones"], [81, 2, 1, "", "static_ones_like"], [81, 2, 1, "", "static_tril"], [81, 2, 1, "", "static_triu"], [81, 2, 1, "", "static_zeros"], [81, 2, 1, "", "static_zeros_like"], [81, 2, 1, "", "tril"], [81, 2, 1, "", "triu"], [81, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[83, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[83, 2, 1, "", "astype"], [83, 2, 1, "", "broadcast_arrays"], [83, 2, 1, "", "broadcast_to"], [83, 2, 1, "", "can_cast"], [83, 2, 1, "", "dtype"], [83, 2, 1, "", "finfo"], [83, 2, 1, "", "iinfo"], [83, 2, 1, "", "is_bool_dtype"], [83, 2, 1, "", "is_float_dtype"], [83, 2, 1, "", "is_int_dtype"], [83, 2, 1, "", "is_uint_dtype"], [83, 2, 1, "", "result_type"], [83, 2, 1, "", "static_astype"], [83, 2, 1, "", "static_broadcast_arrays"], [83, 2, 1, "", "static_broadcast_to"], [83, 2, 1, "", "static_can_cast"], [83, 2, 1, "", "static_default_float_dtype"], [83, 2, 1, "", "static_dtype"], [83, 2, 1, "", "static_finfo"], [83, 2, 1, "", "static_function_supported_dtypes"], [83, 2, 1, "", "static_function_unsupported_dtypes"], [83, 2, 1, "", "static_iinfo"], [83, 2, 1, "", "static_is_bool_dtype"], [83, 2, 1, "", "static_is_float_dtype"], [83, 2, 1, "", "static_is_int_dtype"], [83, 2, 1, "", "static_is_uint_dtype"], [83, 2, 1, "", "static_result_type"]], "ivy.container.device": [[85, 1, 1, "", "ContainerWithDevice"]], "ivy.container.device.ContainerWithDevice": [[85, 2, 1, "", "dev"], [85, 2, 1, "", "static_dev"], [85, 2, 1, "", "static_to_device"], [85, 2, 1, "", "to_device"]], "ivy.container.elementwise": [[87, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[87, 2, 1, "", "abs"], [87, 2, 1, "", "acos"], [87, 2, 1, "", "acosh"], [87, 2, 1, "", "add"], [87, 2, 1, "", "asin"], [87, 2, 1, "", "asinh"], [87, 2, 1, "", "atan"], [87, 2, 1, "", "atan2"], [87, 2, 1, "", "atanh"], [87, 2, 1, "", "bitwise_and"], [87, 2, 1, "", "bitwise_invert"], [87, 2, 1, "", "bitwise_left_shift"], [87, 2, 1, "", "bitwise_or"], [87, 2, 1, "", "bitwise_right_shift"], [87, 2, 1, "", "bitwise_xor"], [87, 2, 1, "", "ceil"], [87, 2, 1, "", "cos"], [87, 2, 1, "", "cosh"], [87, 2, 1, "", "divide"], [87, 2, 1, "", "equal"], [87, 2, 1, "", "erf"], [87, 2, 1, "", "exp"], [87, 2, 1, "", "expm1"], [87, 2, 1, "", "floor"], [87, 2, 1, "", "floor_divide"], [87, 2, 1, "", "greater"], [87, 2, 1, "", "greater_equal"], [87, 2, 1, "", "isfinite"], [87, 2, 1, "", "isinf"], [87, 2, 1, "", "isnan"], [87, 2, 1, "", "less"], [87, 2, 1, "", "less_equal"], [87, 2, 1, "", "log"], [87, 2, 1, "", "log10"], [87, 2, 1, "", "log1p"], [87, 2, 1, "", "log2"], [87, 2, 1, "", "logaddexp"], [87, 2, 1, "", "logical_and"], [87, 2, 1, "", "logical_not"], [87, 2, 1, "", "logical_or"], [87, 2, 1, "", "logical_xor"], [87, 2, 1, "", "multiply"], [87, 2, 1, "", "negative"], [87, 2, 1, "", "not_equal"], [87, 2, 1, "", "positive"], [87, 2, 1, "", "pow"], [87, 2, 1, "", "remainder"], [87, 2, 1, "", "round"], [87, 2, 1, "", "sign"], [87, 2, 1, "", "sin"], [87, 2, 1, "", "sinh"], [87, 2, 1, "", "sqrt"], [87, 2, 1, "", "square"], [87, 2, 1, "", "static_abs"], [87, 2, 1, "", "static_acos"], [87, 2, 1, "", "static_acosh"], [87, 2, 1, "", "static_add"], [87, 2, 1, "", "static_asin"], [87, 2, 1, "", "static_asinh"], [87, 2, 1, "", "static_atan"], [87, 2, 1, "", "static_atan2"], [87, 2, 1, "", "static_atanh"], [87, 2, 1, "", "static_bitwise_and"], [87, 2, 1, "", "static_bitwise_invert"], [87, 2, 1, "", "static_bitwise_left_shift"], [87, 2, 1, "", "static_bitwise_or"], [87, 2, 1, "", "static_bitwise_right_shift"], [87, 2, 1, "", "static_bitwise_xor"], [87, 2, 1, "", "static_ceil"], [87, 2, 1, "", "static_cos"], [87, 2, 1, "", "static_cosh"], [87, 2, 1, "", "static_divide"], [87, 2, 1, "", "static_equal"], [87, 2, 1, "", "static_erf"], [87, 2, 1, "", "static_exp"], [87, 2, 1, "", "static_expm1"], [87, 2, 1, "", "static_floor"], [87, 2, 1, "", "static_floor_divide"], [87, 2, 1, "", "static_greater"], [87, 2, 1, "", "static_greater_equal"], [87, 2, 1, "", "static_isfinite"], [87, 2, 1, "", "static_isinf"], [87, 2, 1, "", "static_isnan"], [87, 2, 1, "", "static_less"], [87, 2, 1, "", "static_less_equal"], [87, 2, 1, "", "static_log"], [87, 2, 1, "", "static_log10"], [87, 2, 1, "", "static_log1p"], [87, 2, 1, "", "static_log2"], [87, 2, 1, "", "static_logaddexp"], [87, 2, 1, "", "static_logical_and"], [87, 2, 1, "", "static_logical_not"], [87, 2, 1, "", "static_logical_or"], [87, 2, 1, "", "static_logical_xor"], [87, 2, 1, "", "static_multiply"], [87, 2, 1, "", "static_negative"], [87, 2, 1, "", "static_not_equal"], [87, 2, 1, "", "static_positive"], [87, 2, 1, "", "static_pow"], [87, 2, 1, "", "static_remainder"], [87, 2, 1, "", "static_round"], [87, 2, 1, "", "static_sign"], [87, 2, 1, "", "static_sin"], [87, 2, 1, "", "static_sinh"], [87, 2, 1, "", "static_sqrt"], [87, 2, 1, "", "static_square"], [87, 2, 1, "", "static_subtract"], [87, 2, 1, "", "static_tan"], [87, 2, 1, "", "static_tanh"], [87, 2, 1, "", "static_trunc"], [87, 2, 1, "", "subtract"], [87, 2, 1, "", "tan"], [87, 2, 1, "", "tanh"], [87, 2, 1, "", "trunc"]], "ivy.container.general": [[89, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[89, 2, 1, "", "all_equal"], [89, 2, 1, "", "clip_vector_norm"], [89, 2, 1, "", "gather_nd"], [89, 2, 1, "", "static_all_equal"], [89, 2, 1, "", "static_clip_vector_norm"], [89, 2, 1, "", "static_gather_nd"], [89, 2, 1, "", "static_to_numpy"], [89, 2, 1, "", "to_numpy"]], "ivy.container.gradients": [[91, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[91, 2, 1, "", "adam_step"], [91, 2, 1, "", "adam_update"], [91, 2, 1, "", "gradient_descent_update"], [91, 2, 1, "", "is_variable"], [91, 2, 1, "", "lamb_update"], [91, 2, 1, "", "lars_update"], [91, 2, 1, "", "optimizer_update"], [91, 2, 1, "", "static_adam_step"], [91, 2, 1, "", "static_adam_update"], [91, 2, 1, "", "static_execute_with_gradients"], [91, 2, 1, "", "static_gradient_descent_update"], [91, 2, 1, "", "static_is_variable"], [91, 2, 1, "", "static_lamb_update"], [91, 2, 1, "", "static_lars_update"], [91, 2, 1, "", "static_optimizer_update"], [91, 2, 1, "", "static_variable"], [91, 2, 1, "", "variable"]], "ivy.container.image": [[93, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[95, 1, 1, "", "ContainerWithLayers"]], "ivy.container.layers.ContainerWithLayers": [[95, 2, 1, "", "conv1d"], [95, 2, 1, "", "depthwise_conv2d"], [95, 2, 1, "", "static_conv1d"], [95, 2, 1, "", "static_depthwise_conv2d"]], "ivy.container.wrapping": [[117, 4, 1, "", "add_ivy_container_instance_methods"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"backend": [0, 119, 129, 138, 155], "handler": [0, 138], "choose_random_backend": 2, "clear_backend_stack": 3, "current_backend": 4, "get_backend": 5, "set_backend": 6, "try_import_ivy_jax": 7, "try_import_ivy_mxnet": 8, "try_import_ivy_numpi": 9, "try_import_ivy_tf": 10, "try_import_ivy_torch": 11, "unset_backend": 12, "background": [13, 1164], "ml": 14, "explos": 14, "standard": 15, "skeptic": 15, "complimentari": 15, "vs": [15, 155], "competit": 15, "do": [15, 125], "work": [15, 21], "The": [15, 19, 140, 155], "arrai": [15, 23, 26, 120, 124, 131, 140, 168, 173, 178, 183, 188, 193, 199, 210, 215, 223, 229, 240, 245, 253, 259, 264, 272, 283, 288, 293, 298, 310, 316, 327, 333, 338, 343, 348, 354, 376, 396, 405, 410, 415, 420, 425, 430, 435, 440, 445, 450, 455, 460, 465, 470, 475, 480, 485, 490, 495, 500, 505, 510, 515, 520, 525, 530, 535, 540, 545, 550, 555, 560, 565, 570, 575, 580, 585, 590, 595, 600, 605, 612, 617, 622, 627, 632, 637, 642, 647, 652, 657, 662, 667, 673, 678, 684, 689, 701, 721, 769, 782, 798, 819, 826, 836, 847, 852, 857, 862, 867, 871, 874, 879, 883, 892, 897, 902, 907, 910, 919, 925, 930, 935, 940, 945, 950, 955, 960, 965, 970, 976, 981, 985, 989, 993, 997, 1001, 1006, 1011, 1017, 1021, 1025, 1029, 1033, 1060, 1067, 1072, 1077, 1091, 1096, 1101, 1106, 1111, 1116, 1122, 1126, 1130, 1134, 1138, 1142, 1146, 1150, 1155, 1160], "api": [15, 20, 119, 124, 132, 138, 140, 142, 143], "why": [16, 125], "unifi": [16, 140], "No": [16, 18], "more": [16, 18], "re": 16, "implement": 16, "infinit": 16, "shelf": 16, "life": 16, "contribut": [17, 1164], "set": [18, 63, 108, 129, 1088], "up": 18, "clone": 18, "ivi": [18, 19, 119, 123, 125, 126, 127, 131, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 207, 208, 210, 211, 212, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 229, 230, 231, 232, 234, 235, 237, 238, 240, 241, 242, 243, 245, 246, 247, 248, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 266, 268, 269, 271, 272, 273, 274, 283, 284, 285, 286, 288, 289, 290, 291, 293, 294, 295, 296, 298, 299, 300, 301, 305, 306, 310, 311, 312, 313, 316, 317, 318, 319, 321, 322, 324, 325, 327, 328, 329, 330, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 345, 346, 348, 349, 350, 351, 354, 355, 356, 357, 376, 377, 378, 379, 395, 396, 397, 398, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 505, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 565, 566, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 585, 586, 587, 588, 590, 591, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 612, 613, 614, 615, 617, 618, 619, 620, 622, 623, 624, 625, 627, 628, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 664, 665, 667, 668, 669, 670, 672, 673, 674, 675, 677, 678, 679, 680, 683, 684, 685, 686, 689, 690, 691, 692, 701, 702, 703, 704, 721, 722, 723, 724, 768, 769, 770, 771, 782, 783, 784, 785, 787, 788, 789, 791, 792, 794, 795, 796, 798, 799, 800, 801, 803, 804, 805, 807, 808, 809, 811, 812, 813, 818, 819, 820, 821, 826, 827, 828, 829, 836, 837, 838, 839, 847, 848, 849, 850, 852, 853, 854, 855, 857, 858, 859, 860, 862, 863, 864, 865, 867, 868, 869, 871, 872, 874, 875, 876, 877, 879, 880, 881, 883, 884, 885, 886, 888, 889, 890, 892, 893, 894, 895, 897, 898, 899, 900, 902, 903, 904, 905, 907, 908, 910, 911, 912, 913, 915, 916, 917, 919, 920, 921, 922, 924, 925, 926, 927, 929, 930, 931, 932, 934, 935, 936, 937, 939, 940, 941, 942, 944, 945, 946, 947, 949, 950, 951, 952, 954, 955, 956, 957, 960, 961, 962, 963, 965, 966, 967, 968, 970, 971, 972, 973, 976, 977, 978, 979, 981, 982, 983, 985, 986, 987, 989, 990, 991, 993, 994, 995, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1021, 1022, 1023, 1025, 1026, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1060, 1061, 1062, 1063, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1077, 1078, 1079, 1080, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1105, 1106, 1107, 1108, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1122, 1123, 1124, 1126, 1127, 1128, 1130, 1131, 1132, 1134, 1135, 1136, 1138, 1139, 1140, 1142, 1143, 1144, 1146, 1147, 1148, 1150, 1151, 1152, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1163], "pycharm": [18, 19], "virtual": 18, "environ": 18, "docker": [18, 19, 21], "us": [18, 21, 141], "miniconda": [18, 21], "venv": [18, 21], "interpret": 18, "window": 18, "maco": 18, "ubuntu": 18, "detail": 18, "hypothesi": [18, 125], "log": [18, 564, 565, 566, 567], "github": 18, "codespac": 18, "pre": [18, 136], "commit": [18, 19, 136], "basic": 19, "get": 19, "help": 19, "todo": 19, "list": 19, "issu": 19, "manag": 19, "your": 19, "fork": 19, "who": 19, "To": 19, "ask": 19, "With": 19, "command": 19, "line": 19, "browser": 19, "pull": 19, "request": 19, "small": 19, "often": 19, "interact": 19, "contain": [19, 73, 78, 132, 141, 169, 171, 174, 176, 179, 181, 184, 186, 189, 191, 194, 196, 198, 200, 208, 212, 216, 218, 221, 224, 226, 230, 232, 235, 238, 241, 243, 246, 248, 251, 254, 256, 258, 260, 263, 265, 268, 271, 273, 284, 286, 289, 291, 294, 296, 299, 301, 306, 311, 313, 317, 319, 322, 325, 328, 330, 334, 336, 339, 341, 344, 346, 349, 351, 355, 357, 377, 379, 395, 397, 406, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 438, 441, 443, 446, 448, 451, 453, 456, 458, 461, 463, 466, 468, 471, 473, 476, 478, 481, 483, 486, 488, 491, 493, 496, 498, 501, 503, 506, 508, 511, 513, 516, 518, 521, 523, 526, 528, 531, 533, 536, 538, 541, 543, 546, 548, 551, 553, 556, 558, 561, 563, 566, 568, 571, 573, 576, 578, 581, 583, 586, 588, 591, 593, 596, 598, 601, 603, 606, 608, 613, 615, 618, 620, 623, 625, 628, 630, 633, 635, 638, 640, 643, 645, 648, 650, 653, 655, 658, 660, 663, 665, 668, 670, 672, 674, 677, 679, 683, 685, 690, 692, 702, 704, 722, 724, 768, 770, 783, 785, 787, 789, 792, 794, 796, 799, 801, 803, 805, 807, 809, 811, 813, 818, 820, 827, 829, 837, 839, 848, 850, 853, 855, 858, 860, 863, 865, 868, 875, 877, 880, 884, 886, 888, 890, 893, 895, 898, 900, 903, 905, 911, 913, 915, 917, 920, 922, 924, 926, 929, 931, 934, 936, 939, 941, 944, 946, 949, 951, 954, 956, 961, 963, 966, 968, 971, 973, 977, 979, 982, 986, 990, 994, 998, 1002, 1004, 1007, 1009, 1012, 1014, 1018, 1022, 1026, 1030, 1034, 1061, 1063, 1068, 1070, 1073, 1075, 1078, 1080, 1090, 1092, 1095, 1097, 1100, 1102, 1105, 1107, 1112, 1114, 1117, 1119, 1123, 1127, 1131, 1135, 1139, 1143, 1147, 1151, 1156, 1158, 1161, 1163], "run": 19, "test": [19, 124, 125, 127], "local": 19, "most": 19, "out": [19, 120, 135], "id": 19, "open": 20, "task": 20, "function": [20, 120, 121, 125, 128, 130, 132, 133, 134, 138, 143, 155], "format": [20, 136], "frontend": [20, 126, 127, 143], "build": [21, 138], "doc": 21, "dockerless": 21, "document": 21, "pipelin": [21, 155], "make_doc": 21, "sh": 21, "entrypoint": 21, "_make_doc": 21, "generate_src_rst_fil": 21, "py": 21, "sphinx": 21, "correct_built_html_fil": 21, "remove_fil": 21, "data": [22, 37, 82, 125, 133, 141, 155, 275], "class": [22, 140, 1171], "activ": [24, 74, 166, 1172], "arraywithactiv": 25, "convers": 29, "args_to_contain": 30, "args_to_ivi": 31, "args_to_n": 32, "to_ivi": 33, "to_n": 34, "creation": [35, 80, 205], "arraywithcr": 36, "type": [37, 82, 128, 133, 155, 275], "arraywithdatatyp": 38, "devic": [39, 84, 120, 134, 368], "arraywithdevic": 40, "elementwis": [41, 86, 403], "arraywithelementwis": 42, "gener": [43, 88, 125, 687], "arraywithgener": 44, "gradient": [45, 90, 779], "arraywithgradi": 46, "imag": [47, 92], "arraywithimag": 48, "layer": [49, 94, 824, 1186], "arraywithlay": 50, "linear": [51, 96, 841, 845, 1196], "algebra": [51, 96, 845], "arraywithlinearalgebra": 52, "loss": [53, 98, 958], "arraywithloss": 54, "manipul": [55, 100, 974], "arraywithmanipul": 56, "norm": [57, 102, 1058, 1200], "arraywithnorm": 58, "random": [59, 104, 1064], "arraywithrandom": 60, "search": [61, 106, 1083], "arraywithsearch": 62, "arraywithset": 64, "sort": [65, 110, 1109, 1115, 1116, 1117, 1118], "arraywithsort": 66, "statist": [67, 112, 1120], "arraywithstatist": 68, "util": [69, 114, 1153], "arraywithutil": 70, "wrap": [71, 116, 130], "add_ivy_array_instance_method": 72, "containerwithactiv": 75, "base": 76, "containerbas": 77, "containerwithcr": 81, "containerwithdatatyp": 83, "containerwithdevic": 85, "containerwithelementwis": 87, "containerwithgener": 89, "containerwithgradi": 91, "containerwithimag": 93, "containerwithlay": 95, "containerwithlinearalgebra": 97, "containerwithloss": 99, "containerwithmanipul": 101, "containerwithnorm": 103, "containerwithrandom": 105, "containerwithsearch": 107, "containerwithset": 109, "containerwithsort": 111, "containerwithstatist": 113, "containerwithutil": 115, "add_ivy_container_instance_method": 117, "deep": 118, "dive": 118, "navig": 119, "code": 119, "categor": 119, "submodul": [119, 121], "design": [119, 137, 1164], "argument": [120, 133, 134, 135], "exampl": [120, 121, 123, 126, 127, 136], "dtype": [120, 309, 310, 311, 312], "number": 120, "oper": [120, 140, 155], "integ": 120, "sequenc": 120, "nestabl": [120, 128, 132], "helper": [121, 125], "1": 121, "2": 121, "docstr": [122, 123], "tan": [123, 127, 676, 678, 679, 680], "roll": [123, 1010, 1011, 1012, 1013], "add": [123, 419, 420, 421, 422], "import": 125, "strategi": 125, "integr": 125, "we": 125, "need": 125, "how": 125, "write": 125, "effect": 125, "bonu": 125, "extend": 125, "featur": 125, "self": 125, "consist": 125, "explicit": 125, "test_array_funct": 125, "introduct": [126, 127], "full": [127, 227], "primari": 128, "composit": 128, "mix": 128, "standalon": 128, "conveni": 128, "nativ": 131, "handl": [131, 155], "instanc": [132, 140], "method": [132, 140, 141], "static": 132, "special": 132, "modul": [133, 134, 142, 1198, 1199], "other": [133, 134], "unsupport": 133, "inplac": 135, "updat": 135, "copi": 135, "lint": 136, "check": [136, 155], "hook": 136, "automat": 136, "reformat": 136, "befor": 136, "block": 138, "framework": [138, 139, 1171], "graph": [138, 143], "compil": [138, 143, 202, 203], "monkei": 140, "patch": 140, "construct": 141, "represent": 141, "recurs": 141, "built": 141, "ins": 141, "access": 141, "save": 141, "load": 141, "comparison": 141, "custom": [141, 155], "case": 141, "compartment": 141, "configur": 141, "network": [141, 143], "weight": 141, "state": [142, 155], "initi": [142, 1177], "optim": [142, 1202, 1206], "transpil": 143, "role": 143, "convert": [143, 1175], "model": [143, 150, 155], "builder": 145, "ecosystem": 146, "gym": [147, 154], "mech": 148, "memori": [149, 154], "robot": [151, 154], "vision": [152, 154], "extens": [153, 1164], "appli": 154, "librari": 154, "mechan": 154, "faq": 155, "maintain": 155, "version": 155, "dynam": 155, "size": 155, "shape": [155, 758], "gpu": 155, "deploy": 155, "control": 155, "flow": 155, "auto": 155, "differenti": 155, "replica": 155, "parallel": 155, "support": 155, "altern": 155, "structur": 155, "func": 156, "wrapper": 156, "handle_nest": 157, "handle_out_argu": 158, "infer_devic": 159, "infer_dtyp": 160, "inputs_to_ivy_arrai": 161, "inputs_to_native_arrai": 162, "outputs_to_ivy_arrai": 163, "to_native_arrays_and_back": 164, "gelu": [167, 168, 169, 170, 1174], "static_gelu": 171, "leaky_relu": [172, 173, 174, 175], "static_leaky_relu": 176, "relu": [177, 178, 179, 180], "static_relu": 181, "sigmoid": [182, 183, 184, 185], "static_sigmoid": 186, "softmax": [187, 188, 189, 190], "static_softmax": 191, "softplu": [192, 193, 194, 195], "static_softplu": 196, "tanh": [197, 199, 200, 201, 681], "static_tanh": 198, "constant": 204, "arang": [206, 207], "static_arang": 208, "asarrai": [209, 210, 211], "static_asarrai": 212, "empti": 213, "empty_lik": [214, 215, 216, 217], "static_empty_lik": 218, "ey": [219, 220], "static_ey": 221, "from_dlpack": [222, 223, 224, 225], "static_from_dlpack": 226, "full_lik": [228, 229, 230, 231], "static_full_lik": 232, "linspac": [233, 234], "static_linspac": 235, "logspac": [236, 237], "static_logspac": 238, "meshgrid": [239, 240, 241, 242], "static_meshgrid": 243, "native_arrai": [244, 245, 246, 247], "static_native_arrai": 248, "ones": [249, 250], "static_on": 251, "ones_lik": [252, 253, 254, 255], "static_ones_lik": 256, "tril": [257, 259, 260, 261], "static_tril": 258, "triu": [262, 264, 265, 266], "static_triu": 263, "zero": [267, 269, 1185], "static_zero": 268, "zeros_lik": [270, 272, 273, 274], "static_zeros_lik": 271, "as_ivy_dtyp": 280, "as_native_dtyp": 281, "astyp": [282, 283, 284, 285], "static_astyp": 286, "broadcast_arrai": [287, 288, 289, 290], "static_broadcast_arrai": 291, "broadcast_to": [292, 293, 294, 295], "static_broadcast_to": 296, "can_cast": [297, 298, 299, 300], "static_can_cast": 301, "closest_valid_dtyp": 302, "default_dtyp": 303, "default_float_dtyp": [304, 305], "static_default_float_dtyp": 306, "default_int_dtyp": 307, "default_uint_dtyp": 308, "static_dtyp": 313, "dtype_bit": 314, "finfo": [315, 316, 317, 318], "static_finfo": 319, "function_supported_dtyp": [320, 321], "static_function_supported_dtyp": 322, "function_unsupported_dtyp": [323, 324], "static_function_unsupported_dtyp": 325, "iinfo": [326, 327, 328, 329], "static_iinfo": 330, "invalid_dtyp": 331, "is_bool_dtyp": [332, 333, 334, 335], "static_is_bool_dtyp": 336, "is_float_dtyp": [337, 338, 339, 340], "static_is_float_dtyp": 341, "is_int_dtyp": [342, 343, 344, 345], "static_is_int_dtyp": 346, "is_uint_dtyp": [347, 348, 349, 350], "static_is_uint_dtyp": 351, "promote_typ": 352, "result_typ": [353, 354, 355, 356], "static_result_typ": 357, "set_default_dtyp": 358, "set_default_float_dtyp": 359, "set_default_int_dtyp": 360, "set_default_uint_dtyp": 361, "type_promote_arrai": 362, "unset_default_dtyp": 363, "unset_default_float_dtyp": 364, "unset_default_int_dtyp": 365, "unset_default_uint_dtyp": 366, "valid_dtyp": 367, "profil": 370, "as_ivy_dev": 371, "as_native_dev": 372, "clear_mem_on_dev": 373, "default_devic": 374, "dev": [375, 376, 377, 378], "static_dev": 379, "dev_util": 380, "function_supported_devic": 381, "function_unsupported_devic": 382, "get_all_ivy_arrays_on_dev": 383, "gpu_is_avail": 384, "num_cpu_cor": 385, "num_gpu": 386, "num_ivy_arrays_on_dev": 387, "percent_used_mem_on_dev": 388, "print_all_ivy_arrays_on_dev": 389, "set_default_devic": 390, "set_split_factor": 391, "split_factor": 392, "split_func_cal": 393, "to_devic": [394, 396, 397, 398], "static_to_devic": 395, "total_mem_on_dev": 399, "tpu_is_avail": 400, "unset_default_devic": 401, "used_mem_on_dev": 402, "ab": [404, 405, 406, 407], "static_ab": 408, "aco": [409, 410, 411, 412], "static_aco": 413, "acosh": [414, 415, 416, 417], "static_acosh": 418, "static_add": 423, "asin": [424, 425, 426, 427], "static_asin": 428, "asinh": [429, 430, 431, 432], "static_asinh": 433, "atan": [434, 435, 436, 437], "static_atan": 438, "atan2": [439, 440, 441, 442], "static_atan2": 443, "atanh": [444, 445, 446, 447], "static_atanh": 448, "bitwise_and": [449, 450, 451, 452], "static_bitwise_and": 453, "bitwise_invert": [454, 455, 456, 457], "static_bitwise_invert": 458, "bitwise_left_shift": [459, 460, 461, 462], "static_bitwise_left_shift": 463, "bitwise_or": [464, 465, 466, 467], "static_bitwise_or": 468, "bitwise_right_shift": [469, 470, 471, 472], "static_bitwise_right_shift": 473, "bitwise_xor": [474, 475, 476, 477], "static_bitwise_xor": 478, "ceil": [479, 480, 481, 482], "static_ceil": 483, "co": [484, 485, 486, 487], "static_co": 488, "cosh": [489, 490, 491, 492], "static_cosh": 493, "divid": [494, 495, 496, 497], "static_divid": 498, "equal": [499, 500, 501, 502], "static_equ": 503, "erf": [504, 505, 506, 507], "static_erf": 508, "exp": [509, 510, 511, 512], "static_exp": 513, "expm1": [514, 515, 516, 517], "static_expm1": 518, "floor": [519, 520, 521, 522], "static_floor": 523, "floor_divid": [524, 525, 526, 527], "static_floor_divid": 528, "greater": [529, 530, 531, 532], "static_great": 533, "greater_equ": [534, 535, 536, 537], "static_greater_equ": 538, "isfinit": [539, 540, 541, 542], "static_isfinit": 543, "isinf": [544, 545, 546, 547], "static_isinf": 548, "isnan": [549, 550, 551, 552], "static_isnan": 553, "less": [554, 555, 556, 557], "static_less": 558, "less_equ": [559, 560, 561, 562], "static_less_equ": 563, "static_log": 568, "log10": [569, 570, 571, 572], "static_log10": 573, "log1p": [574, 575, 576, 577], "static_log1p": 578, "log2": [579, 580, 581, 582], "static_log2": 583, "logaddexp": [584, 585, 586, 587], "static_logaddexp": 588, "logical_and": [589, 590, 591, 592], "static_logical_and": 593, "logical_not": [594, 595, 596, 597], "static_logical_not": 598, "logical_or": [599, 600, 601, 602], "static_logical_or": 603, "logical_xor": [604, 605, 606, 607], "static_logical_xor": 608, "maximum": 609, "minimum": 610, "multipli": [611, 612, 613, 614], "static_multipli": 615, "neg": [616, 617, 618, 619], "static_neg": 620, "not_equ": [621, 622, 623, 624], "static_not_equ": 625, "posit": [626, 627, 628, 629], "static_posit": 630, "pow": [631, 632, 633, 634], "static_pow": 635, "remaind": [636, 637, 638, 639], "static_remaind": 640, "round": [641, 642, 643, 644], "static_round": 645, "sign": [646, 647, 648, 649], "static_sign": 650, "sin": [651, 652, 653, 654], "static_sin": 655, "sinh": [656, 657, 658, 659], "static_sinh": 660, "sqrt": [661, 662, 663, 664], "static_sqrt": 665, "squar": [666, 667, 668, 669], "static_squar": 670, "subtract": [671, 673, 674, 675], "static_subtract": 672, "static_tan": 677, "trunc": [682, 684, 685, 686], "static_trunc": 683, "all_equ": [688, 689, 690, 691], "static_all_equ": 692, "arg_info": 693, "arg_nam": 694, "array_equ": 695, "arrays_equ": 696, "assert_supports_inplac": 697, "cache_fn": 698, "clip_matrix_norm": 699, "clip_vector_norm": [700, 701, 702, 703], "static_clip_vector_norm": 704, "container_typ": 705, "copy_arrai": 706, "cumprod": 707, "cumsum": 708, "current_backend_str": 709, "default": 710, "einops_rearrang": 711, "einops_reduc": 712, "einops_repeat": 713, "exist": 714, "floormod": 715, "fourier_encod": 716, "function_supported_devices_and_dtyp": 717, "function_unsupported_devices_and_dtyp": 718, "gather": 719, "gather_nd": [720, 721, 722, 723], "static_gather_nd": 724, "get_all_arrays_in_memori": 725, "get_array_mod": 726, "get_min_bas": 727, "get_min_denomin": 728, "get_nestable_mod": 729, "get_num_dim": 730, "get_referrers_recurs": 731, "has_nan": 732, "indices_wher": 733, "inplace_arrays_support": 734, "inplace_decr": 735, "inplace_incr": 736, "inplace_upd": 737, "inplace_variables_support": 738, "is_arrai": 739, "is_ivy_arrai": 740, "is_ivy_contain": 741, "is_native_arrai": 742, "match_kwarg": 743, "multiprocess": 744, "num_arrays_in_memori": 745, "one_hot": 746, "print_all_arrays_in_memori": 747, "queue_timeout": 748, "scatter_flat": 749, "scatter_nd": 750, "set_array_mod": 751, "set_min_bas": 752, "set_min_denomin": 753, "set_nestable_mod": 754, "set_queue_timeout": 755, "set_shape_array_mod": 756, "set_tmp_dir": 757, "shape_array_mod": 759, "stable_divid": 760, "stable_pow": 761, "supports_inplac": 762, "tmp_dir": 763, "to_ivy_shap": 764, "to_list": 765, "to_native_shap": 766, "to_numpi": [767, 769, 770, 771], "static_to_numpi": 768, "to_scalar": 772, "try_else_non": 773, "unset_array_mod": 774, "unset_nestable_mod": 775, "unset_shape_array_mod": 776, "unstack": 777, "value_is_nan": 778, "adam_step": [781, 782, 783, 784], "static_adam_step": 785, "adam_upd": [786, 787, 788], "static_adam_upd": 789, "execute_with_gradi": [790, 791], "static_execute_with_gradi": 792, "gradient_descent_upd": [793, 794, 795], "static_gradient_descent_upd": 796, "is_vari": [797, 798, 799, 800], "static_is_vari": 801, "lamb_upd": [802, 803, 804], "static_lamb_upd": 805, "lars_upd": [806, 807, 808], "static_lars_upd": 809, "optimizer_upd": [810, 811, 812], "static_optimizer_upd": 813, "set_with_grad": 814, "stop_gradi": 815, "unset_with_grad": 816, "variabl": [817, 819, 820, 821], "static_vari": 818, "variable_data": 822, "with_grad": 823, "conv1d": [825, 826, 827, 828, 1187], "static_conv1d": 829, "conv1d_transpos": 830, "conv2d": [831, 1189], "conv2d_transpos": 832, "conv3d": [833, 1191], "conv3d_transpos": 834, "depthwise_conv2d": [835, 836, 837, 838], "static_depthwise_conv2d": 839, "dropout": [840, 1194], "lstm_updat": 842, "multi_head_attent": 843, "scaled_dot_product_attent": 844, "choleski": [846, 847, 848, 849], "static_choleski": 850, "cross": [851, 852, 853, 854], "static_cross": 855, "det": [856, 857, 858, 859], "static_det": 860, "diagon": [861, 862, 863, 864], "static_diagon": 865, "eigh": [866, 867, 868, 869], "eigvalsh": [870, 871, 872], "inv": [873, 874, 875, 876], "static_inv": 877, "matmul": [878, 879, 880, 881], "matrix_norm": [882, 883, 884, 885], "static_matrix_norm": 886, "matrix_pow": [887, 888, 889], "static_matrix_pow": 890, "matrix_rank": [891, 892, 893, 894], "static_matrix_rank": 895, "matrix_transpos": [896, 897, 898, 899], "static_matrix_transpos": 900, "outer": [901, 902, 903, 904], "static_out": 905, "pinv": [906, 907, 908], "qr": [909, 910, 911, 912], "static_qr": 913, "slogdet": [914, 915, 916], "static_slogdet": 917, "solv": [918, 919, 920, 921], "static_solv": 922, "svd": [923, 925, 926, 927], "static_svd": 924, "svdval": [928, 930, 931, 932], "static_svdv": 929, "tensordot": [933, 935, 936, 937], "static_tensordot": 934, "trace": [938, 940, 941, 942], "static_trac": 939, "vecdot": [943, 945, 946, 947], "static_vecdot": 944, "vector_norm": [948, 950, 951, 952], "static_vector_norm": 949, "vector_to_skew_symmetric_matrix": [953, 955, 956, 957], "static_vector_to_skew_symmetric_matrix": 954, "binary_cross_entropi": [959, 960, 961, 962], "static_binary_cross_entropi": 963, "cross_entropi": [964, 965, 966, 967], "static_cross_entropi": 968, "sparse_cross_entropi": [969, 970, 971, 972], "static_sparse_cross_entropi": 973, "clip": [975, 976, 977, 978], "static_clip": 979, "concat": [980, 981, 982, 983], "constant_pad": [984, 985, 986, 987], "expand_dim": [988, 989, 990, 991], "flip": [992, 993, 994, 995], "permute_dim": [996, 997, 998, 999], "repeat": [1000, 1001, 1002, 1003], "static_repeat": 1004, "reshap": [1005, 1006, 1007, 1008], "static_reshap": 1009, "static_rol": 1014, "split": 1015, "squeez": [1016, 1017, 1018, 1019], "stack": [1020, 1021, 1022, 1023], "swapax": [1024, 1025, 1026, 1027], "tile": [1028, 1029, 1030, 1031], "zero_pad": [1032, 1033, 1034, 1035], "meta": 1036, "fomaml_step": 1037, "maml_step": 1038, "reptile_step": 1039, "nest": 1040, "all_nested_indic": 1041, "copy_nest": 1042, "index_nest": 1043, "insert_into_nest_at_index": 1044, "insert_into_nest_at_indic": 1045, "map": 1046, "map_nest_at_index": 1047, "map_nest_at_indic": 1048, "multi_index_nest": 1049, "nested_ani": 1050, "nested_indices_wher": 1051, "nested_map": 1052, "nested_multi_map": 1053, "prune_nest_at_index": 1054, "prune_nest_at_indic": 1055, "set_nest_at_index": 1056, "set_nest_at_indic": 1057, "layer_norm": [1059, 1060, 1061, 1062], "static_layer_norm": 1063, "multinomi": 1065, "randint": [1066, 1067, 1068, 1069], "static_randint": 1070, "random_norm": [1071, 1072, 1073, 1074], "static_random_norm": 1075, "random_uniform": [1076, 1077, 1078, 1079], "static_random_uniform": 1080, "seed": 1081, "shuffl": 1082, "argmax": 1084, "argmin": 1085, "nonzero": 1086, "where": 1087, "unique_al": [1089, 1091, 1092, 1093], "static_unique_al": 1090, "unique_count": [1094, 1096, 1097, 1098], "static_unique_count": 1095, "unique_invers": [1099, 1101, 1102, 1103], "static_unique_invers": 1100, "unique_valu": [1104, 1106, 1107, 1108], "static_unique_valu": 1105, "argsort": [1110, 1111, 1112, 1113], "static_argsort": 1114, "static_sort": 1119, "einsum": [1121, 1122, 1123, 1124], "max": [1125, 1126, 1127, 1128], "mean": [1129, 1130, 1131, 1132], "min": [1133, 1134, 1135, 1136], "prod": [1137, 1138, 1139, 1140], "std": [1141, 1142, 1143, 1144], "sum": [1145, 1146, 1147, 1148], "var": [1149, 1150, 1151, 1152], "all": [1154, 1155, 1156, 1157], "static_al": 1158, "ani": [1159, 1160, 1161, 1162], "static_ani": 1163, "content": 1164, "overview": 1164, "quick": 1164, "start": 1164, "roadmap": [1164, 1170], "citat": 1164, "inspect": 1167, "add_array_spec": 1168, "fn_array_spec": 1169, "geglu": 1173, "to_ivy_modul": 1176, "firstlayersiren": 1179, "glorotuniform": 1180, "Ones": 1182, "siren": 1183, "conv1dtranspos": 1188, "conv2dtranspos": 1190, "conv3dtranspos": 1192, "depthwiseconv2d": 1193, "lstm": 1195, "multiheadattent": 1197, "layernorm": 1201, "adam": 1203, "lamb": 1204, "lar": 1205, "sgd": 1207, "sequenti": [1208, 1209], "verbos": 1211, "cprint": 1212}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})